openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    webhook-config-insecure-ssl:
      oneOf:
      - type: string
        description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
        example: '"0"'
      - type: number
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          $ref: '#/components/schemas/webhook-config-url'
        content_type:
          $ref: '#/components/schemas/webhook-config-content-type'
        secret:
          $ref: '#/components/schemas/webhook-config-secret'
        insecure_ssl:
          $ref: '#/components/schemas/webhook-config-insecure-ssl'
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          format: int64
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          format: int64
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          format: int64
          example: 123
          nullable: true
        throttled_at:
          description: Time when the webhook delivery was throttled.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
          nullable: true
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        throttled_at:
          description: Time when the webhook delivery was throttled.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
      - request
      - response
    app-permissions:
      title: App Permissions
      type: object
      description: The permissions granted to the user access token.
      properties:
        actions:
          type: string
          description: The level of permission to grant the access token for GitHub Actions workflows, workflow runs, and artifacts.
          enum:
          - read
          - write
        administration:
          type: string
          description: The level of permission to grant the access token for repository creation, deletion, settings, teams, and collaborators creation.
          enum:
          - read
          - write
        checks:
          type: string
          description: The level of permission to grant the access token for checks on code.
          enum:
          - read
          - write
        codespaces:
          type: string
          description: The level of permission to grant the access token to create, edit, delete, and list Codespaces.
          enum:
          - read
          - write
        contents:
          type: string
          description: The level of permission to grant the access token for repository contents, commits, branches, downloads, releases, and merges.
          enum:
          - read
          - write
        dependabot_secrets:
          type: string
          description: The level of permission to grant the access token to manage Dependabot secrets.
          enum:
          - read
          - write
        deployments:
          type: string
          description: The level of permission to grant the access token for deployments and deployment statuses.
          enum:
          - read
          - write
        environments:
          type: string
          description: The level of permission to grant the access token for managing repository environments.
          enum:
          - read
          - write
        issues:
          type: string
          description: The level of permission to grant the access token for issues and related comments, assignees, labels, and milestones.
          enum:
          - read
          - write
        metadata:
          type: string
          description: The level of permission to grant the access token to search repositories, list collaborators, and access repository metadata.
          enum:
          - read
          - write
        packages:
          type: string
          description: The level of permission to grant the access token for packages published to GitHub Packages.
          enum:
          - read
          - write
        pages:
          type: string
          description: The level of permission to grant the access token to retrieve Pages statuses, configuration, and builds, as well as create new builds.
          enum:
          - read
          - write
        pull_requests:
          type: string
          description: The level of permission to grant the access token for pull requests and related comments, assignees, labels, milestones, and merges.
          enum:
          - read
          - write
        repository_custom_properties:
          type: string
          description: The level of permission to grant the access token to view and edit custom properties for a repository, when allowed by the property.
          enum:
          - read
          - write
        repository_hooks:
          type: string
          description: The level of permission to grant the access token to manage the post-receive hooks for a repository.
          enum:
          - read
          - write
        repository_projects:
          type: string
          description: The level of permission to grant the access token to manage repository projects, columns, and cards.
          enum:
          - read
          - write
          - admin
        secret_scanning_alerts:
          type: string
          description: The level of permission to grant the access token to view and manage secret scanning alerts.
          enum:
          - read
          - write
        secrets:
          type: string
          description: The level of permission to grant the access token to manage repository secrets.
          enum:
          - read
          - write
        security_events:
          type: string
          description: The level of permission to grant the access token to view and manage security events like code scanning alerts.
          enum:
          - read
          - write
        single_file:
          type: string
          description: The level of permission to grant the access token to manage just a single file.
          enum:
          - read
          - write
        statuses:
          type: string
          description: The level of permission to grant the access token for commit statuses.
          enum:
          - read
          - write
        vulnerability_alerts:
          type: string
          description: The level of permission to grant the access token to manage Dependabot alerts.
          enum:
          - read
          - write
        workflows:
          type: string
          description: The level of permission to grant the access token to update GitHub Actions workflow files.
          enum:
          - write
        members:
          type: string
          description: The level of permission to grant the access token for organization teams and members.
          enum:
          - read
          - write
        organization_administration:
          type: string
          description: The level of permission to grant the access token to manage access to an organization.
          enum:
          - read
          - write
        organization_custom_roles:
          type: string
          description: The level of permission to grant the access token for custom repository roles management.
          enum:
          - read
          - write
        organization_custom_org_roles:
          type: string
          description: The level of permission to grant the access token for custom organization roles management.
          enum:
          - read
          - write
        organization_custom_properties:
          type: string
          description: The level of permission to grant the access token for custom property management.
          enum:
          - read
          - write
          - admin
        organization_copilot_seat_management:
          type: string
          description: The level of permission to grant the access token for managing access to GitHub Copilot for members of an organization with a Copilot Business subscription. This property is in public preview and is subject to change.
          enum:
          - write
        organization_announcement_banners:
          type: string
          description: The level of permission to grant the access token to view and manage announcement banners for an organization.
          enum:
          - read
          - write
        organization_events:
          type: string
          description: The level of permission to grant the access token to view events triggered by an activity in an organization.
          enum:
          - read
        organization_hooks:
          type: string
          description: The level of permission to grant the access token to manage the post-receive hooks for an organization.
          enum:
          - read
          - write
        organization_personal_access_tokens:
          type: string
          description: The level of permission to grant the access token for viewing and managing fine-grained personal access token requests to an organization.
          enum:
          - read
          - write
        organization_personal_access_token_requests:
          type: string
          description: The level of permission to grant the access token for viewing and managing fine-grained personal access tokens that have been approved by an organization.
          enum:
          - read
          - write
        organization_plan:
          type: string
          description: The level of permission to grant the access token for viewing an organization's plan.
          enum:
          - read
        organization_projects:
          type: string
          description: The level of permission to grant the access token to manage organization projects and projects public preview (where available).
          enum:
          - read
          - write
          - admin
        organization_packages:
          type: string
          description: The level of permission to grant the access token for organization packages published to GitHub Packages.
          enum:
          - read
          - write
        organization_secrets:
          type: string
          description: The level of permission to grant the access token to manage organization secrets.
          enum:
          - read
          - write
        organization_self_hosted_runners:
          type: string
          description: The level of permission to grant the access token to view and manage GitHub Actions self-hosted runners available to an organization.
          enum:
          - read
          - write
        organization_user_blocking:
          type: string
          description: The level of permission to grant the access token to view and manage users blocked by the organization.
          enum:
          - read
          - write
        team_discussions:
          type: string
          description: The level of permission to grant the access token to manage team discussions and related comments.
          enum:
          - read
          - write
        email_addresses:
          type: string
          description: The level of permission to grant the access token to manage the email addresses belonging to a user.
          enum:
          - read
          - write
        followers:
          type: string
          description: The level of permission to grant the access token to manage the followers belonging to a user.
          enum:
          - read
          - write
        git_ssh_keys:
          type: string
          description: The level of permission to grant the access token to manage git SSH keys.
          enum:
          - read
          - write
        gpg_keys:
          type: string
          description: The level of permission to grant the access token to view and manage GPG keys belonging to a user.
          enum:
          - read
          - write
        interaction_limits:
          type: string
          description: The level of permission to grant the access token to view and manage interaction limits on a repository.
          enum:
          - read
          - write
        profile:
          type: string
          description: The level of permission to grant the access token to manage the profile settings belonging to a user.
          enum:
          - write
        starring:
          type: string
          description: The level of permission to grant the access token to list and manage repositories a user is starring.
          enum:
          - read
          - write
      example:
        contents: read
        issues: read
        deployments: write
        single_file: read
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    installation:
      title: Installation
      description: Installation
      type: object
      properties:
        id:
          description: The ID of the installation.
          type: integer
          example: 1
        account:
          nullable: true
          anyOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/enterprise'
        repository_selection:
          description: Describe whether all repositories have been selected or there's a selection involved
          type: string
          enum:
          - all
          - selected
        access_tokens_url:
          type: string
          format: uri
          example: https://api.github.com/app/installations/1/access_tokens
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/installation/repositories
        html_url:
          type: string
          format: uri
          example: https://github.com/organizations/github/settings/installations/1
        app_id:
          type: integer
          example: 1
        client_id:
          type: string
          example: Iv1.ab1112223334445c
        target_id:
          description: The ID of the user or organization this token is being scoped to.
          type: integer
        target_type:
          type: string
          example: Organization
        permissions:
          $ref: '#/components/schemas/app-permissions'
        events:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        single_file_name:
          type: string
          example: config.yaml
          nullable: true
        has_multiple_single_files:
          type: boolean
          example: true
        single_file_paths:
          type: array
          items:
            type: string
          example:
          - config.yml
          - .github/issue_TEMPLATE.md
        app_slug:
          type: string
          example: github-actions
        suspended_by:
          $ref: '#/components/schemas/nullable-simple-user'
        suspended_at:
          type: string
          format: date-time
          nullable: true
        contact_email:
          type: string
          example: '"test_13f1e99741e3e004@d7e1eb0bc0a1ba12.com"'
          nullable: true
      required:
      - id
      - app_id
      - app_slug
      - target_id
      - target_type
      - single_file_name
      - repository_selection
      - access_tokens_url
      - html_url
      - repositories_url
      - events
      - account
      - permissions
      - created_at
      - updated_at
      - suspended_by
      - suspended_at
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory\
            \ comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual\
            \ is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members\
            \ of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    issue-type:
      title: Issue Type
      description: The type of issue.
      type: object
      nullable: true
      properties:
        id:
          type: integer
          description: The unique identifier of the issue type.
        node_id:
          type: string
          description: The node identifier of the issue type.
        name:
          type: string
          description: The name of the issue type.
        description:
          type: string
          description: The description of the issue type.
          nullable: true
        color:
          type: string
          description: The color of the issue type.
          enum:
          - gray
          - blue
          - green
          - yellow
          - orange
          - red
          - pink
          - purple
          nullable: true
        created_at:
          type: string
          description: The time the issue type created.
          format: date-time
        updated_at:
          type: string
          description: The time the issue type last updated.
          format: date-time
        is_enabled:
          type: boolean
          description: The enabled state of the issue type.
      required:
      - id
      - node_id
      - name
      - description
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          description: 'Enable or disable GitHub Advanced Security for the repository.


            For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

            '
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    organization-simple:
      title: Organization Simple
      description: A GitHub organization.
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
    organization-full:
      title: Organization Full
      description: Organization Full
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
          description: 'The number of collaborators on private repositories.


            This field may be null if the number of private repositories is over 50,000.'
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        default_repository_branch:
          type: string
          example: main
          nullable: true
          description: The default branch for repositories created in this organization.
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_delete_repositories:
          type: boolean
          example: true
        members_can_change_repo_visibility:
          type: boolean
          example: true
        members_can_invite_outside_collaborators:
          type: boolean
          example: true
        members_can_delete_issues:
          type: boolean
          example: true
        display_commenter_full_name_setting_enabled:
          type: boolean
          example: true
        readers_can_create_discussions:
          type: boolean
          example: true
        members_can_create_teams:
          type: boolean
          example: true
        members_can_view_dependency_insights:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        advanced_security_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether GitHub Advanced Security is enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        dependabot_alerts_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        dependabot_security_updates_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        dependency_graph_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        secret_scanning_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        secret_scanning_push_protection_enabled_for_new_repositories:
          type: boolean
          example: false
          description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


            Whether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.


            This field is only visible to organization owners or members of a team with the security manager role.'
          deprecated: true
        secret_scanning_push_protection_custom_link_enabled:
          type: boolean
          example: false
          description: Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.
        secret_scanning_push_protection_custom_link:
          type: string
          example: https://github.com/test-org/test-repo/blob/main/README.md
          nullable: true
          description: An optional URL string to display to contributors who are blocked from pushing a secret.
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        updated_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
          nullable: true
        deploy_keys_enabled_for_repositories:
          type: boolean
          example: false
          description: Controls whether or not deploy keys may be added and used for repositories in the organization.
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
      - archived_at
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    organization-invitation:
      title: Organization Invitation
      description: Organization Invitation
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
        created_at:
          type: string
        failed_at:
          type: string
          nullable: true
        failed_reason:
          type: string
          nullable: true
        inviter:
          $ref: '#/components/schemas/simple-user'
        team_count:
          type: integer
        node_id:
          type: string
          example: '"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x"'
        invitation_teams_url:
          type: string
          example: '"https://api.github.com/organizations/16/invitations/1/teams"'
        invitation_source:
          type: string
          example: '"member"'
      required:
      - id
      - login
      - email
      - role
      - created_at
      - inviter
      - team_count
      - invitation_teams_url
      - node_id
    org-hook:
      title: Org Hook
      description: Org Hook
      type: object
      properties:
        id:
          type: integer
          example: 1
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name:
          type: string
          example: web
        events:
          type: array
          example:
          - push
          - pull_request
          items:
            type: string
        active:
          type: boolean
          example: true
        config:
          type: object
          properties:
            url:
              type: string
              example: '"http://example.com/2"'
            insecure_ssl:
              type: string
              example: '"0"'
            content_type:
              type: string
              example: '"form"'
            secret:
              type: string
              example: '"********"'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        type:
          type: string
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
    api-insights-route-stats:
      title: Route Stats
      description: API Insights usage route stats for an actor
      type: array
      items:
        type: object
        properties:
          http_method:
            description: The HTTP method
            type: string
          api_route:
            description: The API path's route template
            type: string
          total_request_count:
            description: The total number of requests within the queried time period
            type: integer
            format: int64
          rate_limited_request_count:
            description: The total number of requests that were rate limited within the queried time period
            type: integer
            format: int64
          last_rate_limited_timestamp:
            type: string
            nullable: true
          last_request_timestamp:
            type: string
    api-insights-subject-stats:
      title: Subject Stats
      description: API Insights usage subject stats for an organization
      type: array
      items:
        type: object
        properties:
          subject_type:
            type: string
          subject_name:
            type: string
          subject_id:
            type: integer
            format: int64
          total_request_count:
            type: integer
          rate_limited_request_count:
            type: integer
          last_rate_limited_timestamp:
            type: string
            nullable: true
          last_request_timestamp:
            type: string
    api-insights-summary-stats:
      title: Summary Stats
      description: API Insights usage summary stats for an organization
      type: object
      properties:
        total_request_count:
          description: The total number of requests within the queried time period
          type: integer
          format: int64
        rate_limited_request_count:
          description: The total number of requests that were rate limited within the queried time period
          type: integer
          format: int64
    api-insights-time-stats:
      title: Time Stats
      description: API Insights usage time stats for an organization
      type: array
      items:
        type: object
        properties:
          timestamp:
            type: string
          total_request_count:
            type: integer
            format: int64
          rate_limited_request_count:
            type: integer
            format: int64
    api-insights-user-stats:
      title: User Stats
      description: API Insights usage stats for a user
      type: array
      items:
        type: object
        properties:
          actor_type:
            type: string
          actor_name:
            type: string
          actor_id:
            type: integer
            format: int64
          integration_id:
            type: integer
            format: int64
            nullable: true
          oauth_application_id:
            type: integer
            format: int64
            nullable: true
          total_request_count:
            type: integer
          rate_limited_request_count:
            type: integer
          last_rate_limited_timestamp:
            type: string
            nullable: true
          last_request_timestamp:
            type: string
    organization-create-issue-type:
      type: object
      properties:
        name:
          description: Name of the issue type.
          type: string
        is_enabled:
          description: Whether or not the issue type is enabled at the organization level.
          type: boolean
        description:
          description: Description of the issue type.
          type: string
          nullable: true
        color:
          description: Color for the issue type.
          type: string
          enum:
          - gray
          - blue
          - green
          - yellow
          - orange
          - red
          - pink
          - purple
          nullable: true
      required:
      - name
      - is_enabled
    organization-update-issue-type:
      type: object
      properties:
        name:
          description: Name of the issue type.
          type: string
        is_enabled:
          description: Whether or not the issue type is enabled at the organization level.
          type: boolean
        description:
          description: Description of the issue type.
          type: string
          nullable: true
        color:
          description: Color for the issue type.
          type: string
          enum:
          - gray
          - blue
          - green
          - yellow
          - orange
          - red
          - pink
          - purple
          nullable: true
      required:
      - name
      - is_enabled
    org-membership:
      title: Org Membership
      description: Org Membership
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat/memberships/defunkt
        state:
          type: string
          description: The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.
          example: active
          enum:
          - active
          - pending
        role:
          type: string
          description: The user's membership type in the organization.
          example: admin
          enum:
          - admin
          - member
          - billing_manager
        direct_membership:
          type: boolean
          description: Whether the user has direct membership in the organization.
          example: true
        enterprise_teams_providing_indirect_membership:
          type: array
          description: 'The slugs of the enterprise teams providing the user with indirect membership in the organization.

            A limit of 100 enterprise team slugs is returned.'
          maxItems: 100
          items:
            type: string
          example:
          - ent:team-one
          - ent:team-two
        organization_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/octocat
        organization:
          $ref: '#/components/schemas/organization-simple'
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        permissions:
          type: object
          properties:
            can_create_repository:
              type: boolean
          required:
          - can_create_repository
      required:
      - state
      - role
      - organization_url
      - url
      - organization
      - user
    organization-role:
      title: Organization Role
      description: Organization roles
      type: object
      properties:
        id:
          description: The unique identifier of the role.
          type: integer
          format: int64
        name:
          description: The name of the role.
          type: string
        description:
          description: A short description about who this role is for or what permissions it grants.
          type: string
          nullable: true
        base_role:
          type: string
          nullable: true
          description: The system role from which this role inherits permissions.
          enum:
          - read
          - triage
          - write
          - maintain
          - admin
        source:
          type: string
          nullable: true
          description: Source answers the question, "where did this role come from?"
          enum:
          - Organization
          - Enterprise
          - Predefined
        permissions:
          description: A list of permissions included in this role.
          type: array
          items:
            type: string
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          description: The date and time the role was created.
          type: string
          format: date-time
        updated_at:
          description: The date and time the role was last updated.
          type: string
          format: date-time
      required:
      - id
      - name
      - permissions
      - organization
      - created_at
      - updated_at
    team-role-assignment:
      title: A Role Assignment for a Team
      description: The Relationship a Team has with a role.
      type: object
      properties:
        assignment:
          type: string
          description: Determines if the team has a direct, indirect, or mixed relationship to a role
          enum:
          - direct
          - indirect
          - mixed
          example: direct
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
    user-role-assignment:
      title: A Role Assignment for a User
      description: The Relationship a User has with a role.
      type: object
      properties:
        assignment:
          type: string
          description: Determines if the user has a direct, indirect, or mixed relationship to a role
          enum:
          - direct
          - indirect
          - mixed
          example: direct
        inherited_from:
          description: Team the user has gotten the role through
          type: array
          items:
            $ref: '#/components/schemas/team-simple'
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    organization-programmatic-access-grant-request:
      title: Simple Organization Programmatic Access Grant Request
      description: Minimal representation of an organization programmatic access grant request for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the request for access via fine-grained personal access token. The `pat_request_id` used to review PAT requests.
        reason:
          type: string
          nullable: true
          description: Reason for requesting access.
        owner:
          $ref: '#/components/schemas/simple-user'
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories requested to be accessed via fine-grained personal access token. Should only be followed when `repository_selection` is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        created_at:
          type: string
          description: Date and time when the request for access was created.
        token_id:
          type: integer
          description: Unique identifier of the user's token. This field can also be found in audit log events and the organization's settings for their PAT grants.
        token_name:
          type: string
          description: The name given to the user's token. This field can also be found in an organization's settings page for Active Tokens.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access token was last used for authentication.
      required:
      - id
      - reason
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - created_at
      - token_id
      - token_name
      - token_expired
      - token_expires_at
      - token_last_used_at
    organization-programmatic-access-grant:
      title: Organization Programmatic Access Grant
      description: Minimal representation of an organization programmatic access grant for enumerations
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier of the fine-grained personal access token grant. The `pat_id` used to get details about an approved fine-grained personal access token.
        owner:
          $ref: '#/components/schemas/simple-user'
        repository_selection:
          type: string
          enum:
          - none
          - all
          - subset
          description: Type of repository selection requested.
        repositories_url:
          type: string
          description: URL to the list of repositories the fine-grained personal access token can access. Only follow when `repository_selection` is `subset`.
        permissions:
          type: object
          description: Permissions requested, categorized by type of permission.
          properties:
            organization:
              type: object
              additionalProperties:
                type: string
            repository:
              type: object
              additionalProperties:
                type: string
            other:
              type: object
              additionalProperties:
                type: string
        access_granted_at:
          type: string
          description: Date and time when the fine-grained personal access token was approved to access the organization.
        token_id:
          type: integer
          description: Unique identifier of the user's token. This field can also be found in audit log events and the organization's settings for their PAT grants.
        token_name:
          type: string
          description: The name given to the user's token. This field can also be found in an organization's settings page for Active Tokens.
        token_expired:
          type: boolean
          description: Whether the associated fine-grained personal access token has expired.
        token_expires_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access token expires.
        token_last_used_at:
          type: string
          nullable: true
          description: Date and time when the associated fine-grained personal access token was last used for authentication.
      required:
      - id
      - owner
      - repository_selection
      - repositories_url
      - permissions
      - access_granted_at
      - token_id
      - token_name
      - token_expired
      - token_expires_at
      - token_last_used_at
    custom-property:
      title: Organization Custom Property
      description: Custom property defined on an organization
      type: object
      properties:
        property_name:
          type: string
          description: The name of the property
        url:
          type: string
          format: uri
          description: The URL that can be used to fetch, update, or delete info about this property via the API.
        source_type:
          type: string
          description: The source type of the property
          enum:
          - organization
          - enterprise
          example: organization
        value_type:
          type: string
          example: single_select
          enum:
          - string
          - single_select
          - multi_select
          - true_false
          description: The type of the value for the property
        required:
          type: boolean
          description: Whether the property is required.
        default_value:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
          nullable: true
          description: Default value of the property
        description:
          type: string
          nullable: true
          description: Short description of the property
        allowed_values:
          type: array
          items:
            type: string
            maxLength: 75
          maxItems: 200
          nullable: true
          description: 'An ordered list of the allowed values of the property.

            The property can have up to 200 allowed values.'
        values_editable_by:
          type: string
          nullable: true
          enum:
          - org_actors
          - org_and_repo_actors
          example: org_actors
          description: Who can edit the values of the property
      required:
      - property_name
      - value_type
    custom-property-set-payload:
      title: Custom Property Set Payload
      description: Custom property set payload
      type: object
      properties:
        value_type:
          type: string
          example: single_select
          enum:
          - string
          - single_select
          - multi_select
          - true_false
          description: The type of the value for the property
        required:
          type: boolean
          description: Whether the property is required.
        default_value:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
          nullable: true
          description: Default value of the property
        description:
          type: string
          nullable: true
          description: Short description of the property
        allowed_values:
          type: array
          items:
            type: string
            maxLength: 75
          maxItems: 200
          nullable: true
          description: 'An ordered list of the allowed values of the property.

            The property can have up to 200 allowed values.'
        values_editable_by:
          type: string
          nullable: true
          enum:
          - org_actors
          - org_and_repo_actors
          example: org_actors
          description: Who can edit the values of the property
      required:
      - value_type
    custom-property-value:
      title: Custom Property Value
      description: Custom property name and associated value
      type: object
      properties:
        property_name:
          type: string
          description: The name of the property
        value:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
          description: The value assigned to the property
          nullable: true
      required:
      - property_name
      - value
    org-repo-custom-property-values:
      title: Organization Repository Custom Property Values
      description: List of custom property values for a repository
      type: object
      properties:
        repository_id:
          type: integer
          example: 1296269
        repository_name:
          type: string
          example: Hello-World
        repository_full_name:
          type: string
          example: octocat/Hello-World
        properties:
          type: array
          items:
            $ref: '#/components/schemas/custom-property-value'
          description: List of custom property names and associated values
      required:
      - repository_id
      - repository_name
      - repository_full_name
      - properties
    ruleset-version:
      title: Ruleset version
      type: object
      description: The historical version of a ruleset
      required:
      - version_id
      - actor
      - updated_at
      properties:
        version_id:
          type: integer
          description: The ID of the previous version of the ruleset
        actor:
          type: object
          description: The actor who updated the ruleset
          properties:
            id:
              type: integer
            type:
              type: string
        updated_at:
          type: string
          format: date-time
    ruleset-version-with-state:
      allOf:
      - $ref: '#/components/schemas/ruleset-version'
      - type: object
        required:
        - state
        properties:
          state:
            type: object
            description: The state of the ruleset version
  examples:
    webhook-config:
      value:
        content_type: json
        insecure_ssl: '0'
        secret: '********'
        url: https://example.com/webhook
    hook-delivery-items:
      value:
      - id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        throttled_at: '2019-06-03T00:57:16Z'
      - id: 123456789
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-04T00:57:16Z'
        redelivery: true
        duration: 0.28
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        throttled_at: null
    hook-delivery:
      value:
        id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        url: https://www.example.com
        throttled_at: '2019-06-03T00:57:16Z'
        request:
          headers:
            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516
            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
            Accept: '*/*'
            X-GitHub-Hook-ID: '42'
            User-Agent: GitHub-Hookshot/b8c71d8
            X-GitHub-Event: issues
            X-GitHub-Hook-Installation-Target-ID: '123'
            X-GitHub-Hook-Installation-Target-Type: repository
            content-type: application/json
            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          payload:
            action: opened
            issue:
              body: foo
            repository:
              id: 123
        response:
          headers:
            Content-Type: text/html;charset=utf-8
          payload: ok
    organization-simple-items:
      value:
      - login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
    organization-full:
      value:
        login: github
        id: 1
        node_id: MDEyOk9yZ2FuaXphdGlvbjE=
        url: https://api.github.com/orgs/github
        repos_url: https://api.github.com/orgs/github/repos
        events_url: https://api.github.com/orgs/github/events
        hooks_url: https://api.github.com/orgs/github/hooks
        issues_url: https://api.github.com/orgs/github/issues
        members_url: https://api.github.com/orgs/github/members{/member}
        public_members_url: https://api.github.com/orgs/github/public_members{/member}
        avatar_url: https://github.com/images/error/octocat_happy.gif
        description: A great organization
        name: github
        company: GitHub
        blog: https://github.com/blog
        location: San Francisco
        email: octocat@github.com
        twitter_username: github
        is_verified: true
        has_organization_projects: true
        has_repository_projects: true
        public_repos: 2
        public_gists: 1
        followers: 20
        following: 0
        html_url: https://github.com/octocat
        created_at: '2008-01-14T04:33:35Z'
        type: Organization
        total_private_repos: 100
        owned_private_repos: 100
        private_gists: 81
        disk_usage: 10000
        collaborators: 8
        billing_email: mona@github.com
        plan:
          name: Medium
          space: 400
          private_repos: 20
          filled_seats: 4
          seats: 5
        default_repository_permission: read
        default_repository_branch: main
        members_can_create_repositories: true
        two_factor_requirement_enabled: true
        members_allowed_repository_creation_type: all
        members_can_create_public_repositories: false
        members_can_create_private_repositories: false
        members_can_create_internal_repositories: false
        members_can_create_pages: true
        members_can_create_public_pages: true
        members_can_create_private_pages: true
        members_can_delete_repositories: true
        members_can_change_repo_visibility: true
        members_can_invite_outside_collaborators: true
        members_can_delete_issues: false
        display_commenter_full_name_setting_enabled: false
        readers_can_create_discussions: true
        members_can_create_teams: true
        members_can_view_dependency_insights: true
        members_can_fork_private_repositories: false
        web_commit_signoff_required: false
        updated_at: '2014-03-03T18:58:10Z'
        deploy_keys_enabled_for_repositories: false
        dependency_graph_enabled_for_new_repositories: false
        dependabot_alerts_enabled_for_new_repositories: false
        dependabot_security_updates_enabled_for_new_repositories: false
        advanced_security_enabled_for_new_repositories: false
        secret_scanning_enabled_for_new_repositories: false
        secret_scanning_push_protection_enabled_for_new_repositories: false
        secret_scanning_push_protection_custom_link: https://github.com/octo-org/octo-repo/blob/main/im-blocked.md
        secret_scanning_push_protection_custom_link_enabled: false
    bulk-subject-digest-body:
      value:
        subject_digests:
        - sha256:abc123
        - sha512:def456
    bulk-subject-digest-body-with-predicate-type:
      value:
        subject_digests:
        - sha256:abc123
        - sha512:def456
        predicateType: provenance
    list-attestations-bulk:
      value:
        attestations_subject_digests:
        - sha256:abc:
          - bundle:
              mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
              verificationMaterial:
                tlogEntries:
                - logIndex: '97913980'
                  logId:
                    keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                  kindVersion:
                    kind: dsse
                    version: 0.0.1
                  integratedTime: '1716998992'
                  inclusionPromise:
                    signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                  inclusionProof:
                    logIndex: '93750549'
                    rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                    treeSize: '93750551'
                    hashes:
                    - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                    - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                    - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                    - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                    - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                    - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                    - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                    - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                    - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                    - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                    - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                    - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                    - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                    checkpoint:
                      envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                  canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
                timestampVerificationData: {}
                certificate:
                  rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
              dsseEnvelope:
                payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
                payloadType: application/vnd.in-toto+json
                signatures:
                - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
            repository_id: 1
          - bundle:
              mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
              verificationMaterial:
                tlogEntries:
                - logIndex: '97913980'
                  logId:
                    keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                  kindVersion:
                    kind: dsse
                    version: 0.0.1
                  integratedTime: '1716998992'
                  inclusionPromise:
                    signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                  inclusionProof:
                    logIndex: '93750549'
                    rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                    treeSize: '93750551'
                    hashes:
                    - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                    - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                    - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                    - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                    - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                    - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                    - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                    - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                    - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                    - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                    - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                    - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                    - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                    checkpoint:
                      envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                  canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
                timestampVerificationData: {}
                certificate:
                  rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
              dsseEnvelope:
                payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
                payloadType: application/vnd.in-toto+json
                signatures:
                - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
            repository_id: 1
    list-attestations:
      value:
        attestations:
        - bundle:
            mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
            verificationMaterial:
              tlogEntries:
              - logIndex: '97913980'
                logId:
                  keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                kindVersion:
                  kind: dsse
                  version: 0.0.1
                integratedTime: '1716998992'
                inclusionPromise:
                  signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                inclusionProof:
                  logIndex: '93750549'
                  rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                  treeSize: '93750551'
                  hashes:
                  - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                  - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                  - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                  - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                  - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                  - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                  - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                  - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                  - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                  - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                  - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                  - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                  - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                  checkpoint:
                    envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
              timestampVerificationData: {}
              certificate:
                rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
            dsseEnvelope:
              payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
              payloadType: application/vnd.in-toto+json
              signatures:
              - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
          repository_id: 1
        - bundle:
            mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
            verificationMaterial:
              tlogEntries:
              - logIndex: '97913980'
                logId:
                  keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                kindVersion:
                  kind: dsse
                  version: 0.0.1
                integratedTime: '1716998992'
                inclusionPromise:
                  signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                inclusionProof:
                  logIndex: '93750549'
                  rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                  treeSize: '93750551'
                  hashes:
                  - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                  - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                  - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                  - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                  - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                  - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                  - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                  - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                  - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                  - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                  - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                  - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                  - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                  checkpoint:
                    envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
              timestampVerificationData: {}
              certificate:
                rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
            dsseEnvelope:
              payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
              payloadType: application/vnd.in-toto+json
              signatures:
              - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
          repository_id: 1
    simple-user-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    organization-invitation-items:
      value:
      - id: 1
        login: monalisa
        node_id: MDQ6VXNlcjE=
        email: octocat@github.com
        role: direct_member
        created_at: '2016-11-30T06:46:10-08:00'
        failed_at: ''
        failed_reason: ''
        inviter:
          login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        team_count: 2
        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams
        invitation_source: member
    org-hook-items:
      value:
      - id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/orgs/octocat/hooks/1/deliveries
        name: web
        events:
        - push
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    org-hook-2:
      value:
        id: 1
        url: https://api.github.com/orgs/octocat/hooks/1
        ping_url: https://api.github.com/orgs/octocat/hooks/1/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        name: web
        events:
        - pull_request
        active: true
        config:
          url: http://example.com
          content_type: json
        updated_at: '2011-09-06T20:39:23Z'
        created_at: '2011-09-06T17:26:27Z'
        type: Organization
    api-insights-route-stats:
      value:
      - http_method: GET
        api_route: /repositories/:repository_id
        total_request_count: 544665
        rate_limited_request_count: 13
        last_request_timestamp: '2024-09-18T15:43:03Z'
        last_rate_limited_timestamp: '2024-09-18T06:30:09Z'
    api-insights-subject-stats:
      value:
      - subject_type: installation
        subject_id: 954453
        subject_name: GitHub Actions
        integration_id: 124345
        total_request_count: 544665
        rate_limited_request_count: 13
        last_request_timestamp: '2024-09-18T15:43:03Z'
        last_rate_limited_timestamp: '2024-09-18T06:30:09Z'
    api-insights-summary-stats:
      value:
        total_request_count: 34225
        rate_limited_request_count: 23
    api-insights-time-stats:
      value:
      - timestamp: '2024-09-11T15:00:00Z'
        total_request_count: 34225
        rate_limited_request_count: 0
      - timestamp: '2024-09-11T15:05:00Z'
        total_request_count: 10587
        rate_limited_request_count: 18
      - timestamp: '2024-09-11T15:10:00Z'
        total_request_count: 43587
        rate_limited_request_count: 14
      - timestamp: '2024-09-11T15:15:00Z'
        total_request_count: 19463
        rate_limited_request_count: 4
      - timestamp: '2024-09-11T15:20:00Z'
        total_request_count: 60542
        rate_limited_request_count: 3
      - timestamp: '2024-09-11T15:25:00Z'
        total_request_count: 55872
        rate_limited_request_count: 23
    api-insights-user-stats:
      value:
      - actor_type: oauth_app
        actor_id: 954453
        actor_name: GitHub Actions
        oauth_application_id: 1245
        total_request_count: 544665
        rate_limited_request_count: 13
        last_request_timestamp: '2024-09-18T15:43:03Z'
        last_rate_limited_timestamp: '2024-09-18T06:30:09Z'
    installation-paginated:
      value:
        total_count: 1
        installations:
        - id: 25381
          account:
            login: octo-org
            id: 6811672
            node_id: MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=
            avatar_url: https://avatars3.githubusercontent.com/u/6811672?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octo-org
            html_url: https://github.com/octo-org
            followers_url: https://api.github.com/users/octo-org/followers
            following_url: https://api.github.com/users/octo-org/following{/other_user}
            gists_url: https://api.github.com/users/octo-org/gists{/gist_id}
            starred_url: https://api.github.com/users/octo-org/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octo-org/subscriptions
            organizations_url: https://api.github.com/users/octo-org/orgs
            repos_url: https://api.github.com/users/octo-org/repos
            events_url: https://api.github.com/users/octo-org/events{/privacy}
            received_events_url: https://api.github.com/users/octo-org/received_events
            type: Organization
            site_admin: false
          repository_selection: selected
          access_tokens_url: https://api.github.com/app/installations/25381/access_tokens
          repositories_url: https://api.github.com/installation/repositories
          html_url: https://github.com/organizations/octo-org/settings/installations/25381
          app_id: 2218
          target_id: 6811672
          target_type: Organization
          permissions:
            deployments: write
            metadata: read
            pull_requests: read
            statuses: read
          events:
          - deployment
          - deployment_status
          created_at: '2017-05-16T08:47:09.000-07:00'
          updated_at: '2017-06-06T11:23:23.000-07:00'
          single_file_name: config.yml
          has_multiple_single_files: true
          single_file_paths:
          - config.yml
          - .github/issue_TEMPLATE.md
          app_slug: github-actions
          suspended_at: null
          suspended_by: null
    organization-invitation:
      value:
        id: 1
        login: monalisa
        node_id: MDQ6VXNlcjE=
        email: octocat@github.com
        role: direct_member
        created_at: '2016-11-30T06:46:10-08:00'
        inviter:
          login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        team_count: 2
        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams
        invitation_source: member
    team-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: null
    issue-type-items:
      value:
      - id: 410
        node_id: IT_kwDNAd3NAZo
        name: Task
        description: A specific piece of work
        created_at: '2024-12-11T14:39:09Z'
        updated_at: '2024-12-11T14:39:09Z'
      - id: 411
        node_id: IT_kwDNAd3NAZs
        name: Bug
        description: An unexpected problem or behavior
        created_at: '2024-12-11T14:39:09Z'
        updated_at: '2024-12-11T14:39:09Z'
    issue-type:
      value:
        id: 410
        node_id: IT_kwDNAd3NAZo
        name: Task
        description: A specific piece of work
        created_at: '2024-12-11T14:39:09Z'
        updated_at: '2024-12-11T14:39:09Z'
    org-membership-response-if-user-has-an-active-admin-membership-with-organization:
      summary: Response if user has an active admin membership with organization
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    minimal-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        security_and_analysis:
          advanced_security:
            status: enabled
          secret_scanning:
            status: enabled
          secret_scanning_push_protection:
            status: disabled
          secret_scanning_non_provider_patterns:
            status: disabled
    organization-role-list:
      value:
        total_count: 2
        roles:
        - id: 8030
          name: Custom Role Manager
          description: Permissions to manage custom roles within an org
          permissions:
          - write_organization_custom_repo_role
          - write_organization_custom_org_role
          - read_organization_custom_repo_role
          - read_organization_custom_org_role
          organization:
            login: github
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/github
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: Organization
            site_admin: false
          created_at: '2022-07-04T22:19:11Z'
          updated_at: '2022-07-04T22:20:11Z'
        - id: 8031
          name: Auditor
          description: Permissions to read the organization audit log
          permissions:
          - read_audit_logs
          organization:
            login: github
            id: 9919
            node_id: MDEyOk9yZ2FuaXphdGlvbjk5MTk=
            avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
            gravatar_id: ''
            url: https://api.github.com/users/github
            html_url: https://github.com/github
            followers_url: https://api.github.com/users/github/followers
            following_url: https://api.github.com/users/github/following{/other_user}
            gists_url: https://api.github.com/users/github/gists{/gist_id}
            starred_url: https://api.github.com/users/github/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/github/subscriptions
            organizations_url: https://api.github.com/users/github/orgs
            repos_url: https://api.github.com/users/github/repos
            events_url: https://api.github.com/users/github/events{/privacy}
            received_events_url: https://api.github.com/users/github/received_events
            type: Organization
            site_admin: false
          created_at: '2022-07-04T22:19:11Z'
          updated_at: '2022-07-04T22:20:11Z'
    organization-role:
      value:
        id: 8030
        name: Custom Role Manager
        description: Permissions to manage custom roles within an org
        permissions:
        - write_organization_custom_repo_role
        - write_organization_custom_org_role
        - read_organization_custom_repo_role
        - read_organization_custom_org_role
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        created_at: '2022-07-04T22:19:11Z'
        updated_at: '2022-07-04T22:20:11Z'
    org-pat-grant-request-paginated:
      value:
      - id: 25381
        reason: I need to access the GitHub API
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository_selection: all
        repositories_url: https://api.github.com/organizations/652551/personal-access-token-requests/25381/repositories
        permissions:
          organization:
            members: read
          repository:
            metadata: read
        created_at: '2023-05-16T08:47:09.000-07:00'
        token_id: 98716
        token_name: Some Token
        token_expired: false
        token_expires_at: '2023-11-16T08:47:09.000-07:00'
        token_last_used_at: null
    org-pat-grant-paginated:
      value:
      - id: 25381
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        repository_selection: all
        repositories_url: https://api.github.com/organizations/652551/personal-access-tokens/25381/repositories
        permissions:
          organization:
            members: read
          repository:
            metadata: read
        access_granted_at: '2023-05-16T08:47:09.000-07:00'
        token_id: 98716
        token_name: Some Token
        token_expired: false
        token_expires_at: '2023-11-16T08:47:09.000-07:00'
        token_last_used_at: null
    custom-properties:
      value:
      - property_name: environment
        url: https://api.github.com/orgs/github/properties/schema/environment
        source_type: organization
        value_type: single_select
        required: true
        default_value: production
        description: Prod or dev environment
        allowed_values:
        - production
        - development
        values_editable_by: org_actors
      - property_name: service
        url: https://api.github.com/orgs/github/properties/schema/service
        source_type: organization
        value_type: string
      - property_name: team
        url: https://api.github.com/orgs/github/properties/schema/team
        source_type: organization
        value_type: string
        description: Team owning the repository
    custom-property:
      value:
        property_name: environment
        url: https://api.github.com/orgs/github/properties/schema/environment
        source_type: organization
        value_type: single_select
        required: true
        default_value: production
        description: Prod or dev environment
        allowed_values:
        - production
        - development
    org-repo-custom-property-values:
      value:
      - repository_id: 1296269
        repository_name: Hello-World
        repository_full_name: octocat/Hello-World
        properties:
        - property_name: environment
          value: production
        - property_name: service
          value: web
        - property_name: team
          value: octocat
    org-repo-update-custom-property-values:
      value:
        repository_names:
        - Hello-World
        - octo-repo
        properties:
        - property_name: environment
          value: production
        - property_name: service
          value: web
        - property_name: team
          value: octocat
    ruleset-history:
      value:
      - version_id: 3
        actor:
          id: 1
          type: User
        updated_at: 2024-010-23T16:29:47Z
      - version_id: 2
        actor:
          id: 2
          type: User
        updated_at: '2024-09-23T16:29:47Z'
      - version_id: 1
        actor:
          id: 1
          type: User
        updated_at: '2024-08-23T16:29:47Z'
    org-ruleset-version-with-state:
      value:
      - version_id: 3
        actor:
          id: 1
          type: User
        updated_at: 2024-010-23T16:29:47Z
        state:
          id: 21
          name: super cool ruleset
          target: branch
          source_type: Organization
          source: my-org
          enforcement: active
          bypass_actors:
          - actor_id: 234
            actor_type: Team
            bypass_mode: always
          conditions:
            ref_name:
              include:
              - refs/heads/main
              - refs/heads/master
              exclude:
              - refs/heads/dev*
            repository_name:
              include:
              - important_repository
              - another_important_repository
              exclude:
              - unimportant_repository
              protected: true
          rules:
          - type: commit_author_email_pattern
            parameters:
              operator: contains
              pattern: github
    org-membership-items:
      value:
      - url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
      - url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership:
      value:
        url: https://api.github.com/orgs/invitocat/memberships/defunkt
        state: pending
        role: admin
        organization_url: https://api.github.com/orgs/invitocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    org-membership-2:
      value:
        url: https://api.github.com/orgs/octocat/memberships/defunkt
        state: active
        role: admin
        organization_url: https://api.github.com/orgs/octocat
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
  parameters:
    pagination-before:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    pagination-after:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    cursor:
      name: cursor
      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'
      in: query
      required: false
      schema:
        type: string
    delivery-id:
      name: delivery_id
      in: path
      required: true
      schema:
        type: integer
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    since-org:
      name: since
      description: An organization ID. Only return organizations with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    username:
      name: username
      description: The handle for the GitHub user account.
      in: path
      required: true
      schema:
        type: string
    hook-id:
      name: hook_id
      description: The unique identifier of the hook. You can find this value in the `X-GitHub-Hook-ID` header of a webhook delivery.
      in: path
      required: true
      schema:
        type: integer
    api-insights-actor-type:
      name: actor_type
      in: path
      description: The type of the actor
      required: true
      schema:
        type: string
        enum:
        - installation
        - classic_pat
        - fine_grained_pat
        - oauth_app
        - github_app_user_to_server
    api-insights-actor-id:
      name: actor_id
      in: path
      description: The ID of the actor
      required: true
      schema:
        type: integer
    api-insights-min-timestamp:
      name: min_timestamp
      description: 'The minimum timestamp to query for stats. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: true
      schema:
        type: string
    api-insights-max-timestamp:
      name: max_timestamp
      description: 'The maximum timestamp to query for stats. Defaults to the time 30 days ago. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
    api-insights-route-stats-sort:
      name: sort
      description: The property to sort the results by.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
          - last_rate_limited_timestamp
          - last_request_timestamp
          - rate_limited_request_count
          - http_method
          - api_route
          - total_request_count
          default: total_request_count
    api-insights-api-route-substring:
      name: api_route_substring
      in: query
      description: Providing a substring will filter results where the API route contains the substring. This is a case-insensitive search.
      required: false
      schema:
        type: string
    api-insights-sort:
      name: sort
      description: The property to sort the results by.
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          enum:
          - last_rate_limited_timestamp
          - last_request_timestamp
          - rate_limited_request_count
          - subject_name
          - total_request_count
          default: total_request_count
    api-insights-subject-name-substring:
      name: subject_name_substring
      in: query
      description: Providing a substring will filter results where the subject name contains the substring. This is a case-insensitive search.
      required: false
      schema:
        type: string
    api-insights-user-id:
      name: user_id
      in: path
      description: The ID of the user to query for stats
      required: true
      schema:
        type: string
    api-insights-timestamp-increment:
      name: timestamp_increment
      description: The increment of time used to breakdown the query results (5m, 10m, 1h, etc.)
      in: query
      required: true
      schema:
        type: string
    api-insights-actor-name-substring:
      name: actor_name_substring
      in: query
      description: Providing a substring will filter results where the actor name contains the substring. This is a case-insensitive search.
      required: false
      schema:
        type: string
    invitation-id:
      name: invitation_id
      description: The unique identifier of the invitation.
      in: path
      required: true
      schema:
        type: integer
    issue-type-id:
      name: issue_type_id
      description: The unique identifier of the issue type.
      in: path
      required: true
      schema:
        type: integer
    team-slug:
      name: team_slug
      description: The slug of the team name.
      in: path
      required: true
      schema:
        type: string
    role-id:
      name: role_id
      description: The unique identifier of the role.
      in: path
      required: true
      schema:
        type: integer
    personal-access-token-sort:
      name: sort
      description: The property by which to sort the results.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created_at
        default: created_at
    personal-access-token-owner:
      name: owner
      description: A list of owner usernames to use to filter the results.
      in: query
      required: false
      schema:
        type: array
        maxItems: 10
        items:
          type: string
        example: owner[]=octocat1,owner[]=octocat2
    personal-access-token-repository:
      name: repository
      description: The name of the repository to use to filter the results.
      in: query
      required: false
      schema:
        type: string
        example: Hello-World
    personal-access-token-permission:
      name: permission
      description: The permission to use to filter the results.
      in: query
      required: false
      schema:
        type: string
        example: issues_read
    personal-access-token-before:
      name: last_used_before
      description: 'Only show fine-grained personal access tokens used before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    personal-access-token-after:
      name: last_used_after
      description: 'Only show fine-grained personal access tokens used after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    personal-access-token-token-id:
      name: token_id
      description: The ID of the token
      in: query
      required: false
      schema:
        type: array
        maxItems: 50
        items:
          type: string
        example: token_id[]=1,token_id[]=2
    fine-grained-personal-access-token-id:
      name: pat_id
      description: The unique identifier of the fine-grained personal access token.
      in: path
      required: true
      schema:
        type: integer
    custom-property-name:
      name: custom_property_name
      description: The custom property name
      in: path
      required: true
      schema:
        type: string
    security-product:
      name: security_product
      in: path
      description: The security feature to enable or disable.
      required: true
      schema:
        type: string
        enum:
        - dependency_graph
        - dependabot_alerts
        - dependabot_security_updates
        - advanced_security
        - code_scanning_default_setup
        - secret_scanning
        - secret_scanning_push_protection
    org-security-product-enablement:
      name: enablement
      in: path
      description: 'The action to take.


        `enable_all` means to enable the specified security feature for all repositories in the organization.

        `disable_all` means to disable the specified security feature for all repositories in the organization.'
      required: true
      schema:
        type: string
        enum:
        - enable_all
        - disable_all
  responses:
    validation_failed_simple:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
        application/scim+json:
          schema:
            $ref: '#/components/schemas/scim-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    accepted:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
          examples:
            default:
              value: null
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    no_content:
      description: A header with no content is returned.
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: orgs
  description: Interact with GitHub Orgs.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /organizations:
    get:
      summary: List organizations
      description: 'Lists all organizations, in the order that they were created.


        > [!NOTE]

        > Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of organizations.'
      tags:
      - orgs
      operationId: orgs/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations
      parameters:
      - $ref: '#/components/parameters/since-org'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              example: <https://api.github.com/organizations?since=135>; rel="next"
              schema:
                type: string
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}:
    get:
      summary: Get an organization
      description: 'Gets information about an organization.


        When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, outside collaborators, guest collaborators, repository collaborators, or everyone with access to any repository within the organization to enable [two-factor authentication](https://docs.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).


        To see the full details about an organization, the authenticated user must be an organization owner.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to see the full details about an organization.


        To see information about an organization''s GitHub plan, GitHub Apps need the `Organization plan` permission.'
      tags:
      - orgs
      operationId: orgs/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#get-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-full'
              examples:
                default-response:
                  $ref: '#/components/examples/organization-full'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    patch:
      summary: Update an organization
      description: '> [!WARNING]

        > **Closing down notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).


        > [!WARNING]

        > **Closing down notice:** Code security product enablement for new repositories through the organization API is closing down. Please use [code security configurations](https://docs.github.com/rest/code-security/configurations#set-a-code-security-configuration-as-a-default-for-an-organization) to set defaults instead. For more information on setting a default security configuration, see the [changelog](https://github.blog/changelog/2024-07-09-sunsetting-security-settings-defaults-parameters-in-the-organizations-rest-api/).


        Updates the organization''s profile and member privileges.


        The authenticated user must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` or `repo` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#update-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                billing_email:
                  type: string
                  description: Billing email address. This address is not publicized.
                company:
                  type: string
                  description: The company name.
                email:
                  type: string
                  description: The publicly visible email address.
                twitter_username:
                  type: string
                  description: The Twitter username of the company.
                location:
                  type: string
                  description: The location.
                name:
                  type: string
                  description: The shorthand name of the company.
                description:
                  type: string
                  description: The description of the company. The maximum size is 160 characters.
                has_organization_projects:
                  type: boolean
                  description: Whether an organization can use organization projects.
                has_repository_projects:
                  type: boolean
                  description: Whether repositories that belong to the organization can use repository projects.
                default_repository_permission:
                  type: string
                  description: Default permission level members have for organization repositories.
                  enum:
                  - read
                  - write
                  - admin
                  - none
                  default: read
                members_can_create_repositories:
                  type: boolean
                  description: Whether of non-admin organization members can create repositories. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.
                  default: true
                members_can_create_internal_repositories:
                  type: boolean
                  description: Whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                members_can_create_private_repositories:
                  type: boolean
                  description: Whether organization members can create private repositories, which are visible to organization members with permission. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                members_can_create_public_repositories:
                  type: boolean
                  description: Whether organization members can create public repositories, which are visible to anyone. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.
                members_allowed_repository_creation_type:
                  type: string
                  description: "Specifies which types of repositories non-admin organization members can create. `private` is only available to repositories that are part of an organization on GitHub Enterprise Cloud. \n**Note:** This parameter is closing down and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details."
                  enum:
                  - all
                  - private
                  - none
                members_can_create_pages:
                  type: boolean
                  description: Whether organization members can create GitHub Pages sites. Existing published sites will not be impacted.
                  default: true
                members_can_create_public_pages:
                  type: boolean
                  description: Whether organization members can create public GitHub Pages sites. Existing published sites will not be impacted.
                  default: true
                members_can_create_private_pages:
                  type: boolean
                  description: Whether organization members can create private GitHub Pages sites. Existing published sites will not be impacted.
                  default: true
                members_can_fork_private_repositories:
                  type: boolean
                  description: Whether organization members can fork private organization repositories.
                  default: false
                web_commit_signoff_required:
                  type: boolean
                  description: Whether contributors to organization repositories are required to sign off on commits they make through GitHub's web interface.
                  default: false
                blog:
                  type: string
                  example: '"http://github.blog"'
                advanced_security_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether GitHub Advanced Security is automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                dependabot_alerts_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                dependabot_security_updates_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether Dependabot security updates are automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                dependency_graph_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether dependency graph is automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                secret_scanning_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether secret scanning is automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                secret_scanning_push_protection_enabled_for_new_repositories:
                  type: boolean
                  description: '**Endpoint closing down notice.** Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead.


                    Whether secret scanning push protection is automatically enabled for new repositories and repositories transferred to this organization.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.'
                  deprecated: true
                secret_scanning_push_protection_custom_link_enabled:
                  type: boolean
                  description: Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.
                secret_scanning_push_protection_custom_link:
                  type: string
                  description: If `secret_scanning_push_protection_custom_link_enabled` is true, the URL that will be displayed to contributors who are blocked from pushing a secret.
                deploy_keys_enabled_for_repositories:
                  type: boolean
                  description: Controls whether or not deploy keys may be added and used for repositories in the organization.
            examples:
              default:
                value:
                  billing_email: mona@github.com
                  company: GitHub
                  email: mona@github.com
                  twitter_username: github
                  location: San Francisco
                  name: github
                  description: GitHub, the company.
                  default_repository_permission: read
                  members_can_create_repositories: true
                  members_allowed_repository_creation_type: all
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-full'
              examples:
                default:
                  $ref: '#/components/examples/organization-full'
        '422':
          description: Validation failed
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/validation-error'
                - $ref: '#/components/schemas/validation-error-simple'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
    delete:
      summary: Delete an organization
      description: 'Deletes an organization and all its repositories.


        The organization login will be unavailable for 90 days after deletion.


        Please review the Terms of Service regarding account deletion before using this endpoint:


        https://docs.github.com/site-policy/github-terms/github-terms-of-service'
      operationId: orgs/delete
      tags:
      - orgs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#delete-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/attestations/bulk-list:
    post:
      summary: List attestations by bulk subject digests
      description: 'List a collection of artifact attestations associated with any entry in a list of subject digests owned by an organization.


        The collection of attestations returned by this endpoint is filtered according to the authenticated user''s permissions; if the authenticated user cannot read a repository, the attestations associated with that repository will not be included in the response. In addition, when using a fine-grained access token the `attestations:read` permission is required.


        **Please note:** in order to offer meaningful security benefits, an attestation''s signature and timestamps **must** be cryptographically verified, and the identity of the attestation signer **must** be validated. Attestations can be verified using the [GitHub CLI `attestation verify` command](https://cli.github.com/manual/gh_attestation_verify). For more information, see [our guide on how to use artifact attestations to establish a build''s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).'
      tags:
      - orgs
      operationId: orgs/list-attestations-bulk
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-attestations-by-bulk-subject-digests
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject_digests:
                  type: array
                  items:
                    type: string
                  description: List of subject digests to fetch attestations for.
                  minItems: 1
                  maxItems: 1024
                predicate_type:
                  type: string
                  description: 'Optional filter for fetching attestations with a given predicate type.

                    This option accepts `provenance`, `sbom`, or freeform text for custom predicate types.'
              required:
              - subject_digests
            examples:
              default:
                $ref: '#/components/examples/bulk-subject-digest-body'
              withPredicateType:
                $ref: '#/components/examples/bulk-subject-digest-body-with-predicate-type'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  attestations_subject_digests:
                    type: object
                    additionalProperties:
                      nullable: true
                      type: array
                      items:
                        type: object
                        properties:
                          bundle:
                            type: object
                            properties:
                              mediaType:
                                type: string
                              verificationMaterial:
                                type: object
                                properties: {}
                                additionalProperties: true
                              dsseEnvelope:
                                type: object
                                properties: {}
                                additionalProperties: true
                            description: The bundle of the attestation.
                          repository_id:
                            type: integer
                          bundle_url:
                            type: string
                    description: Mapping of subject digest to bundles.
                  page_info:
                    type: object
                    properties:
                      has_next:
                        type: boolean
                        description: Indicates whether there is a next page.
                      has_previous:
                        type: boolean
                        description: Indicates whether there is a previous page.
                      next:
                        type: string
                        description: The cursor to the next page.
                      previous:
                        type: string
                        description: The cursor to the previous page.
                    description: Information about the current page.
              examples:
                default:
                  $ref: '#/components/examples/list-attestations-bulk'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/attestations/delete-request:
    post:
      summary: Delete attestations in bulk
      description: Delete artifact attestations in bulk by either subject digests or unique ID.
      tags:
      - orgs
      operationId: orgs/delete-attestations-bulk
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/attestations#delete-attestations-in-bulk
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              oneOf:
              - properties:
                  subject_digests:
                    type: array
                    items:
                      type: string
                    description: List of subject digests associated with the artifact attestations to delete.
                    minItems: 1
                    maxItems: 1024
                required:
                - subject_digests
              - properties:
                  attestation_ids:
                    type: array
                    items:
                      type: integer
                    description: List of unique IDs associated with the artifact attestations to delete.
                    minItems: 1
                    maxItems: 1024
                required:
                - attestation_ids
              description: The request body must include either `subject_digests` or `attestation_ids`, but not both.
            examples:
              by-subject-digests:
                summary: Delete by subject digests
                value:
                  subject_digests:
                  - sha256:abc123
                  - sha512:def456
              by-attestation-ids:
                summary: Delete by attestation IDs
                value:
                  attestation_ids:
                  - 111
                  - 222
      responses:
        '200':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: attestations
  /orgs/{org}/attestations/digest/{subject_digest}:
    delete:
      summary: Delete attestations by subject digest
      description: Delete an artifact attestation by subject digest.
      tags:
      - orgs
      operationId: orgs/delete-attestations-by-subject-digest
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/attestations#delete-attestations-by-subject-digest
      parameters:
      - $ref: '#/components/parameters/org'
      - name: subject_digest
        description: Subject Digest
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      responses:
        '200':
          description: Response
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: attestations
  /orgs/{org}/attestations/{attestation_id}:
    delete:
      summary: Delete attestations by ID
      description: Delete an artifact attestation by unique ID that is associated with a repository owned by an org.
      tags:
      - orgs
      operationId: orgs/delete-attestations-by-id
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/attestations#delete-attestations-by-id
      parameters:
      - $ref: '#/components/parameters/org'
      - name: attestation_id
        description: Attestation ID
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: attestations
  /orgs/{org}/attestations/{subject_digest}:
    get:
      summary: List attestations
      description: 'List a collection of artifact attestations with a given subject digest that are associated with repositories owned by an organization.


        The collection of attestations returned by this endpoint is filtered according to the authenticated user''s permissions; if the authenticated user cannot read a repository, the attestations associated with that repository will not be included in the response. In addition, when using a fine-grained access token the `attestations:read` permission is required.


        **Please note:** in order to offer meaningful security benefits, an attestation''s signature and timestamps **must** be cryptographically verified, and the identity of the attestation signer **must** be validated. Attestations can be verified using the [GitHub CLI `attestation verify` command](https://cli.github.com/manual/gh_attestation_verify). For more information, see [our guide on how to use artifact attestations to establish a build''s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).'
      tags:
      - orgs
      operationId: orgs/list-attestations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-attestations
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - $ref: '#/components/parameters/org'
      - name: subject_digest
        description: The parameter should be set to the attestation's subject's SHA256 digest, in the form `sha256:HEX_DIGEST`.
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: predicate_type
        description: 'Optional filter for fetching attestations with a given predicate type.

          This option accepts `provenance`, `sbom`, or freeform text for custom predicate types.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  attestations:
                    type: array
                    items:
                      type: object
                      properties:
                        bundle:
                          type: object
                          properties:
                            mediaType:
                              type: string
                            verificationMaterial:
                              type: object
                              properties: {}
                              additionalProperties: true
                            dsseEnvelope:
                              type: object
                              properties: {}
                              additionalProperties: true
                          description: 'The attestation''s Sigstore Bundle.

                            Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto) for more information.'
                        repository_id:
                          type: integer
                        bundle_url:
                          type: string
              examples:
                default:
                  $ref: '#/components/examples/list-attestations'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/blocks:
    get:
      summary: List users blocked by an organization
      description: List the users blocked by an organization.
      tags:
      - orgs
      operationId: orgs/list-blocked-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#list-users-blocked-by-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
  /orgs/{org}/blocks/{username}:
    get:
      summary: Check if a user is blocked by an organization
      description: Returns a 204 if the given user is blocked by the given organization. Returns a 404 if the organization is not blocking the user, or if the user account has been identified as spam by GitHub.
      tags:
      - orgs
      operationId: orgs/check-blocked-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#check-if-a-user-is-blocked-by-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: If the user is blocked
        '404':
          description: If the user is not blocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
    put:
      summary: Block a user from an organization
      description: Blocks the given user on behalf of the specified organization and returns a 204. If the organization cannot block the given user a 422 is returned.
      tags:
      - orgs
      operationId: orgs/block-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#block-a-user-from-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
    delete:
      summary: Unblock a user from an organization
      description: Unblocks the given user on behalf of the specified organization.
      tags:
      - orgs
      operationId: orgs/unblock-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/blocking#unblock-a-user-from-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: blocking
  /orgs/{org}/failed_invitations:
    get:
      summary: List failed organization invitations
      description: The return hash contains `failed_at` and `failed_reason` fields which represent the time at which the invitation failed and the reason for the failure.
      tags:
      - orgs
      operationId: orgs/list-failed-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-failed-organization-invitations
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-invitation'
              examples:
                default:
                  $ref: '#/components/examples/organization-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/hooks:
    get:
      summary: List organization webhooks
      description: 'List webhooks for an organization.


        The authenticated user must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#list-organization-webhooks
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    post:
      summary: Create an organization webhook
      description: 'Create a hook that posts payloads in JSON format.


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or

        edit webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/create-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#create-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Must be passed as "web".
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                    username:
                      type: string
                      example: '"kdaigle"'
                    password:
                      type: string
                      example: '"password"'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. Set to `["*"]` to receive all possible events.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
              required:
              - name
              - config
            examples:
              default:
                value:
                  name: web
                  active: true
                  events:
                  - push
                  - pull_request
                  config:
                    url: http://example.com/webhook
                    content_type: json
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook'
          headers:
            Location:
              example: https://api.github.com/orgs/octocat/hooks/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}:
    get:
      summary: Get an organization webhook
      description: 'Returns a webhook configured in an organization. To get only the webhook

        `config` properties, see "[Get a webhook configuration for an organization](/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization).


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/get-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update an organization webhook
      description: 'Updates a webhook configured in an organization. When you update a webhook,

        the `secret` will be overwritten. If you previously had a `secret` set, you must

        provide the same `secret` or set a new `secret` or the secret will be removed. If

        you are only updating individual webhook `config` properties, use "[Update a webhook

        configuration for an organization](/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization)".


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/update-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#update-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                  required:
                  - url
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
                name:
                  type: string
                  example: '"web"'
            examples:
              default:
                value:
                  active: true
                  events:
                  - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-hook'
              examples:
                default:
                  $ref: '#/components/examples/org-hook-2'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    delete:
      summary: Delete an organization webhook
      description: 'Delete a webhook for an organization.


        The authenticated user must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#delete-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/config:
    get:
      summary: Get a webhook configuration for an organization
      description: 'Returns the webhook configuration for an organization. To get more information about the webhook, including the `active` state and `events`, use "[Get an organization webhook ](/rest/orgs/webhooks#get-an-organization-webhook)."


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/get-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-a-webhook-configuration-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for an organization
      description: 'Updates the webhook configuration for an organization. To update more information about the webhook, including the `active` state and `events`, use "[Update an organization webhook ](/rest/orgs/webhooks#update-an-organization-webhook)."


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/update-webhook-config-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#update-a-webhook-configuration-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  $ref: '#/components/schemas/webhook-config-url'
                content_type:
                  $ref: '#/components/schemas/webhook-config-content-type'
                secret:
                  $ref: '#/components/schemas/webhook-config-secret'
                insecure_ssl:
                  $ref: '#/components/schemas/webhook-config-insecure-ssl'
            examples:
              default:
                summary: Update an existing webhook
                value:
                  url: http://example.com/webhook
                  content_type: json
                  insecure_ssl: '0'
                  secret: '********'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries:
    get:
      summary: List deliveries for an organization webhook
      description: 'Returns a list of webhook deliveries for a webhook configured in an organization.


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#list-deliveries-for-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook-delivery-item'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery-items'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}:
    get:
      summary: Get a webhook delivery for an organization webhook
      description: 'Returns a delivery for a webhook configured in an organization.


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#get-a-webhook-delivery-for-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/delivery-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook-delivery'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:
    post:
      summary: Redeliver a delivery for an organization webhook
      description: 'Redeliver a delivery for a webhook configured in an organization.


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#redeliver-a-delivery-for-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/delivery-id'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/hooks/{hook_id}/pings:
    post:
      summary: Ping an organization webhook
      description: 'This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event)

        to be sent to the hook.


        You must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need `admin:org_hook` scope. OAuth apps cannot list, view, or edit

        webhooks that they did not create and users cannot list, view, or edit webhooks that were created by OAuth apps.'
      tags:
      - orgs
      operationId: orgs/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/webhooks#ping-an-organization-webhook
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: webhooks
  /orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}:
    get:
      summary: Get route stats by actor
      description: Get API request count statistics for an actor broken down by route within a specified time frame.
      tags:
      - orgs
      operationId: api-insights/get-route-stats-by-actor
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-route-stats-by-actor
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-actor-type'
      - $ref: '#/components/parameters/api-insights-actor-id'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/api-insights-route-stats-sort'
      - $ref: '#/components/parameters/api-insights-api-route-substring'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-route-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-route-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/subject-stats:
    get:
      summary: Get subject stats
      description: Get API request statistics for all subjects within an organization within a specified time frame. Subjects can be users or GitHub Apps.
      tags:
      - orgs
      operationId: api-insights/get-subject-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-subject-stats
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/api-insights-sort'
      - $ref: '#/components/parameters/api-insights-subject-name-substring'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-subject-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-subject-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/summary-stats:
    get:
      summary: Get summary stats
      description: Get overall statistics of API requests made within an organization by all users and apps within a specified time frame.
      tags:
      - orgs
      operationId: api-insights/get-summary-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-summary-stats
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-summary-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-summary-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/summary-stats/users/{user_id}:
    get:
      summary: Get summary stats by user
      description: Get overall statistics of API requests within the organization for a user.
      tags:
      - orgs
      operationId: api-insights/get-summary-stats-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-summary-stats-by-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-user-id'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-summary-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-summary-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}:
    get:
      summary: Get summary stats by actor
      description: Get overall statistics of API requests within the organization made by a specific actor. Actors can be GitHub App installations, OAuth apps or other tokens on behalf of a user.
      tags:
      - orgs
      operationId: api-insights/get-summary-stats-by-actor
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-summary-stats-by-actor
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/api-insights-actor-type'
      - $ref: '#/components/parameters/api-insights-actor-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-summary-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-summary-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/time-stats:
    get:
      summary: Get time stats
      description: Get the number of API requests and rate-limited requests made within an organization over a specified time period.
      tags:
      - orgs
      operationId: api-insights/get-time-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-time-stats
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/api-insights-timestamp-increment'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-time-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-time-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/time-stats/users/{user_id}:
    get:
      summary: Get time stats by user
      description: Get the number of API requests and rate-limited requests made within an organization by a specific user over a specified time period.
      tags:
      - orgs
      operationId: api-insights/get-time-stats-by-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-time-stats-by-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-user-id'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/api-insights-timestamp-increment'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-time-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-time-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}:
    get:
      summary: Get time stats by actor
      description: Get the number of API requests and rate-limited requests made within an organization by a specific actor within a specified time period.
      tags:
      - orgs
      operationId: api-insights/get-time-stats-by-actor
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-time-stats-by-actor
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-actor-type'
      - $ref: '#/components/parameters/api-insights-actor-id'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/api-insights-timestamp-increment'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-time-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-time-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/insights/api/user-stats/{user_id}:
    get:
      summary: Get user stats
      description: Get API usage statistics within an organization for a user broken down by the type of access.
      tags:
      - orgs
      operationId: api-insights/get-user-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/api-insights#get-user-stats
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/api-insights-user-id'
      - $ref: '#/components/parameters/api-insights-min-timestamp'
      - $ref: '#/components/parameters/api-insights-max-timestamp'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/api-insights-sort'
      - $ref: '#/components/parameters/api-insights-actor-name-substring'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-insights-user-stats'
              examples:
                default:
                  $ref: '#/components/examples/api-insights-user-stats'
      x-github:
        enabledForGitHubApps: true
        category: orgs
        subcategory: api-insights
  /orgs/{org}/installations:
    get:
      summary: List app installations for an organization
      description: 'Lists all GitHub Apps in an organization. The installation count includes

        all GitHub Apps installed on repositories in the organization.


        The authenticated user must be an organization owner to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:read` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-app-installations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-app-installations-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - installations
                properties:
                  total_count:
                    type: integer
                  installations:
                    type: array
                    items:
                      $ref: '#/components/schemas/installation'
              examples:
                default:
                  $ref: '#/components/examples/installation-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
  /orgs/{org}/invitations:
    get:
      summary: List pending organization invitations
      description: 'The return hash contains a `role` field which refers to the Organization

        Invitation role and will be one of the following values: `direct_member`, `admin`,

        `billing_manager`, or `hiring_manager`. If the invitee is not a GitHub

        member, the `login` field in the return hash will be `null`.'
      tags:
      - orgs
      operationId: orgs/list-pending-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-pending-organization-invitations
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: role
        description: Filter invitations by their member role.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - admin
          - direct_member
          - billing_manager
          - hiring_manager
          default: all
      - name: invitation_source
        description: Filter invitations by their invitation source.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - member
          - scim
          default: all
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-invitation'
              examples:
                default:
                  $ref: '#/components/examples/organization-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    post:
      summary: Create an organization invitation
      description: 'Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)"

        and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."'
      tags:
      - orgs
      operationId: orgs/create-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#create-an-organization-invitation
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invitee_id:
                  type: integer
                  description: '**Required unless you provide `email`**. GitHub user ID for the person you are inviting.'
                email:
                  type: string
                  description: '**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.'
                role:
                  type: string
                  description: "The role for the new member. \n * `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  \n * `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  \n * `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization. \n * `reinstate` - The previous role assigned to the invitee before they were removed from your organization. Can be one of the roles listed above. Only works if the invitee was previously part of your organization."
                  enum:
                  - admin
                  - direct_member
                  - billing_manager
                  - reinstate
                  default: direct_member
                team_ids:
                  type: array
                  description: Specify IDs for the teams you want to invite new members to.
                  items:
                    type: integer
            examples:
              default:
                value:
                  email: octocat@github.com
                  role: direct_member
                  team_ids:
                  - 12
                  - 26
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-invitation'
              examples:
                default:
                  $ref: '#/components/examples/organization-invitation'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/invitations/{invitation_id}:
    delete:
      summary: Cancel an organization invitation
      description: 'Cancel an organization invitation. In order to cancel an organization invitation, the authenticated user must be an organization owner.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications).'
      tags:
      - orgs
      operationId: orgs/cancel-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#cancel-an-organization-invitation
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/invitations/{invitation_id}/teams:
    get:
      summary: List organization invitation teams
      description: List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner.
      tags:
      - orgs
      operationId: orgs/list-invitation-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-invitation-teams
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/invitation-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/issue-types:
    get:
      summary: List issue types for an organization
      description: Lists all issue types for an organization. OAuth app tokens and personal access tokens (classic) need the read:org scope to use this endpoint.
      tags:
      - orgs
      operationId: orgs/list-issue-types
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/issue-types#list-issue-types-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/issue-type'
              examples:
                default:
                  $ref: '#/components/examples/issue-type-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: issue-types
    post:
      summary: Create issue type for an organization
      description: 'Create a new issue type for an organization.


        You can find out more about issue types in [Managing issue types in an organization](https://docs.github.com/issues/tracking-your-work-with-issues/configuring-issues/managing-issue-types-in-an-organization).


        To use this endpoint, the authenticated user must be an administrator for the organization. OAuth app tokens and

        personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/create-issue-type
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/issue-types#create-issue-type-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization-create-issue-type'
            examples:
              default:
                value:
                  name: Epic
                  description: An issue type for a multi-week tracking of work
                  is_enabled: true
                  color: green
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-type'
              examples:
                default:
                  $ref: '#/components/examples/issue-type'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: issue-types
  /orgs/{org}/issue-types/{issue_type_id}:
    put:
      summary: Update issue type for an organization
      description: 'Updates an issue type for an organization.


        You can find out more about issue types in [Managing issue types in an organization](https://docs.github.com/issues/tracking-your-work-with-issues/configuring-issues/managing-issue-types-in-an-organization).


        To use this endpoint, the authenticated user must be an administrator for the organization. OAuth app tokens and

        personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/update-issue-type
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/issue-types#update-issue-type-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/issue-type-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/organization-update-issue-type'
            examples:
              default:
                value:
                  name: Epic
                  description: An issue type for a multi-week tracking of work
                  is_enabled: true
                  color: green
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/issue-type'
              examples:
                default:
                  $ref: '#/components/examples/issue-type'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: issue-types
    delete:
      summary: Delete issue type for an organization
      description: 'Deletes an issue type for an organization.


        You can find out more about issue types in [Managing issue types in an organization](https://docs.github.com/issues/tracking-your-work-with-issues/configuring-issues/managing-issue-types-in-an-organization).


        To use this endpoint, the authenticated user must be an administrator for the organization. OAuth app tokens and

        personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/delete-issue-type
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/issue-types#delete-issue-type-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/issue-type-id'
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed_simple'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: issue-types
  /orgs/{org}/members:
    get:
      summary: List organization members
      description: List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned.
      tags:
      - orgs
      operationId: orgs/list-members
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-members
      parameters:
      - $ref: '#/components/parameters/org'
      - name: filter
        description: Filter members returned in the list. `2fa_disabled` means that only members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled will be returned. `2fa_insecure` means that only members with [insecure 2FA methods](https://docs.github.com/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/requiring-two-factor-authentication-in-your-organization#requiring-secure-methods-of-two-factor-authentication-in-your-organization) will be returned. These options are only available for organization owners.
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - 2fa_insecure
          - all
          default: all
      - name: role
        description: Filter members returned by their role.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - admin
          - member
          default: all
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/members/{username}:
    get:
      summary: Check organization membership for a user
      description: Check if a user is, publicly or privately, a member of the organization.
      tags:
      - orgs
      operationId: orgs/check-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#check-organization-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if requester is an organization member and user is a member
        '302':
          description: Response if requester is not an organization member
          headers:
            Location:
              example: https://api.github.com/orgs/github/public_members/pezra
              schema:
                type: string
        '404':
          description: Not Found if requester is an organization member and user is not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove an organization member
      description: 'Removing a user from this list will remove them from all teams and they will no longer have any access to the organization''s repositories.


        > [!NOTE]

        > If a user has both direct membership in the organization as well as indirect membership via an enterprise team, only their direct membership will be removed. Their indirect membership via an enterprise team remains until the user is removed from the enterprise team.'
      tags:
      - orgs
      operationId: orgs/remove-member
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-an-organization-member
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/memberships/{username}:
    get:
      summary: Get organization membership for a user
      description: In order to get a user's membership with an organization, the authenticated user must be an organization member. The `state` parameter in the response can be used to identify the user's membership status.
      tags:
      - orgs
      operationId: orgs/get-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#get-organization-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                response-if-user-has-an-active-admin-membership-with-organization:
                  $ref: '#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set organization membership for a user
      description: "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://docs.github.com/rest/orgs/members#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, organization owners are limited to creating 50 organization invitations for an organization within a 24 hour period. If the organization is more than one month old or on a paid\
        \ plan, the limit is 500 invitations per 24 hour period."
      tags:
      - orgs
      operationId: orgs/set-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#set-organization-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: "The role to give the user in the organization. Can be one of:  \n * `admin` - The user will become an owner of the organization.  \n * `member` - The user will become a non-owner member of the organization."
                  enum:
                  - admin
                  - member
                  default: member
            examples:
              default:
                summary: Set an organization membership role for a user
                value:
                  role: member
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                response-if-user-already-had-membership-with-organization:
                  $ref: '#/components/examples/org-membership-response-if-user-has-an-active-admin-membership-with-organization'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    delete:
      summary: Remove organization membership for a user
      description: 'In order to remove a user''s membership with an organization, the authenticated user must be an organization owner.


        If the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases.


        > [!NOTE]

        > If a user has both direct membership in the organization as well as indirect membership via an enterprise team, only their direct membership will be removed. Their indirect membership via an enterprise team remains until the user is removed from the enterprise team.'
      tags:
      - orgs
      operationId: orgs/remove-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-organization-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/organization-roles:
    get:
      summary: Get all organization roles for an organization
      description: 'Lists the organization roles available in this organization. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        To use this endpoint, the authenticated user must be one of:


        - An administrator for the organization.

        - A user, or a user on a team, with the fine-grained permissions of `read_organization_custom_org_role` in the organization.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-org-roles
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#get-all-organization-roles-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response - list of organization roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                    description: The total number of organization roles available to the organization.
                  roles:
                    type: array
                    description: The list of organization roles available to the organization.
                    items:
                      $ref: '#/components/schemas/organization-role'
              examples:
                default:
                  $ref: '#/components/examples/organization-role-list'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/teams/{team_slug}:
    delete:
      summary: Remove all organization roles for a team
      description: 'Removes all assigned organization roles from a team. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/revoke-all-org-roles-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#remove-all-organization-roles-for-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}:
    put:
      summary: Assign an organization role to a team
      description: 'Assigns an organization role to a team in an organization. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/assign-team-to-org-role
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#assign-an-organization-role-to-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/role-id'
      responses:
        '204':
          description: Response
        '404':
          description: Response if the organization, team or role does not exist.
        '422':
          description: Response if the organization roles feature is not enabled for the organization, or validation failed.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
    delete:
      summary: Remove an organization role from a team
      description: 'Removes an organization role from a team. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/revoke-org-role-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#remove-an-organization-role-from-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/role-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/users/{username}:
    delete:
      summary: Remove all organization roles for a user
      description: 'Revokes all assigned organization roles from a user. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/revoke-all-org-roles-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#remove-all-organization-roles-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/users/{username}/{role_id}:
    put:
      summary: Assign an organization role to a user
      description: 'Assigns an organization role to a member of an organization. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/assign-user-to-org-role
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#assign-an-organization-role-to-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/role-id'
      responses:
        '204':
          description: Response
        '404':
          description: Response if the organization, user or role does not exist.
        '422':
          description: Response if the organization roles feature is not enabled enabled for the organization, the validation failed, or the user is not an organization member.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
    delete:
      summary: Remove an organization role from a user
      description: 'Remove an organization role from a user. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        The authenticated user must be an administrator for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/revoke-org-role-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#remove-an-organization-role-from-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/role-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/{role_id}:
    get:
      summary: Get an organization role
      description: 'Gets an organization role that is available to this organization. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        To use this endpoint, the authenticated user must be one of:


        - An administrator for the organization.

        - A user, or a user on a team, with the fine-grained permissions of `read_organization_custom_org_role` in the organization.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/get-org-role
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#get-an-organization-role
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/role-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/organization-role'
              examples:
                default:
                  $ref: '#/components/examples/organization-role'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/{role_id}/teams:
    get:
      summary: List teams that are assigned to an organization role
      description: 'Lists the teams that are assigned to an organization role. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        To use this endpoint, you must be an administrator for the organization.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-org-role-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#list-teams-that-are-assigned-to-an-organization-role
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/role-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response - List of assigned teams
          content:
            application/json:
              schema:
                type: array
                description: List of teams assigned to the organization role
                items:
                  $ref: '#/components/schemas/team-role-assignment'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          description: Response if the organization or role does not exist.
        '422':
          description: Response if the organization roles feature is not enabled or validation failed.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/organization-roles/{role_id}/users:
    get:
      summary: List users that are assigned to an organization role
      description: 'Lists organization members that are assigned to an organization role. For more information on organization roles, see "[Using organization roles](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/using-organization-roles)."


        To use this endpoint, you must be an administrator for the organization.


        OAuth app tokens and personal access tokens (classic) need the `admin:org` scope to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-org-role-users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/organization-roles#list-users-that-are-assigned-to-an-organization-role
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/role-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response - List of assigned users
          content:
            application/json:
              schema:
                type: array
                description: List of users assigned to the organization role
                items:
                  $ref: '#/components/schemas/user-role-assignment'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          description: Response if the organization or role does not exist.
        '422':
          description: Response if the organization roles feature is not enabled or validation failed.
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: organization-roles
  /orgs/{org}/outside_collaborators:
    get:
      summary: List outside collaborators for an organization
      description: List all users who are outside collaborators of an organization.
      tags:
      - orgs
      operationId: orgs/list-outside-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#list-outside-collaborators-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - name: filter
        description: Filter the list of outside collaborators. `2fa_disabled` means that only outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled will be returned. `2fa_insecure` means that only outside collaborators with [insecure 2FA methods](https://docs.github.com/organizations/keeping-your-organization-secure/managing-two-factor-authentication-for-your-organization/requiring-two-factor-authentication-in-your-organization#requiring-secure-methods-of-two-factor-authentication-in-your-organization) will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - 2fa_disabled
          - 2fa_insecure
          - all
          default: all
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  /orgs/{org}/outside_collaborators/{username}:
    put:
      summary: Convert an organization member to outside collaborator
      description: When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see "[Converting an organization member to an outside collaborator](https://docs.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)". Converting an organization member to an outside collaborator may be restricted by enterprise administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
      tags:
      - orgs
      operationId: orgs/convert-member-to-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#convert-an-organization-member-to-outside-collaborator
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                async:
                  type: boolean
                  description: When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.
                  default: false
            examples:
              '202':
                summary: Status code 202, asynchronous request
                value:
                  async: true
              '204':
                summary: Status code 204, synchronous request
                value: null
      responses:
        '202':
          description: User is getting converted asynchronously
          content:
            application/json:
              schema:
                type: object
                properties: {}
                additionalProperties: false
              examples:
                '202':
                  value: null
        '204':
          description: User was converted
        '403':
          description: Forbidden if user is the last owner of the organization, not a member of the organization, or if the enterprise enforces a policy for inviting outside collaborators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)."
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
    delete:
      summary: Remove outside collaborator from an organization
      description: Removing a user from this list will remove them from all the organization's repositories.
      tags:
      - orgs
      operationId: orgs/remove-outside-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '422':
          description: Unprocessable Entity if user is a member of the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-user-is-a-member-of-the-organization:
                  value:
                    message: You cannot specify an organization member to remove as an outside collaborator.
                    documentation_url: https://docs.github.com/rest/orgs/outside-collaborators#remove-outside-collaborator-from-an-organization
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: outside-collaborators
  /orgs/{org}/personal-access-token-requests:
    get:
      summary: List requests to access organization resources with fine-grained personal access tokens
      description: 'Lists requests from organization members to access organization resources with a fine-grained personal access token.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-pat-grant-requests
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/personal-access-token-sort'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/personal-access-token-owner'
      - $ref: '#/components/parameters/personal-access-token-repository'
      - $ref: '#/components/parameters/personal-access-token-permission'
      - $ref: '#/components/parameters/personal-access-token-before'
      - $ref: '#/components/parameters/personal-access-token-after'
      - $ref: '#/components/parameters/personal-access-token-token-id'
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-programmatic-access-grant-request'
              examples:
                default:
                  $ref: '#/components/examples/org-pat-grant-request-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
    post:
      summary: Review requests to access organization resources with fine-grained personal access tokens
      description: 'Approves or denies multiple pending requests to access organization resources via a fine-grained personal access token.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/review-pat-grant-requests-in-bulk
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#review-requests-to-access-organization-resources-with-fine-grained-personal-access-tokens
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pat_request_ids:
                  type: array
                  description: Unique identifiers of the requests for access via fine-grained personal access token. Must be formed of between 1 and 100 `pat_request_id` values.
                  items:
                    type: integer
                  minItems: 1
                  maxItems: 100
                action:
                  type: string
                  description: Action to apply to the requests.
                  enum:
                  - approve
                  - deny
                reason:
                  type: string
                  description: Reason for approving or denying the requests. Max 1024 characters.
                  maxLength: 1024
                  nullable: true
              required:
              - action
            examples:
              '204':
                summary: Example of denying a request
                value:
                  pat_request_ids:
                  - 42
                  - 73
                  action: deny
                  reason: Access is too broad.
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '202':
          $ref: '#/components/responses/accepted'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/personal-access-token-requests/{pat_request_id}:
    post:
      summary: Review a request to access organization resources with a fine-grained personal access token
      description: 'Approves or denies a pending request to access organization resources via a fine-grained personal access token.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/review-pat-grant-request
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#review-a-request-to-access-organization-resources-with-a-fine-grained-personal-access-token
      parameters:
      - $ref: '#/components/parameters/org'
      - name: pat_request_id
        in: path
        description: Unique identifier of the request for access via fine-grained personal access token.
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the request.
                  enum:
                  - approve
                  - deny
                reason:
                  type: string
                  description: Reason for approving or denying the request. Max 1024 characters.
                  maxLength: 1024
                  nullable: true
              required:
              - action
            examples:
              '204':
                summary: Example of denying a request
                value:
                  action: deny
                  reason: This request is denied because the access is too broad.
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories:
    get:
      summary: List repositories requested to be accessed by a fine-grained personal access token
      description: 'Lists the repositories a fine-grained personal access token request is requesting access to.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-pat-grant-request-repositories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-repositories-requested-to-be-accessed-by-a-fine-grained-personal-access-token
      parameters:
      - $ref: '#/components/parameters/org'
      - name: pat_request_id
        in: path
        description: Unique identifier of the request for access via fine-grained personal access token.
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/personal-access-tokens:
    get:
      summary: List fine-grained personal access tokens with access to organization resources
      description: 'Lists approved fine-grained personal access tokens owned by organization members that can access organization resources.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-pat-grants
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-fine-grained-personal-access-tokens-with-access-to-organization-resources
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/personal-access-token-sort'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/personal-access-token-owner'
      - $ref: '#/components/parameters/personal-access-token-repository'
      - $ref: '#/components/parameters/personal-access-token-permission'
      - $ref: '#/components/parameters/personal-access-token-before'
      - $ref: '#/components/parameters/personal-access-token-after'
      - $ref: '#/components/parameters/personal-access-token-token-id'
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-programmatic-access-grant'
              examples:
                default:
                  $ref: '#/components/examples/org-pat-grant-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
    post:
      summary: Update the access to organization resources via fine-grained personal access tokens
      description: 'Updates the access organization members have to organization resources via fine-grained personal access tokens. Limited to revoking a token''s existing access.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/update-pat-accesses
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#update-the-access-to-organization-resources-via-fine-grained-personal-access-tokens
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the fine-grained personal access token.
                  enum:
                  - revoke
                pat_ids:
                  description: The IDs of the fine-grained personal access tokens.
                  type: array
                  items:
                    type: integer
                    description: Unique identifier of the fine-grained personal access token.
                  minItems: 1
                  maxItems: 100
              required:
              - action
              - pat_ids
            examples:
              '204':
                summary: Example of revoking a fine-grained personal access token.
                value:
                  action: revoke
                  pat_ids:
                  - 1296269
                  - 1296280
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '404':
          $ref: '#/components/responses/not_found'
        '202':
          $ref: '#/components/responses/accepted'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/personal-access-tokens/{pat_id}:
    post:
      summary: Update the access a fine-grained personal access token has to organization resources
      description: 'Updates the access an organization member has to organization resources via a fine-grained personal access token. Limited to revoking the token''s existing access. Limited to revoking a token''s existing access.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/update-pat-access
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#update-the-access-a-fine-grained-personal-access-token-has-to-organization-resources
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/fine-grained-personal-access-token-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: Action to apply to the fine-grained personal access token.
                  enum:
                  - revoke
              required:
              - action
            examples:
              '204':
                summary: Example of revoking a fine-grained personal access token.
                value:
                  action: revoke
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '404':
          $ref: '#/components/responses/not_found'
        '204':
          $ref: '#/components/responses/no_content'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/personal-access-tokens/{pat_id}/repositories:
    get:
      summary: List repositories a fine-grained personal access token has access to
      description: 'Lists the repositories a fine-grained personal access token has access to.


        Only GitHub Apps can use this endpoint.'
      tags:
      - orgs
      operationId: orgs/list-pat-grant-repositories
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/personal-access-tokens#list-repositories-a-fine-grained-personal-access-token-has-access-to
      parameters:
      - $ref: '#/components/parameters/org'
      - name: pat_id
        in: path
        description: Unique identifier of the fine-grained personal access token.
        required: true
        schema:
          type: integer
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '500':
          $ref: '#/components/responses/internal_error'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: personal-access-tokens
  /orgs/{org}/properties/schema:
    get:
      summary: Get all custom properties for an organization
      description: 'Gets all custom properties defined for an organization.

        Organization members can read these properties.'
      tags:
      - orgs
      operationId: orgs/get-all-custom-properties
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#get-all-custom-properties-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/custom-property'
              examples:
                default:
                  $ref: '#/components/examples/custom-properties'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
    patch:
      summary: Create or update custom properties for an organization
      description: "Creates new or updates existing custom properties defined for an organization in a batch.\n\nIf the property already exists, the existing property will be replaced with the new values.\nMissing optional values will fall back to default values, previous values will be overwritten.\nE.g. if a property exists with `values_editable_by: org_and_repo_actors` and it's updated without specifying `values_editable_by`, it will be updated to default value `org_actors`.\n\nTo use this endpoint, the authenticated user must be one of:\n  - An administrator for the organization.\n  - A user, or a user on a team, with the fine-grained permission of `custom_properties_org_definitions_manager` in the organization."
      tags:
      - orgs
      operationId: orgs/create-or-update-custom-properties
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#create-or-update-custom-properties-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: array
                  description: The array of custom properties to create or update.
                  items:
                    $ref: '#/components/schemas/custom-property'
                  minItems: 1
                  maxItems: 100
              required:
              - properties
            examples:
              default:
                value:
                  properties:
                  - property_name: environment
                    value_type: single_select
                    required: true
                    default_value: production
                    description: Prod or dev environment
                    allowed_values:
                    - production
                    - development
                    values_editable_by: org_actors
                  - property_name: service
                    value_type: string
                  - property_name: team
                    value_type: string
                    description: Team owning the repository
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/custom-property'
              examples:
                default:
                  $ref: '#/components/examples/custom-properties'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
  /orgs/{org}/properties/schema/{custom_property_name}:
    get:
      summary: Get a custom property for an organization
      description: 'Gets a custom property that is defined for an organization.

        Organization members can read these properties.'
      tags:
      - orgs
      operationId: orgs/get-custom-property
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#get-a-custom-property-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/custom-property-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-property'
              examples:
                default:
                  $ref: '#/components/examples/custom-property'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
    put:
      summary: Create or update a custom property for an organization
      description: 'Creates a new or updates an existing custom property that is defined for an organization.


        To use this endpoint, the authenticated user must be one of:

        - An administrator for the organization.

        - A user, or a user on a team, with the fine-grained permission of `custom_properties_org_definitions_manager` in the organization.'
      tags:
      - orgs
      operationId: orgs/create-or-update-custom-property
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#create-or-update-a-custom-property-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/custom-property-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/custom-property-set-payload'
            examples:
              default:
                value:
                  value_type: single_select
                  required: true
                  default_value: production
                  description: Prod or dev environment
                  allowed_values:
                  - production
                  - development
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-property'
              examples:
                default:
                  $ref: '#/components/examples/custom-property'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
    delete:
      summary: Remove a custom property for an organization
      description: "Removes a custom property that is defined for an organization.\n\nTo use this endpoint, the authenticated user must be one of:\n  - An administrator for the organization.\n  - A user, or a user on a team, with the fine-grained permission of `custom_properties_org_definitions_manager` in the organization."
      tags:
      - orgs
      operationId: orgs/remove-custom-property
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#remove-a-custom-property-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/custom-property-name'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
  /orgs/{org}/properties/values:
    get:
      summary: List custom property values for organization repositories
      description: 'Lists organization repositories with all of their custom property values.

        Organization members can read these properties.'
      tags:
      - orgs
      operationId: orgs/list-custom-properties-values-for-repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#list-custom-property-values-for-organization-repositories
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: repository_query
        description: Finds repositories in the organization with a query containing one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)" for a detailed list of qualifiers.
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-repo-custom-property-values'
              examples:
                default:
                  $ref: '#/components/examples/org-repo-custom-property-values'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
    patch:
      summary: Create or update custom property values for organization repositories
      description: "Create new or update existing custom property values for repositories in a batch that belong to an organization.\nEach target repository will have its custom property values updated to match the values provided in the request.\n\nA maximum of 30 repositories can be updated in a single request.\n\nUsing a value of `null` for a custom property will remove or 'unset' the property value from the repository.\n\nTo use this endpoint, the authenticated user must be one of:\n  - An administrator for the organization.\n  - A user, or a user on a team, with the fine-grained permission of `custom_properties_org_values_editor` in the organization."
      tags:
      - orgs
      operationId: orgs/create-or-update-custom-properties-values-for-repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/custom-properties#create-or-update-custom-property-values-for-organization-repositories
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repository_names:
                  type: array
                  description: The names of repositories that the custom property values will be applied to.
                  items:
                    type: string
                  minItems: 1
                  maxItems: 30
                properties:
                  type: array
                  description: List of custom property names and associated values to apply to the repositories.
                  items:
                    $ref: '#/components/schemas/custom-property-value'
              required:
              - repository_names
              - properties
            examples:
              default:
                $ref: '#/components/examples/org-repo-update-custom-property-values'
      responses:
        '204':
          description: No Content when custom property values are successfully created or updated
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: custom-properties
  /orgs/{org}/public_members:
    get:
      summary: List public organization members
      description: Members of an organization can choose to have their membership publicized or not.
      tags:
      - orgs
      operationId: orgs/list-public-members
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-public-organization-members
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /orgs/{org}/public_members/{username}:
    get:
      summary: Check public organization membership for a user
      description: Check if the provided user is a public member of the organization.
      tags:
      - orgs
      operationId: orgs/check-public-membership-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#check-public-organization-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if user is a public member
        '404':
          description: Not Found if user is not a public member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    put:
      summary: Set public organization membership for the authenticated user
      description: 'The user can publicize their own membership. (A user cannot publicize the membership for another user.)


        Note that you''ll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."'
      tags:
      - orgs
      operationId: orgs/set-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#set-public-organization-membership-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
    delete:
      summary: Remove public organization membership for the authenticated user
      description: Removes the public membership for the authenticated user from the specified organization, unless public visibility is enforced by default.
      tags:
      - orgs
      operationId: orgs/remove-public-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#remove-public-organization-membership-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: members
  /orgs/{org}/rulesets/{ruleset_id}/history:
    get:
      summary: Get organization ruleset history
      description: Get the history of an organization ruleset.
      tags:
      - orgs
      operationId: orgs/get-org-ruleset-history
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-organization-ruleset-history
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleset-version'
              examples:
                default:
                  $ref: '#/components/examples/ruleset-history'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
  /orgs/{org}/rulesets/{ruleset_id}/history/{version_id}:
    get:
      summary: Get organization ruleset version
      description: Get a version of an organization ruleset.
      tags:
      - orgs
      operationId: orgs/get-org-ruleset-version
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-organization-ruleset-version
      parameters:
      - $ref: '#/components/parameters/org'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      - name: version_id
        description: The ID of the version
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset-version-with-state'
              examples:
                default:
                  $ref: '#/components/examples/org-ruleset-version-with-state'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
  /orgs/{org}/security-managers:
    get:
      summary: List security manager teams
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed starting January 1, 2026. Please use the "[Organization Roles](https://docs.github.com/rest/orgs/organization-roles)" endpoints instead.'
      tags:
      - orgs
      operationId: orgs/list-security-manager-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#list-security-manager-teams
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-simple'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
        deprecationDate: '2024-12-01'
        removalDate: '2026-01-01'
      deprecated: true
  /orgs/{org}/security-managers/teams/{team_slug}:
    put:
      summary: Add a security manager team
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed starting January 1, 2026. Please use the "[Organization Roles](https://docs.github.com/rest/orgs/organization-roles)" endpoints instead.'
      tags:
      - orgs
      operationId: orgs/add-security-manager-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#add-a-security-manager-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
        deprecationDate: '2024-12-01'
        removalDate: '2026-01-01'
      deprecated: true
    delete:
      summary: Remove a security manager team
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed starting January 1, 2026. Please use the "[Organization Roles](https://docs.github.com/rest/orgs/organization-roles)" endpoints instead.'
      tags:
      - orgs
      operationId: orgs/remove-security-manager-team
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/security-managers#remove-a-security-manager-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: security-managers
        deprecationDate: '2024-12-01'
        removalDate: '2026-01-01'
      deprecated: true
  /orgs/{org}/{security_product}/{enablement}:
    post:
      summary: Enable or disable a security feature for an organization
      description: '> [!WARNING]

        > **Closing down notice:** The ability to enable or disable a security feature for all eligible repositories in an organization is closing down. Please use [code security configurations](https://docs.github.com/rest/code-security/configurations) instead. For more information, see the [changelog](https://github.blog/changelog/2024-07-22-deprecation-of-api-endpoint-to-enable-or-disable-a-security-feature-for-an-organization/).


        Enables or disables the specified security feature for all eligible repositories in an organization. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


        The authenticated user must be an organization owner or be member of a team with the security manager role to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `admin:org`, `write:org`, or `repo` scopes to use this endpoint.'
      tags:
      - orgs
      operationId: orgs/enable-or-disable-security-product-on-all-org-repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#enable-or-disable-a-security-feature-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/security-product'
      - $ref: '#/components/parameters/org-security-product-enablement'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              properties:
                query_suite:
                  description: 'CodeQL query suite to be used. If you specify the `query_suite` parameter, the default setup will be configured with this query suite only on all repositories that didn''t have default setup already configured. It will not change the query suite on repositories that already have default setup configured.

                    If you don''t specify any `query_suite` in your request, the preferred query suite of the organization will be applied.'
                  type: string
                  enum:
                  - default
                  - extended
            examples:
              default:
                value: null
      responses:
        '204':
          description: Action started
        '422':
          description: The action could not be taken due to an in progress enablement, or a policy is preventing enablement
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: orgs
        subcategory: orgs
        deprecationDate: '2024-07-22'
        removalDate: '2025-07-22'
      deprecated: true
  /user/memberships/orgs:
    get:
      summary: List organization memberships for the authenticated user
      description: Lists all of the authenticated user's organization memberships.
      tags:
      - orgs
      operationId: orgs/list-memberships-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#list-organization-memberships-for-the-authenticated-user
      parameters:
      - name: state
        description: Indicates the state of the memberships to return. If not specified, the API returns both active and pending memberships.
        in: query
        required: false
        schema:
          type: string
          enum:
          - active
          - pending
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '401':
          $ref: '#/components/responses/requires_authentication'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/memberships/orgs/{org}:
    get:
      summary: Get an organization membership for the authenticated user
      description: If the authenticated user is an active or pending member of the organization, this endpoint will return the user's membership. If the authenticated user is not affiliated with the organization, a `404` is returned. This endpoint will return a `403` if the request is made by a GitHub App that is blocked by the organization.
      tags:
      - orgs
      operationId: orgs/get-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#get-an-organization-membership-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
    patch:
      summary: Update an organization membership for the authenticated user
      description: Converts the authenticated user to an active member of the organization, if that user has a pending invitation from the organization.
      tags:
      - orgs
      operationId: orgs/update-membership-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/members#update-an-organization-membership-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state that the membership should be in. Only `"active"` will be accepted.
                  enum:
                  - active
              required:
              - state
            examples:
              default:
                value:
                  state: active
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/org-membership'
              examples:
                default:
                  $ref: '#/components/examples/org-membership-2'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: members
  /user/orgs:
    get:
      summary: List organizations for the authenticated user
      description: 'List organizations for the authenticated user.


        For OAuth app tokens and personal access tokens (classic), this endpoint only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope for OAuth app tokens and personal access tokens (classic). Requests with insufficient scope will receive a `403 Forbidden` response.


        > [!NOTE]

        > Requests using a fine-grained access token will receive a `200 Success` response with an empty list.'
      tags:
      - orgs
      operationId: orgs/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: orgs
        subcategory: orgs
  /users/{username}/orgs:
    get:
      summary: List organizations for a user
      description: 'List [public organization memberships](https://docs.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.


        This method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://docs.github.com/rest/orgs/orgs#list-organizations-for-the-authenticated-user) API instead.'
      tags:
      - orgs
      operationId: orgs/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/orgs#list-organizations-for-a-user
      parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-simple'
              examples:
                default:
                  $ref: '#/components/examples/organization-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: orgs
