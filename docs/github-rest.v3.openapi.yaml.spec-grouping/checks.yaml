openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory\
            \ comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual\
            \ is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members\
            \ of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/enterprise'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          description: 'Enable or disable GitHub Advanced Security for the repository.


            For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

            '
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    pull-request-minimal:
      title: Pull Request Minimal
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
        url:
          type: string
        head:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
        base:
          type: object
          properties:
            ref:
              type: string
            sha:
              type: string
            repo:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                url:
                  type: string
                name:
                  type: string
              required:
              - id
              - url
              - name
          required:
          - ref
          - sha
          - repo
      required:
      - id
      - number
      - url
      - head
      - base
    deployment-simple:
      title: Deployment
      description: A deployment created as the result of an Actions check run from a workflow that references an environment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
      - id
      - node_id
      - task
      - environment
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    check-run:
      title: CheckRun
      description: A check performed on the code of a given code change
      type: object
      properties:
        id:
          description: The id of the check.
          example: 21
          type: integer
          format: int64
        head_sha:
          description: The SHA of the commit that is being checked.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        node_id:
          type: string
          example: MDg6Q2hlY2tSdW40
        external_id:
          type: string
          example: '42'
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url:
          type: string
          example: https://github.com/github/hello-world/runs/4
          nullable: true
        details_url:
          type: string
          example: https://example.com
          nullable: true
        status:
          description: The phase of the lifecycle that the check is currently in. Statuses of waiting, requested, and pending are reserved for GitHub Actions check runs.
          example: queued
          type: string
          enum:
          - queued
          - in_progress
          - completed
          - waiting
          - requested
          - pending
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          nullable: true
        started_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        completed_at:
          type: string
          format: date-time
          example: '2018-05-04T01:14:52Z'
          nullable: true
        output:
          type: object
          properties:
            title:
              type: string
              nullable: true
            summary:
              type: string
              nullable: true
            text:
              type: string
              nullable: true
            annotations_count:
              type: integer
            annotations_url:
              type: string
              format: uri
          required:
          - title
          - summary
          - text
          - annotations_count
          - annotations_url
        name:
          description: The name of the check.
          example: test-coverage
          type: string
        check_suite:
          type: object
          properties:
            id:
              type: integer
          required:
          - id
          nullable: true
        app:
          $ref: '#/components/schemas/nullable-integration'
        pull_requests:
          description: Pull requests that are open with a `head_sha` or `head_branch` that matches the check. The returned pull requests do not necessarily indicate pull requests that triggered the check.
          type: array
          items:
            $ref: '#/components/schemas/pull-request-minimal'
        deployment:
          $ref: '#/components/schemas/deployment-simple'
      required:
      - id
      - node_id
      - head_sha
      - name
      - url
      - html_url
      - details_url
      - status
      - conclusion
      - started_at
      - completed_at
      - external_id
      - check_suite
      - output
      - app
      - pull_requests
    check-annotation:
      title: Check Annotation
      description: Check Annotation
      type: object
      properties:
        path:
          type: string
          example: README.md
        start_line:
          type: integer
          example: 2
        end_line:
          type: integer
          example: 2
        start_column:
          type: integer
          example: 5
          nullable: true
        end_column:
          type: integer
          example: 10
          nullable: true
        annotation_level:
          type: string
          example: warning
          nullable: true
        title:
          type: string
          example: Spell Checker
          nullable: true
        message:
          type: string
          example: Check your spelling for 'banaas'.
          nullable: true
        raw_details:
          type: string
          example: Do you mean 'bananas' or 'banana'?
          nullable: true
        blob_href:
          type: string
      required:
      - path
      - blob_href
      - start_line
      - end_line
      - start_column
      - end_column
      - annotation_level
      - title
      - message
      - raw_details
    simple-commit:
      title: Simple Commit
      description: A commit.
      type: object
      properties:
        id:
          type: string
          description: SHA for the commit
          example: 7638417db6d59f3c431d3e1f261cc637155684cd
        tree_id:
          type: string
          description: SHA for the commit's tree
        message:
          description: Message describing the purpose of the commit
          example: 'Fix #42'
          type: string
        timestamp:
          description: Timestamp of the commit
          example: '2014-08-09T08:02:04+12:00'
          format: date-time
          type: string
        author:
          type: object
          description: Information about the Git author
          properties:
            name:
              description: Name of the commit's author
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's author
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
        committer:
          type: object
          description: Information about the Git committer
          properties:
            name:
              description: Name of the commit's committer
              example: Monalisa Octocat
              type: string
            email:
              description: Git email address of the commit's committer
              example: monalisa.octocat@example.com
              type: string
              format: email
          required:
          - name
          - email
          nullable: true
      required:
      - id
      - tree_id
      - message
      - timestamp
      - author
      - committer
    check-suite:
      title: CheckSuite
      description: A suite of checks performed on the code of a given code change
      type: object
      properties:
        id:
          type: integer
          example: 5
          format: int64
        node_id:
          type: string
          example: MDEwOkNoZWNrU3VpdGU1
        head_branch:
          type: string
          example: master
          nullable: true
        head_sha:
          description: The SHA of the head commit that is being checked.
          example: 009b8a3a9ccbb128af87f9b1c0f4c62e8a304f6d
          type: string
        status:
          type: string
          description: The phase of the lifecycle that the check suite is currently in. Statuses of waiting, requested, and pending are reserved for GitHub Actions check suites.
          example: completed
          enum:
          - queued
          - in_progress
          - completed
          - waiting
          - requested
          - pending
          nullable: true
        conclusion:
          type: string
          example: neutral
          enum:
          - success
          - failure
          - neutral
          - cancelled
          - skipped
          - timed_out
          - action_required
          - startup_failure
          - stale
          - null
          nullable: true
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/check-suites/5
          nullable: true
        before:
          type: string
          example: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          nullable: true
        after:
          type: string
          example: d6fde92930d4715a2b49857d24b940956b26d2d3
          nullable: true
        pull_requests:
          type: array
          items:
            $ref: '#/components/schemas/pull-request-minimal'
          nullable: true
        app:
          $ref: '#/components/schemas/nullable-integration'
        repository:
          $ref: '#/components/schemas/minimal-repository'
        created_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
          nullable: true
        head_commit:
          $ref: '#/components/schemas/simple-commit'
        latest_check_runs_count:
          type: integer
        check_runs_url:
          type: string
        rerequestable:
          type: boolean
        runs_rerequestable:
          type: boolean
      required:
      - id
      - node_id
      - head_branch
      - status
      - conclusion
      - head_sha
      - url
      - before
      - after
      - created_at
      - updated_at
      - app
      - head_commit
      - repository
      - latest_check_runs_count
      - check_runs_url
      - pull_requests
    check-suite-preference:
      title: Check Suite Preference
      description: Check suite configuration preferences for a repository.
      type: object
      required:
      - preferences
      - repository
      properties:
        preferences:
          type: object
          properties:
            auto_trigger_checks:
              type: array
              items:
                type: object
                properties:
                  app_id:
                    type: integer
                  setting:
                    type: boolean
                required:
                - app_id
                - setting
        repository:
          $ref: '#/components/schemas/minimal-repository'
  examples:
    check-run-example-of-completed-conclusion:
      summary: Response for completed conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: '42'
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run-example-of-in-progress-conclusion:
      summary: Response for in_progress conclusion
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: '42'
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: in_progress
        conclusion: null
        started_at: '2018-05-04T01:14:52Z'
        completed_at: null
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-run:
      value:
        id: 4
        head_sha: ce587453ced02b1526dfb4cb910479d431683101
        node_id: MDg6Q2hlY2tSdW40
        external_id: ''
        url: https://api.github.com/repos/github/hello-world/check-runs/4
        html_url: https://github.com/github/hello-world/runs/4
        details_url: https://example.com
        status: completed
        conclusion: neutral
        started_at: '2018-05-04T01:14:52Z'
        completed_at: '2018-05-04T01:14:52Z'
        output:
          title: Mighty Readme report
          summary: There are 0 failures, 2 warnings, and 1 notice.
          text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
          annotations_count: 2
          annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
        name: mighty_readme
        check_suite:
          id: 5
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        pull_requests:
        - url: https://api.github.com/repos/github/hello-world/pulls/1
          id: 1934
          number: 3956
          head:
            ref: say-hello
            sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
          base:
            ref: master
            sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
            repo:
              id: 526
              url: https://api.github.com/repos/github/hello-world
              name: hello-world
    check-annotation-items:
      value:
      - path: README.md
        start_line: 2
        end_line: 2
        start_column: 5
        end_column: 10
        annotation_level: warning
        title: Spell Checker
        message: Check your spelling for 'banaas'.
        raw_details: Do you mean 'bananas' or 'banana'?
        blob_href: https://api.github.com/repos/github/rest-api-description/git/blobs/abc
    check-suite:
      value:
        id: 5
        node_id: MDEwOkNoZWNrU3VpdGU1
        head_branch: master
        head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
        status: completed
        conclusion: neutral
        url: https://api.github.com/repos/github/hello-world/check-suites/5
        before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
        after: d6fde92930d4715a2b49857d24b940956b26d2d3
        pull_requests: []
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        app:
          id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World-Template
            full_name: octocat/Hello-World-Template
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World-Template
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World-Template
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            homepage: https://github.com
            language: null
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          delete_branch_on_merge: true
          subscribers_count: 42
          network_count: 0
        head_commit:
          id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          message: 'Merge pull request #6 from Spaceghost/patch-1


            New line at end of file.'
          timestamp: '2016-10-10T00:00:00Z'
          author:
            name: The Octocat
            email: octocat@nowhere.com
          committer:
            name: The Octocat
            email: octocat@nowhere.com
        latest_check_runs_count: 1
        check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
    check-suite-preference:
      value:
        preferences:
          auto_trigger_checks:
          - app_id: 2
            setting: true
          - app_id: 4
            setting: false
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: false
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          template_repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World-Template
            full_name: octocat/Hello-World-Template
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World-Template
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World-Template
            archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
            forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World-Template.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World-Template.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World-Template.git
            mirror_url: git:git.example.com/octocat/Hello-World-Template
            hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
            svn_url: https://svn.github.com/octocat/Hello-World-Template
            homepage: https://github.com
            language: null
            forks: 9
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            watchers: 80
            size: 108
            default_branch: master
            open_issues: 0
            open_issues_count: 0
            is_template: true
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
    check-run-paginated:
      value:
        total_count: 1
        check_runs:
        - id: 4
          head_sha: ce587453ced02b1526dfb4cb910479d431683101
          node_id: MDg6Q2hlY2tSdW40
          external_id: ''
          url: https://api.github.com/repos/github/hello-world/check-runs/4
          html_url: https://github.com/github/hello-world/runs/4
          details_url: https://example.com
          status: completed
          conclusion: neutral
          started_at: '2018-05-04T01:14:52Z'
          completed_at: '2018-05-04T01:14:52Z'
          output:
            title: Mighty Readme report
            summary: There are 0 failures, 2 warnings, and 1 notice.
            text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
            annotations_count: 2
            annotations_url: https://api.github.com/repos/github/hello-world/check-runs/4/annotations
          name: mighty_readme
          check_suite:
            id: 5
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          pull_requests:
          - url: https://api.github.com/repos/github/hello-world/pulls/1
            id: 1934
            number: 3956
            head:
              ref: say-hello
              sha: 3dca65fa3e8d4b3da3f3d056c59aee1c50f41390
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
            base:
              ref: master
              sha: e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f
              repo:
                id: 526
                url: https://api.github.com/repos/github/hello-world
                name: hello-world
    check-suite-paginated:
      value:
        total_count: 1
        check_suites:
        - id: 5
          node_id: MDEwOkNoZWNrU3VpdGU1
          head_branch: master
          head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
          status: completed
          conclusion: neutral
          url: https://api.github.com/repos/github/hello-world/check-suites/5
          before: 146e867f55c26428e5f9fade55a9bbf5e95a7912
          after: d6fde92930d4715a2b49857d24b940956b26d2d3
          pull_requests: []
          app:
            id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: true
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
          repository:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            delete_branch_on_merge: true
            subscribers_count: 42
            network_count: 0
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          head_commit:
            id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            tree_id: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: 'Merge pull request #6 from Spaceghost/patch-1


              New line at end of file.'
            timestamp: '2016-10-10T00:00:00Z'
            author:
              name: The Octocat
              email: octocat@nowhere.com
            committer:
              name: The Octocat
              email: octocat@nowhere.com
          latest_check_runs_count: 1
          check_runs_url: https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs
  parameters:
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    check-run-id:
      name: check_run_id
      description: The unique identifier of the check run.
      in: path
      required: true
      schema:
        type: integer
    check-suite-id:
      name: check_suite_id
      description: The unique identifier of the check suite.
      in: path
      required: true
      schema:
        type: integer
    check-name:
      name: check_name
      description: Returns check runs with the specified `name`.
      in: query
      required: false
      schema:
        type: string
    status:
      name: status
      description: Returns check runs with the specified `status`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - queued
        - in_progress
        - completed
    commit-ref:
      name: ref
      description: The commit reference. Can be a commit SHA, branch name (`heads/BRANCH_NAME`), or tag name (`tags/TAG_NAME`). For more information, see "[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)" in the Git documentation.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: checks
  description: Rich interactions with checks run by your integrations.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /repos/{owner}/{repo}/check-runs:
    post:
      summary: Create a check run
      description: 'Creates a new check run for a specific commit in a repository.


        To create a check run, you must use a GitHub App. OAuth apps and authenticated users are not able to create a check suite.


        In a check suite, GitHub limits the number of check runs with the same name to 1000. Once these check runs exceed 1000, GitHub will start to automatically delete older check runs.


        > [!NOTE]

        > The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.'
      tags:
      - checks
      operationId: checks/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#create-a-check-run
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                head_sha:
                  type: string
                  description: The SHA of the commit.
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                status:
                  type: string
                  description: The current status of the check run. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.
                  enum:
                  - queued
                  - in_progress
                  - completed
                  - waiting
                  - requested
                  - pending
                  default: queued
                started_at:
                  type: string
                  format: date-time
                  description: 'The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this."
                  enum:
                  - action_required
                  - cancelled
                  - failure
                  - neutral
                  - success
                  - skipped
                  - stale
                  - timed_out
                completed_at:
                  type: string
                  format: date-time
                  description: 'The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run.
                  properties:
                    title:
                      type: string
                      description: The title of the check run.
                    summary:
                      type: string
                      maxLength: 65535
                      description: 'The summary of the check run. This parameter supports Markdown. **Maximum length**: 65535 characters.'
                    text:
                      type: string
                      maxLength: 65535
                      description: 'The details of the check run. This parameter supports Markdown. **Maximum length**: 65535 characters.'
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/checks/runs#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. GitHub Actions are limited to 10 warning annotations and 10 error annotations per step. For details about how you can view annotations on GitHub, see "[About status checks](https://docs.github.com/articles/about-status-checks#checks)".
                      maxItems: 50
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation. Line numbers start at 1.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values. Column numbers start at 1.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation. The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub pull request UI.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - title
                  - summary
                actions:
                  type: array
                  description: Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. To learn more about check runs and requested actions, see "[Check runs and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions)."
                  maxItems: 3
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        maxLength: 20
                        description: The text to be displayed on a button in the web UI. The maximum size is 20 characters.
                      description:
                        type: string
                        maxLength: 40
                        description: A short explanation of what this action would do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        maxLength: 20
                        description: A reference for the action on the integrator's system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
              required:
              - name
              - head_sha
              discriminator:
                propertyName: status
              oneOf:
              - properties:
                  status:
                    enum:
                    - completed
                required:
                - status
                - conclusion
                additionalProperties: true
              - properties:
                  status:
                    enum:
                    - queued
                    - in_progress
                additionalProperties: true
            examples:
              example-of-in-progress-conclusion:
                summary: Example of an in_progress conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: in_progress
                  external_id: '42'
                  started_at: '2018-05-04T01:14:52Z'
                  output:
                    title: Mighty Readme report
                    summary: ''
                    text: ''
              example-of-completed-conclusion:
                summary: Example of a completed conclusion
                value:
                  name: mighty_readme
                  head_sha: ce587453ced02b1526dfb4cb910479d431683101
                  status: completed
                  started_at: '2017-11-30T19:39:10Z'
                  conclusion: success
                  completed_at: '2017-11-30T19:49:10Z'
                  output:
                    title: Mighty Readme report
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
                    annotations:
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'banaas'.
                      raw_details: Do you mean 'bananas' or 'banana'?
                      start_line: 2
                      end_line: 2
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'aples'
                      raw_details: Do you mean 'apples' or 'Naples'
                      start_line: 4
                      end_line: 4
                    images:
                    - alt: Super bananas
                      image_url: http://example.com/images/42
                  actions:
                  - label: Fix
                    identifier: fix_errors
                    description: Allow us to fix these errors for you
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-run'
              examples:
                example-of-completed-conclusion:
                  $ref: '#/components/examples/check-run-example-of-completed-conclusion'
                example-of-in-progress-conclusion:
                  $ref: '#/components/examples/check-run-example-of-in-progress-conclusion'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/check-runs/{check_run_id}:
    get:
      summary: Get a check run
      description: 'Gets a single check run using its `id`.


        > [!NOTE]

        > The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#get-a-check-run
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-run-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-run'
              examples:
                default:
                  $ref: '#/components/examples/check-run'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
    patch:
      summary: Update a check run
      description: 'Updates a check run for a specific commit in a repository.


        > [!NOTE]

        > The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.


        OAuth apps and personal access tokens (classic) cannot use this endpoint.'
      tags:
      - checks
      operationId: checks/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#update-a-check-run
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-run-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the check. For example, "code-coverage".
                details_url:
                  type: string
                  description: The URL of the integrator's site that has the full details of the check.
                external_id:
                  type: string
                  description: A reference for the run on the integrator's system.
                started_at:
                  type: string
                  format: date-time
                  description: 'This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
                status:
                  type: string
                  description: The current status of the check run. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.
                  enum:
                  - queued
                  - in_progress
                  - completed
                  - waiting
                  - requested
                  - pending
                conclusion:
                  type: string
                  description: "**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. \n**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this."
                  enum:
                  - action_required
                  - cancelled
                  - failure
                  - neutral
                  - success
                  - skipped
                  - stale
                  - timed_out
                completed_at:
                  type: string
                  format: date-time
                  description: 'The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
                output:
                  type: object
                  description: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run.
                  properties:
                    title:
                      type: string
                      description: '**Required**.'
                    summary:
                      type: string
                      description: Can contain Markdown.
                      maxLength: 65535
                    text:
                      type: string
                      description: Can contain Markdown.
                      maxLength: 65535
                    annotations:
                      type: array
                      description: Adds information from your analysis to specific lines of code. Annotations are visible in GitHub's pull request UI. Annotations are visible in GitHub's pull request UI. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/checks/runs#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. GitHub Actions are limited to 10 warning annotations and 10 error annotations per step. For details about annotations in the UI, see "[About status checks](https://docs.github.com/articles/about-status-checks#checks)".
                      maxItems: 50
                      items:
                        type: object
                        properties:
                          path:
                            type: string
                            description: The path of the file to add an annotation to. For example, `assets/css/main.css`.
                          start_line:
                            type: integer
                            description: The start line of the annotation. Line numbers start at 1.
                          end_line:
                            type: integer
                            description: The end line of the annotation.
                          start_column:
                            type: integer
                            description: The start column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values. Column numbers start at 1.
                          end_column:
                            type: integer
                            description: The end column of the annotation. Annotations only support `start_column` and `end_column` on the same line. Omit this parameter if `start_line` and `end_line` have different values.
                          annotation_level:
                            type: string
                            description: The level of the annotation.
                            enum:
                            - notice
                            - warning
                            - failure
                          message:
                            type: string
                            description: A short description of the feedback for these lines of code. The maximum size is 64 KB.
                          title:
                            type: string
                            description: The title that represents the annotation. The maximum size is 255 characters.
                          raw_details:
                            type: string
                            description: Details about this annotation. The maximum size is 64 KB.
                        required:
                        - path
                        - start_line
                        - end_line
                        - annotation_level
                        - message
                    images:
                      type: array
                      description: Adds images to the output displayed in the GitHub pull request UI.
                      items:
                        type: object
                        properties:
                          alt:
                            type: string
                            description: The alternative text for the image.
                          image_url:
                            type: string
                            description: The full URL of the image.
                          caption:
                            type: string
                            description: A short image description.
                        required:
                        - alt
                        - image_url
                  required:
                  - summary
                actions:
                  type: array
                  description: Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. To learn more about check runs and requested actions, see "[Check runs and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions)."
                  maxItems: 3
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                        maxLength: 20
                        description: The text to be displayed on a button in the web UI. The maximum size is 20 characters.
                      description:
                        type: string
                        maxLength: 40
                        description: A short explanation of what this action would do. The maximum size is 40 characters.
                      identifier:
                        type: string
                        maxLength: 20
                        description: A reference for the action on the integrator's system. The maximum size is 20 characters.
                    required:
                    - label
                    - description
                    - identifier
              anyOf:
              - properties:
                  status:
                    enum:
                    - completed
                required:
                - conclusion
                additionalProperties: true
              - properties:
                  status:
                    enum:
                    - queued
                    - in_progress
                additionalProperties: true
            examples:
              default:
                value:
                  name: mighty_readme
                  started_at: '2018-05-04T01:14:52Z'
                  status: completed
                  conclusion: success
                  completed_at: '2018-05-04T01:14:52Z'
                  output:
                    title: Mighty Readme report
                    summary: There are 0 failures, 2 warnings, and 1 notices.
                    text: You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.
                    annotations:
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'banaas'.
                      raw_details: Do you mean 'bananas' or 'banana'?
                      start_line: 2
                      end_line: 2
                    - path: README.md
                      annotation_level: warning
                      title: Spell Checker
                      message: Check your spelling for 'aples'
                      raw_details: Do you mean 'apples' or 'Naples'
                      start_line: 4
                      end_line: 4
                    images:
                    - alt: Super bananas
                      image_url: http://example.com/images/42
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-run'
              examples:
                default:
                  $ref: '#/components/examples/check-run'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations:
    get:
      summary: List check run annotations
      description: 'Lists annotations for a check run using the annotation `id`.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/list-annotations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-run-annotations
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-run-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/check-annotation'
              examples:
                default:
                  $ref: '#/components/examples/check-annotation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest:
    post:
      summary: Rerequest a check run
      description: 'Triggers GitHub to rerequest an existing check run, without pushing new code to a repository. This endpoint will trigger the [`check_run` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) event with the action `rerequested`. When a check run is `rerequested`, the `status` of the check suite it belongs to is reset to `queued` and the `conclusion` is cleared. The check run itself is not updated. GitHub apps recieving the [`check_run` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) with the `rerequested` action should then decide if the check run should be reset or updated and call the [update `check_run` endpoint](https://docs.github.com/rest/checks/runs#update-a-check-run) to update the check_run if desired.


        For more information about how to re-run GitHub Actions jobs, see "[Re-run a job from a workflow run](https://docs.github.com/rest/actions/workflow-runs#re-run-a-job-from-a-workflow-run)".'
      tags:
      - checks
      operationId: checks/rerequest-run
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#rerequest-a-check-run
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-run-id'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
        '403':
          description: Forbidden if the check run is not rerequestable or doesn't belong to the authenticated GitHub App
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
        '422':
          description: Validation error if the check run is not rerequestable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/check-suites:
    post:
      summary: Create a check suite
      description: 'Creates a check suite manually. By default, check suites are automatically created when you create a [check run](https://docs.github.com/rest/checks/runs). You only need to use this endpoint for manually creating check suites when you''ve disabled automatic creation using "[Update repository preferences for check suites](https://docs.github.com/rest/checks/suites#update-repository-preferences-for-check-suites)".


        > [!NOTE]

        > The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.


        OAuth apps and personal access tokens (classic) cannot use this endpoint.'
      tags:
      - checks
      operationId: checks/create-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#create-a-check-suite
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                head_sha:
                  type: string
                  description: The sha of the head commit.
              required:
              - head_sha
            examples:
              default:
                value:
                  head_sha: d6fde92930d4715a2b49857d24b940956b26d2d3
      responses:
        '200':
          description: Response when the suite already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-suite'
              examples:
                default:
                  $ref: '#/components/examples/check-suite'
        '201':
          description: Response when the suite was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-suite'
              examples:
                default:
                  $ref: '#/components/examples/check-suite'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  /repos/{owner}/{repo}/check-suites/preferences:
    patch:
      summary: Update repository preferences for check suites
      description: 'Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://docs.github.com/rest/checks/suites#create-a-check-suite).

        You must have admin permissions in the repository to set preferences for check suites.'
      tags:
      - checks
      operationId: checks/set-suites-preferences
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#update-repository-preferences-for-check-suites
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                auto_trigger_checks:
                  type: array
                  description: Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default.
                  items:
                    type: object
                    properties:
                      app_id:
                        type: integer
                        description: The `id` of the GitHub App.
                      setting:
                        type: boolean
                        description: Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository, or `false` to disable them.
                        default: true
                    required:
                    - app_id
                    - setting
            examples:
              default:
                value:
                  auto_trigger_checks:
                  - app_id: 4
                    setting: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-suite-preference'
              examples:
                default:
                  $ref: '#/components/examples/check-suite-preference'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  /repos/{owner}/{repo}/check-suites/{check_suite_id}:
    get:
      summary: Get a check suite
      description: 'Gets a single check suite using its `id`.


        > [!NOTE]

        > The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/get-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#get-a-check-suite
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-suite-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-suite'
              examples:
                default:
                  $ref: '#/components/examples/check-suite'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs:
    get:
      summary: List check runs in a check suite
      description: 'Lists check runs for a check suite using its `id`.


        > [!NOTE]

        > The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/list-for-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-runs-in-a-check-suite
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-suite-id'
      - $ref: '#/components/parameters/check-name'
      - $ref: '#/components/parameters/status'
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - check_runs
                properties:
                  total_count:
                    type: integer
                  check_runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/check-run'
              examples:
                default:
                  $ref: '#/components/examples/check-run-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest:
    post:
      summary: Rerequest a check suite
      description: Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://docs.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.
      tags:
      - checks
      operationId: checks/rerequest-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#rerequest-a-check-suite
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/check-suite-id'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
  /repos/{owner}/{repo}/commits/{ref}/check-runs:
    get:
      summary: List check runs for a Git reference
      description: 'Lists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name.


        > [!NOTE]

        > The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.


        If there are more than 1000 check suites on a single git reference, this endpoint will limit check runs to the 1000 most recent check suites. To iterate over all possible check runs, use the [List check suites for a Git reference](https://docs.github.com/rest/reference/checks#list-check-suites-for-a-git-reference) endpoint and provide the `check_suite_id` parameter to the [List check runs in a check suite](https://docs.github.com/rest/reference/checks#list-check-runs-in-a-check-suite) endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/list-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/runs#list-check-runs-for-a-git-reference
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-ref'
      - $ref: '#/components/parameters/check-name'
      - $ref: '#/components/parameters/status'
      - name: filter
        description: Filters check runs by their `completed_at` timestamp. `latest` returns the most recent check runs.
        in: query
        required: false
        schema:
          type: string
          enum:
          - latest
          - all
          default: latest
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: app_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - check_runs
                properties:
                  total_count:
                    type: integer
                  check_runs:
                    type: array
                    items:
                      $ref: '#/components/schemas/check-run'
              examples:
                default:
                  $ref: '#/components/examples/check-run-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: runs
  /repos/{owner}/{repo}/commits/{ref}/check-suites:
    get:
      summary: List check suites for a Git reference
      description: 'Lists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name.


        > [!NOTE]

        > The endpoints to manage checks only look for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint on a private repository.'
      tags:
      - checks
      operationId: checks/list-suites-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/checks/suites#list-check-suites-for-a-git-reference
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-ref'
      - name: app_id
        description: Filters check suites by GitHub App `id`.
        in: query
        required: false
        schema:
          type: integer
        example: 1
      - $ref: '#/components/parameters/check-name'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - check_suites
                properties:
                  total_count:
                    type: integer
                  check_suites:
                    type: array
                    items:
                      $ref: '#/components/schemas/check-suite'
              examples:
                default:
                  $ref: '#/components/examples/check-suite-paginated'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: checks
        subcategory: suites
