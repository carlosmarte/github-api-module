openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/enterprise'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    webhook-config-url:
      type: string
      description: The URL to which the payloads will be delivered.
      example: https://example.com/webhook
      format: uri
    webhook-config-content-type:
      type: string
      description: The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
      example: '"json"'
    webhook-config-secret:
      type: string
      description: If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
      example: '"********"'
    webhook-config-insecure-ssl:
      oneOf:
      - type: string
        description: Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
        example: '"0"'
      - type: number
    webhook-config:
      title: Webhook Configuration
      description: Configuration object of the webhook
      type: object
      properties:
        url:
          $ref: '#/components/schemas/webhook-config-url'
        content_type:
          $ref: '#/components/schemas/webhook-config-content-type'
        secret:
          $ref: '#/components/schemas/webhook-config-secret'
        insecure_ssl:
          $ref: '#/components/schemas/webhook-config-insecure-ssl'
    hook-delivery-item:
      title: Simple webhook delivery
      description: Delivery made by a webhook, without request and response information.
      type: object
      properties:
        id:
          description: Unique identifier of the webhook delivery.
          type: integer
          format: int64
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the webhook delivery occurred.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the webhook delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Describes the response returned after attempting the delivery.
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          format: int64
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          format: int64
          example: 123
          nullable: true
        throttled_at:
          description: Time when the webhook delivery was throttled.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
          nullable: true
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    hook-delivery:
      title: Webhook delivery
      description: Delivery made by a webhook.
      type: object
      properties:
        id:
          description: Unique identifier of the delivery.
          type: integer
          example: 42
        guid:
          description: Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
          type: string
          example: 58474f00-b361-11eb-836d-0e4f3503ccbe
        delivered_at:
          description: Time when the delivery was delivered.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
        redelivery:
          description: Whether the delivery is a redelivery.
          type: boolean
          example: false
        duration:
          description: Time spent delivering.
          type: number
          example: 0.03
        status:
          description: Description of the status of the attempted delivery
          type: string
          example: failed to connect
        status_code:
          description: Status code received when delivery was made.
          type: integer
          example: 502
        event:
          description: The event that triggered the delivery.
          type: string
          example: issues
        action:
          description: The type of activity for the event that triggered the delivery.
          type: string
          example: opened
          nullable: true
        installation_id:
          description: The id of the GitHub App installation associated with this event.
          type: integer
          example: 123
          nullable: true
        repository_id:
          description: The id of the repository associated with this event.
          type: integer
          example: 123
          nullable: true
        throttled_at:
          description: Time when the webhook delivery was throttled.
          type: string
          format: date-time
          example: '2021-05-12T20:33:44Z'
          nullable: true
        url:
          description: The URL target of the delivery.
          type: string
          example: https://www.example.com
        request:
          type: object
          properties:
            headers:
              description: The request headers sent with the webhook delivery.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The webhook payload.
              type: object
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
        response:
          type: object
          properties:
            headers:
              description: The response headers received when the delivery was made.
              type: object
              nullable: true
              additionalProperties: true
            payload:
              description: The response payload received.
              type: string
              nullable: true
              additionalProperties: true
          required:
          - headers
          - payload
      required:
      - id
      - guid
      - delivered_at
      - redelivery
      - duration
      - status
      - status_code
      - event
      - action
      - installation_id
      - repository_id
      - request
      - response
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: 'The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request''s title.

            - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: 'The default value for a squash merge commit message:


            - `PR_BODY` - default to the pull request''s body.

            - `COMMIT_MESSAGES` - default to the branch''s commit messages.

            - `BLANK` - default to a blank commit message.'
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: 'The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request''s title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: 'The default value for a merge commit message.


            - `PR_TITLE` - default to the pull request''s title.

            - `PR_BODY` - default to the pull request''s body.

            - `BLANK` - default to a blank commit message.'
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory\
            \ comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual\
            \ is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members\
            \ of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
      nullable: true
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/enterprise'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
      - COLLABORATOR
      - CONTRIBUTOR
      - FIRST_TIMER
      - FIRST_TIME_CONTRIBUTOR
      - MANNEQUIN
      - MEMBER
      - NONE
      - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - '+1'
      - '-1'
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          description: 'Enable or disable GitHub Advanced Security for the repository.


            For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

            '
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    custom-property-value:
      title: Custom Property Value
      description: Custom property name and associated value
      type: object
      properties:
        property_name:
          type: string
          description: The name of the property
        value:
          oneOf:
          - type: string
          - type: array
            items:
              type: string
          description: The value assigned to the property
          nullable: true
      required:
      - property_name
      - value
    nullable-repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: 'The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request''s title.

            - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: 'The default value for a squash merge commit message:


            - `PR_BODY` - default to the pull request''s body.

            - `COMMIT_MESSAGES` - default to the branch''s commit messages.

            - `BLANK` - default to a blank commit message.'
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: 'The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request''s title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: 'The default value for a merge commit message.


            - `PR_TITLE` - default to the pull request''s title.

            - `PR_BODY` - default to the pull request''s body.

            - `BLANK` - default to a blank commit message.'
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      nullable: true
    code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
    full-repository:
      title: Full Repository
      description: Full Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
          example:
          - octocat
          - atom
          - electron
          - API
        has_issues:
          type: boolean
          example: true
        has_projects:
          type: boolean
          example: true
        has_wiki:
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
          example: true
        has_discussions:
          type: boolean
          example: true
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
          example: public
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        allow_rebase_merge:
          type: boolean
          example: true
        template_repository:
          $ref: '#/components/schemas/nullable-repository'
        temp_clone_token:
          type: string
          nullable: true
        allow_squash_merge:
          type: boolean
          example: true
        allow_auto_merge:
          type: boolean
          example: false
        delete_branch_on_merge:
          type: boolean
          example: false
        allow_merge_commit:
          type: boolean
          example: true
        allow_update_branch:
          type: boolean
          example: true
        use_squash_pr_title_as_default:
          type: boolean
          example: false
        squash_merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: 'The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request''s title.

            - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
        squash_merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: 'The default value for a squash merge commit message:


            - `PR_BODY` - default to the pull request''s body.

            - `COMMIT_MESSAGES` - default to the branch''s commit messages.

            - `BLANK` - default to a blank commit message.'
        merge_commit_title:
          type: string
          example: PR_TITLE
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: "The default value for a merge commit title.\n\n  - `PR_TITLE` - default to the pull request's title.\n  - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name)."
        merge_commit_message:
          type: string
          example: PR_BODY
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: 'The default value for a merge commit message.


            - `PR_TITLE` - default to the pull request''s title.

            - `PR_BODY` - default to the pull request''s body.

            - `BLANK` - default to a blank commit message.'
        allow_forking:
          type: boolean
          example: true
        web_commit_signoff_required:
          type: boolean
          example: false
        subscribers_count:
          type: integer
          example: 42
        network_count:
          type: integer
          example: 0
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        organization:
          $ref: '#/components/schemas/nullable-simple-user'
        parent:
          $ref: '#/components/schemas/repository'
        source:
          $ref: '#/components/schemas/repository'
        forks:
          type: integer
        master_branch:
          type: string
        open_issues:
          type: integer
        watchers:
          type: integer
        anonymous_access_enabled:
          description: Whether anonymous git access is allowed.
          default: true
          type: boolean
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct-simple'
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - has_discussions
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - network_count
      - subscribers_count
    repository-rule-enforcement:
      type: string
      description: The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).
      enum:
      - disabled
      - active
      - evaluate
    repository-ruleset-bypass-actor:
      title: Repository Ruleset Bypass Actor
      type: object
      description: An actor that can bypass rules in a ruleset
      required:
      - actor_type
      properties:
        actor_id:
          type: integer
          nullable: true
          description: The ID of the actor that can bypass a ruleset. Required for `Integration`, `RepositoryRole`, and `Team` actor types. If `actor_type` is `OrganizationAdmin`, this should be `1`. If `actor_type` is `DeployKey`, this should be null. `OrganizationAdmin` is not applicable for personal repositories.
        actor_type:
          type: string
          enum:
          - Integration
          - OrganizationAdmin
          - RepositoryRole
          - Team
          - DeployKey
          description: The type of actor that can bypass a ruleset.
        bypass_mode:
          type: string
          description: When the specified actor can bypass the ruleset. `pull_request` means that an actor can only bypass rules on pull requests. `pull_request` is not applicable for the `DeployKey` actor type. Also, `pull_request` is only applicable to branch rulesets.
          enum:
          - always
          - pull_request
          default: always
    repository-ruleset-conditions:
      title: Repository ruleset conditions for ref names
      type: object
      description: Parameters for a repository ruleset ref name condition
      properties:
        ref_name:
          type: object
          properties:
            include:
              type: array
              description: Array of ref names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the default branch or `~ALL` to include all branches.
              items:
                type: string
            exclude:
              type: array
              description: Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.
              items:
                type: string
    repository-ruleset-conditions-repository-name-target:
      title: Repository ruleset conditions for repository names
      type: object
      description: Parameters for a repository name condition
      properties:
        repository_name:
          type: object
          properties:
            include:
              type: array
              description: Array of repository names or patterns to include. One of these patterns must match for the condition to pass. Also accepts `~ALL` to include all repositories.
              items:
                type: string
            exclude:
              type: array
              description: Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.
              items:
                type: string
            protected:
              type: boolean
              description: Whether renaming of target repositories is prevented.
      required:
      - repository_name
    repository-ruleset-conditions-repository-id-target:
      title: Repository ruleset conditions for repository IDs
      type: object
      description: Parameters for a repository ID condition
      properties:
        repository_id:
          type: object
          properties:
            repository_ids:
              type: array
              description: The repository IDs that the ruleset applies to. One of these IDs must match for the condition to pass.
              items:
                type: integer
      required:
      - repository_id
    repository-ruleset-conditions-repository-property-spec:
      title: Repository ruleset property targeting definition
      type: object
      description: Parameters for a targeting a repository property
      properties:
        name:
          type: string
          description: The name of the repository property to target
        property_values:
          type: array
          description: The values to match for the repository property
          items:
            type: string
        source:
          type: string
          description: The source of the repository property. Defaults to 'custom' if not specified.
          enum:
          - custom
          - system
      required:
      - name
      - property_values
    repository-ruleset-conditions-repository-property-target:
      title: Repository ruleset conditions for repository properties
      type: object
      description: Parameters for a repository property condition
      properties:
        repository_property:
          type: object
          properties:
            include:
              type: array
              description: The repository properties and values to include. All of these properties must match for the condition to pass.
              items:
                $ref: '#/components/schemas/repository-ruleset-conditions-repository-property-spec'
            exclude:
              type: array
              description: The repository properties and values to exclude. The condition will not pass if any of these properties match.
              items:
                $ref: '#/components/schemas/repository-ruleset-conditions-repository-property-spec'
      required:
      - repository_property
    org-ruleset-conditions:
      title: Organization ruleset conditions
      type: object
      description: 'Conditions for an organization ruleset.

        The branch and tag rulesets conditions object should contain both `repository_name` and `ref_name` properties, or both `repository_id` and `ref_name` properties, or both `repository_property` and `ref_name` properties.

        The push rulesets conditions object does not require the `ref_name` property.

        For repository policy rulesets, the conditions object should only contain the `repository_name`, the `repository_id`, or the `repository_property`.'
      oneOf:
      - type: object
        title: repository_name_and_ref_name
        description: Conditions to target repositories by name and refs by name
        allOf:
        - $ref: '#/components/schemas/repository-ruleset-conditions'
        - $ref: '#/components/schemas/repository-ruleset-conditions-repository-name-target'
      - type: object
        title: repository_id_and_ref_name
        description: Conditions to target repositories by id and refs by name
        allOf:
        - $ref: '#/components/schemas/repository-ruleset-conditions'
        - $ref: '#/components/schemas/repository-ruleset-conditions-repository-id-target'
      - type: object
        title: repository_property_and_ref_name
        description: Conditions to target repositories by property and refs by name
        allOf:
        - $ref: '#/components/schemas/repository-ruleset-conditions'
        - $ref: '#/components/schemas/repository-ruleset-conditions-repository-property-target'
    repository-rule-creation:
      title: creation
      description: Only allow users with bypass permission to create matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - creation
    repository-rule-update:
      title: update
      description: Only allow users with bypass permission to update matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - update
        parameters:
          type: object
          properties:
            update_allows_fetch_and_merge:
              type: boolean
              description: Branch can pull changes from its upstream repository
          required:
          - update_allows_fetch_and_merge
    repository-rule-deletion:
      title: deletion
      description: Only allow users with bypass permissions to delete matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - deletion
    repository-rule-required-linear-history:
      title: required_linear_history
      description: Prevent merge commits from being pushed to matching refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_linear_history
    repository-rule-merge-queue:
      title: merge_queue
      description: Merges must be performed via a merge queue.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - merge_queue
        parameters:
          type: object
          properties:
            check_response_timeout_minutes:
              type: integer
              description: Maximum time for a required status check to report a conclusion. After this much time has elapsed, checks that have not reported a conclusion will be assumed to have failed
              minimum: 1
              maximum: 360
            grouping_strategy:
              type: string
              description: When set to ALLGREEN, the merge commit created by merge queue for each PR in the group must pass all required checks to merge. When set to HEADGREEN, only the commit at the head of the merge group, i.e. the commit containing changes from all of the PRs in the group, must pass its required checks to merge.
              enum:
              - ALLGREEN
              - HEADGREEN
            max_entries_to_build:
              type: integer
              description: Limit the number of queued pull requests requesting checks and workflow runs at the same time.
              minimum: 0
              maximum: 100
            max_entries_to_merge:
              type: integer
              description: The maximum number of PRs that will be merged together in a group.
              minimum: 0
              maximum: 100
            merge_method:
              type: string
              description: Method to use when merging changes from queued pull requests.
              enum:
              - MERGE
              - SQUASH
              - REBASE
            min_entries_to_merge:
              type: integer
              description: The minimum number of PRs that will be merged together in a group.
              minimum: 0
              maximum: 100
            min_entries_to_merge_wait_minutes:
              type: integer
              description: The time merge queue should wait after the first PR is added to the queue for the minimum group size to be met. After this time has elapsed, the minimum group size will be ignored and a smaller group will be merged.
              minimum: 0
              maximum: 360
          required:
          - check_response_timeout_minutes
          - grouping_strategy
          - max_entries_to_build
          - max_entries_to_merge
          - merge_method
          - min_entries_to_merge
          - min_entries_to_merge_wait_minutes
    repository-rule-required-deployments:
      title: required_deployments
      description: Choose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_deployments
        parameters:
          type: object
          properties:
            required_deployment_environments:
              type: array
              description: The environments that must be successfully deployed to before branches can be merged.
              items:
                type: string
          required:
          - required_deployment_environments
    repository-rule-required-signatures:
      title: required_signatures
      description: Commits pushed to matching refs must have verified signatures.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_signatures
    repository-rule-pull-request:
      title: pull_request
      description: Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - pull_request
        parameters:
          type: object
          properties:
            allowed_merge_methods:
              type: array
              description: Array of allowed merge methods. Allowed values include `merge`, `squash`, and `rebase`. At least one option must be enabled.
              items:
                type: string
                enum:
                - merge
                - squash
                - rebase
            automatic_copilot_code_review_enabled:
              type: boolean
              description: Request Copilot code review for new pull requests automatically if the author has access to Copilot code review.
            dismiss_stale_reviews_on_push:
              type: boolean
              description: New, reviewable commits pushed will dismiss previous pull request review approvals.
            require_code_owner_review:
              type: boolean
              description: Require an approving review in pull requests that modify files that have a designated code owner.
            require_last_push_approval:
              type: boolean
              description: Whether the most recent reviewable push must be approved by someone other than the person who pushed it.
            required_approving_review_count:
              type: integer
              description: The number of approving reviews that are required before a pull request can be merged.
              minimum: 0
              maximum: 10
            required_review_thread_resolution:
              type: boolean
              description: All conversations on code must be resolved before a pull request can be merged.
          required:
          - dismiss_stale_reviews_on_push
          - require_code_owner_review
          - require_last_push_approval
          - required_approving_review_count
          - required_review_thread_resolution
    repository-rule-params-status-check-configuration:
      title: StatusCheckConfiguration
      description: Required status check
      type: object
      properties:
        context:
          type: string
          description: The status check context name that must be present on the commit.
        integration_id:
          type: integer
          description: The optional integration ID that this status check must originate from.
      required:
      - context
    repository-rule-required-status-checks:
      title: required_status_checks
      description: Choose which status checks must pass before the ref is updated. When enabled, commits must first be pushed to another ref where the checks pass.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - required_status_checks
        parameters:
          type: object
          properties:
            do_not_enforce_on_create:
              type: boolean
              description: Allow repositories and branches to be created if a check would otherwise prohibit it.
            required_status_checks:
              type: array
              description: Status checks that are required.
              items:
                $ref: '#/components/schemas/repository-rule-params-status-check-configuration'
            strict_required_status_checks_policy:
              type: boolean
              description: Whether pull requests targeting a matching branch must be tested with the latest code. This setting will not take effect unless at least one status check is enabled.
          required:
          - required_status_checks
          - strict_required_status_checks_policy
    repository-rule-non-fast-forward:
      title: non_fast_forward
      description: Prevent users with push access from force pushing to refs.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - non_fast_forward
    repository-rule-commit-message-pattern:
      title: commit_message_pattern
      description: Parameters to be used for the commit_message_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_message_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-commit-author-email-pattern:
      title: commit_author_email_pattern
      description: Parameters to be used for the commit_author_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - commit_author_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-committer-email-pattern:
      title: committer_email_pattern
      description: Parameters to be used for the committer_email_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - committer_email_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-branch-name-pattern:
      title: branch_name_pattern
      description: Parameters to be used for the branch_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - branch_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-tag-name-pattern:
      title: tag_name_pattern
      description: Parameters to be used for the tag_name_pattern rule
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - tag_name_pattern
        parameters:
          type: object
          properties:
            name:
              type: string
              description: How this rule will appear to users.
            negate:
              type: boolean
              description: If true, the rule will fail if the pattern matches.
            operator:
              type: string
              description: The operator to use for matching.
              enum:
              - starts_with
              - ends_with
              - contains
              - regex
            pattern:
              type: string
              description: The pattern to match with.
          required:
          - operator
          - pattern
    repository-rule-file-path-restriction:
      title: file_path_restriction
      description: Prevent commits that include changes in specified file and folder paths from being pushed to the commit graph. This includes absolute paths that contain file names.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - file_path_restriction
        parameters:
          type: object
          properties:
            restricted_file_paths:
              type: array
              description: The file paths that are restricted from being pushed to the commit graph.
              items:
                type: string
          required:
          - restricted_file_paths
    repository-rule-max-file-path-length:
      title: max_file_path_length
      description: Prevent commits that include file paths that exceed the specified character limit from being pushed to the commit graph.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - max_file_path_length
        parameters:
          type: object
          properties:
            max_file_path_length:
              type: integer
              description: The maximum amount of characters allowed in file paths.
              minimum: 1
              maximum: 32767
          required:
          - max_file_path_length
    repository-rule-file-extension-restriction:
      title: file_extension_restriction
      description: Prevent commits that include files with specified file extensions from being pushed to the commit graph.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - file_extension_restriction
        parameters:
          type: object
          properties:
            restricted_file_extensions:
              type: array
              description: The file extensions that are restricted from being pushed to the commit graph.
              items:
                type: string
          required:
          - restricted_file_extensions
    repository-rule-max-file-size:
      title: max_file_size
      description: Prevent commits with individual files that exceed the specified limit from being pushed to the commit graph.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - max_file_size
        parameters:
          type: object
          properties:
            max_file_size:
              type: integer
              description: The maximum file size allowed in megabytes. This limit does not apply to Git Large File Storage (Git LFS).
              minimum: 1
              maximum: 100
          required:
          - max_file_size
    repository-rule-params-workflow-file-reference:
      title: WorkflowFileReference
      description: A workflow that must run for this rule to pass
      type: object
      properties:
        path:
          type: string
          description: The path to the workflow file
        ref:
          type: string
          description: The ref (branch or tag) of the workflow file to use
        repository_id:
          type: integer
          description: The ID of the repository where the workflow is defined
        sha:
          type: string
          description: The commit SHA of the workflow file to use
      required:
      - path
      - repository_id
    repository-rule-workflows:
      title: workflows
      description: Require all changes made to a targeted branch to pass the specified workflows before they can be merged.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - workflows
        parameters:
          type: object
          properties:
            do_not_enforce_on_create:
              type: boolean
              description: Allow repositories and branches to be created if a check would otherwise prohibit it.
            workflows:
              type: array
              description: Workflows that must pass for this rule to pass.
              items:
                $ref: '#/components/schemas/repository-rule-params-workflow-file-reference'
          required:
          - workflows
    repository-rule-params-code-scanning-tool:
      title: CodeScanningTool
      description: A tool that must provide code scanning results for this rule to pass.
      type: object
      properties:
        alerts_threshold:
          type: string
          description: The severity level at which code scanning results that raise alerts block a reference update. For more information on alert severity levels, see "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels)."
          enum:
          - none
          - errors
          - errors_and_warnings
          - all
        security_alerts_threshold:
          type: string
          description: The severity level at which code scanning results that raise security alerts block a reference update. For more information on security severity levels, see "[About code scanning alerts](https://docs.github.com/code-security/code-scanning/managing-code-scanning-alerts/about-code-scanning-alerts#about-alert-severity-and-security-severity-levels)."
          enum:
          - none
          - critical
          - high_or_higher
          - medium_or_higher
          - all
        tool:
          type: string
          description: The name of a code scanning tool
      required:
      - alerts_threshold
      - security_alerts_threshold
      - tool
    repository-rule-code-scanning:
      title: code_scanning
      description: Choose which tools must provide code scanning results before the reference is updated. When configured, code scanning must be enabled and have results for both the commit and the reference being updated.
      type: object
      required:
      - type
      properties:
        type:
          type: string
          enum:
          - code_scanning
        parameters:
          type: object
          properties:
            code_scanning_tools:
              type: array
              description: Tools that must provide code scanning results for this rule to pass.
              items:
                $ref: '#/components/schemas/repository-rule-params-code-scanning-tool'
          required:
          - code_scanning_tools
    repository-rule:
      title: Repository Rule
      type: object
      description: A repository rule.
      oneOf:
      - $ref: '#/components/schemas/repository-rule-creation'
      - $ref: '#/components/schemas/repository-rule-update'
      - $ref: '#/components/schemas/repository-rule-deletion'
      - $ref: '#/components/schemas/repository-rule-required-linear-history'
      - $ref: '#/components/schemas/repository-rule-merge-queue'
      - $ref: '#/components/schemas/repository-rule-required-deployments'
      - $ref: '#/components/schemas/repository-rule-required-signatures'
      - $ref: '#/components/schemas/repository-rule-pull-request'
      - $ref: '#/components/schemas/repository-rule-required-status-checks'
      - $ref: '#/components/schemas/repository-rule-non-fast-forward'
      - $ref: '#/components/schemas/repository-rule-commit-message-pattern'
      - $ref: '#/components/schemas/repository-rule-commit-author-email-pattern'
      - $ref: '#/components/schemas/repository-rule-committer-email-pattern'
      - $ref: '#/components/schemas/repository-rule-branch-name-pattern'
      - $ref: '#/components/schemas/repository-rule-tag-name-pattern'
      - $ref: '#/components/schemas/repository-rule-file-path-restriction'
      - $ref: '#/components/schemas/repository-rule-max-file-path-length'
      - $ref: '#/components/schemas/repository-rule-file-extension-restriction'
      - $ref: '#/components/schemas/repository-rule-max-file-size'
      - $ref: '#/components/schemas/repository-rule-workflows'
      - $ref: '#/components/schemas/repository-rule-code-scanning'
    repository-ruleset:
      title: Repository ruleset
      type: object
      description: A set of rules to apply when specified conditions are met.
      required:
      - id
      - name
      - source
      - enforcement
      properties:
        id:
          type: integer
          description: The ID of the ruleset
        name:
          type: string
          description: The name of the ruleset
        target:
          type: string
          description: The target of the ruleset
          enum:
          - branch
          - tag
          - push
          - repository
        source_type:
          type: string
          description: The type of the source of the ruleset
          enum:
          - Repository
          - Organization
          - Enterprise
        source:
          type: string
          description: The name of the source
        enforcement:
          $ref: '#/components/schemas/repository-rule-enforcement'
        bypass_actors:
          type: array
          description: The actors that can bypass the rules in this ruleset
          items:
            $ref: '#/components/schemas/repository-ruleset-bypass-actor'
        current_user_can_bypass:
          type: string
          description: 'The bypass type of the user making the API request for this ruleset. This field is only returned when

            querying the repository-level endpoint.'
          enum:
          - always
          - pull_requests_only
          - never
        node_id:
          type: string
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  description: The URL of the ruleset
            html:
              type: object
              nullable: true
              properties:
                href:
                  type: string
                  description: The html URL of the ruleset
        conditions:
          nullable: true
          anyOf:
          - $ref: '#/components/schemas/repository-ruleset-conditions'
          - $ref: '#/components/schemas/org-ruleset-conditions'
        rules:
          type: array
          items:
            $ref: '#/components/schemas/repository-rule'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    org-rules:
      title: Repository Rule
      type: object
      description: A repository rule.
      oneOf:
      - $ref: '#/components/schemas/repository-rule-creation'
      - $ref: '#/components/schemas/repository-rule-update'
      - $ref: '#/components/schemas/repository-rule-deletion'
      - $ref: '#/components/schemas/repository-rule-required-linear-history'
      - $ref: '#/components/schemas/repository-rule-required-deployments'
      - $ref: '#/components/schemas/repository-rule-required-signatures'
      - $ref: '#/components/schemas/repository-rule-pull-request'
      - $ref: '#/components/schemas/repository-rule-required-status-checks'
      - $ref: '#/components/schemas/repository-rule-non-fast-forward'
      - $ref: '#/components/schemas/repository-rule-commit-message-pattern'
      - $ref: '#/components/schemas/repository-rule-commit-author-email-pattern'
      - $ref: '#/components/schemas/repository-rule-committer-email-pattern'
      - $ref: '#/components/schemas/repository-rule-branch-name-pattern'
      - $ref: '#/components/schemas/repository-rule-tag-name-pattern'
      - $ref: '#/components/schemas/repository-rule-file-path-restriction'
      - $ref: '#/components/schemas/repository-rule-max-file-path-length'
      - $ref: '#/components/schemas/repository-rule-file-extension-restriction'
      - $ref: '#/components/schemas/repository-rule-max-file-size'
      - $ref: '#/components/schemas/repository-rule-workflows'
      - $ref: '#/components/schemas/repository-rule-code-scanning'
    rule-suites:
      title: Rule Suites
      description: Response
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: The unique identifier of the rule insight.
          actor_id:
            type: integer
            description: The number that identifies the user.
          actor_name:
            type: string
            description: The handle for the GitHub user account.
          before_sha:
            type: string
            description: The first commit sha before the push evaluation.
          after_sha:
            type: string
            description: The last commit sha in the push evaluation.
          ref:
            type: string
            description: The ref name that the evaluation ran on.
          repository_id:
            type: integer
            description: The ID of the repository associated with the rule evaluation.
          repository_name:
            type: string
            description: The name of the repository without the `.git` extension.
          pushed_at:
            type: string
            format: date-time
            example: '2011-01-26T19:06:43Z'
          result:
            type: string
            enum:
            - pass
            - fail
            - bypass
            description: The result of the rule evaluations for rules with the `active` enforcement status.
          evaluation_result:
            type: string
            enum:
            - pass
            - fail
            - bypass
            description: The result of the rule evaluations for rules with the `active` and `evaluate` enforcement statuses, demonstrating whether rules would pass or fail if all rules in the rule suite were `active`.
    rule-suite:
      title: Rule Suite
      description: Response
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the rule insight.
        actor_id:
          type: integer
          description: The number that identifies the user.
          nullable: true
        actor_name:
          type: string
          description: The handle for the GitHub user account.
          nullable: true
        before_sha:
          type: string
          description: The first commit sha before the push evaluation.
        after_sha:
          type: string
          description: The last commit sha in the push evaluation.
        ref:
          type: string
          description: The ref name that the evaluation ran on.
        repository_id:
          type: integer
          description: The ID of the repository associated with the rule evaluation.
        repository_name:
          type: string
          description: The name of the repository without the `.git` extension.
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
        result:
          type: string
          enum:
          - pass
          - fail
          - bypass
          description: The result of the rule evaluations for rules with the `active` enforcement status.
        evaluation_result:
          type: string
          nullable: true
          enum:
          - pass
          - fail
          - bypass
          description: The result of the rule evaluations for rules with the `active` and `evaluate` enforcement statuses, demonstrating whether rules would pass or fail if all rules in the rule suite were `active`. Null if no rules with `evaluate` enforcement status were run.
        rule_evaluations:
          type: array
          description: Details on the evaluated rules.
          items:
            type: object
            properties:
              rule_source:
                type: object
                properties:
                  type:
                    type: string
                    description: The type of rule source.
                  id:
                    type: integer
                    nullable: true
                    description: The ID of the rule source.
                  name:
                    type: string
                    nullable: true
                    description: The name of the rule source.
              enforcement:
                type: string
                enum:
                - active
                - evaluate
                - deleted ruleset
                description: The enforcement level of this rule source.
              result:
                type: string
                enum:
                - pass
                - fail
                description: The result of the evaluation of the individual rule.
              rule_type:
                type: string
                description: The type of rule.
              details:
                type: string
                nullable: true
                description: The detailed failure message for the rule. Null if the rule passed.
    ruleset-version:
      title: Ruleset version
      type: object
      description: The historical version of a ruleset
      required:
      - version_id
      - actor
      - updated_at
      properties:
        version_id:
          type: integer
          description: The ID of the previous version of the ruleset
        actor:
          type: object
          description: The actor who updated the ruleset
          properties:
            id:
              type: integer
            type:
              type: string
        updated_at:
          type: string
          format: date-time
    ruleset-version-with-state:
      allOf:
      - $ref: '#/components/schemas/ruleset-version'
      - type: object
        required:
        - state
        properties:
          state:
            type: object
            description: The state of the ruleset version
    deployment-reviewer-type:
      type: string
      description: The type of reviewer.
      enum:
      - User
      - Team
      example: User
    deployment:
      title: Deployment
      description: A request for a specific ref(branch,sha,tag) to be deployed
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1
        id:
          description: Unique identifier of the deployment
          type: integer
          format: int64
          example: 42
        node_id:
          type: string
          example: MDEwOkRlcGxveW1lbnQx
        sha:
          type: string
          example: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref:
          description: The ref to deploy. This can be a branch, tag, or sha.
          example: topic-branch
          type: string
        task:
          description: Parameter to specify a task to execute
          example: deploy
          type: string
        payload:
          oneOf:
          - type: object
            additionalProperties: true
          - type: string
        original_environment:
          type: string
          example: staging
        environment:
          description: Name for the target deployment environment.
          example: production
          type: string
        description:
          type: string
          example: Deploy request from hubot
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        transient_environment:
          description: 'Specifies if the given environment is will no longer exist at some point in the future. Default: false.'
          example: true
          type: boolean
        production_environment:
          description: 'Specifies if the given environment is one that end-users directly interact with. Default: false.'
          example: true
          type: boolean
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
      - id
      - node_id
      - sha
      - ref
      - task
      - environment
      - creator
      - payload
      - description
      - statuses_url
      - repository_url
      - url
      - created_at
      - updated_at
    activity:
      title: Activity
      description: Activity
      type: object
      properties:
        id:
          type: integer
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        before:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          description: The SHA of the commit before the activity.
        after:
          type: string
          example: 827efc6d56897b048c772eb4087f854f46256132
          description: The SHA of the commit after the activity.
        ref:
          type: string
          example: refs/heads/main
          description: The full Git reference, formatted as `refs/heads/<branch name>`.
        timestamp:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          description: The time when the activity occurred.
        activity_type:
          type: string
          example: force_push
          enum:
          - push
          - force_push
          - branch_deletion
          - branch_creation
          - pr_merge
          - merge_queue_merge
          description: The type of the activity that was performed.
        actor:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
      - id
      - node_id
      - before
      - after
      - ref
      - timestamp
      - activity_type
      - actor
    autolink:
      title: Autolink reference
      description: An autolink reference.
      type: object
      properties:
        id:
          type: integer
          example: 3
        key_prefix:
          description: The prefix of a key that is linkified.
          example: TICKET-
          type: string
        url_template:
          description: A template for the target URL that is generated if a key was found.
          example: https://example.com/TICKET?query=<num>
          type: string
        is_alphanumeric:
          description: Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters.
          example: true
          type: boolean
      required:
      - id
      - key_prefix
      - url_template
      - is_alphanumeric
    check-automated-security-fixes:
      title: Check Dependabot security updates
      description: Check Dependabot security updates
      type: object
      properties:
        enabled:
          type: boolean
          example: true
          description: Whether Dependabot security updates are enabled for the repository.
        paused:
          type: boolean
          example: false
          description: Whether Dependabot security updates are paused for the repository.
      required:
      - enabled
      - paused
    protected-branch-required-status-check:
      title: Protected Branch Required Status Check
      description: Protected Branch Required Status Check
      type: object
      properties:
        url:
          type: string
        enforcement_level:
          type: string
        contexts:
          type: array
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
        strict:
          type: boolean
      required:
      - contexts
      - checks
    protected-branch-admin-enforced:
      title: Protected Branch Admin Enforced
      description: Protected Branch Admin Enforced
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled:
          type: boolean
          example: true
      required:
      - url
      - enabled
    protected-branch-pull-request-review:
      title: Protected Branch Pull Request Review
      description: Protected Branch Pull Request Review
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
        dismissal_restrictions:
          type: object
          properties:
            users:
              description: The list of users with review dismissal access.
              type: array
              items:
                $ref: '#/components/schemas/simple-user'
            teams:
              description: The list of teams with review dismissal access.
              type: array
              items:
                $ref: '#/components/schemas/team'
            apps:
              description: The list of apps with review dismissal access.
              type: array
              items:
                $ref: '#/components/schemas/integration'
            url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"'
            users_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"'
            teams_url:
              type: string
              example: '"https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"'
        bypass_pull_request_allowances:
          type: object
          description: Allow specific users, teams, or apps to bypass pull request requirements.
          properties:
            users:
              description: The list of users allowed to bypass pull request requirements.
              type: array
              items:
                $ref: '#/components/schemas/simple-user'
            teams:
              description: The list of teams allowed to bypass pull request requirements.
              type: array
              items:
                $ref: '#/components/schemas/team'
            apps:
              description: The list of apps allowed to bypass pull request requirements.
              type: array
              items:
                $ref: '#/components/schemas/integration'
        dismiss_stale_reviews:
          type: boolean
          example: true
        require_code_owner_reviews:
          type: boolean
          example: true
        required_approving_review_count:
          type: integer
          minimum: 0
          maximum: 6
          example: 2
        require_last_push_approval:
          description: Whether the most recent push must be approved by someone other than the person who pushed it.
          type: boolean
          example: true
          default: false
      required:
      - dismiss_stale_reviews
      - require_code_owner_reviews
    branch-restriction-policy:
      title: Branch Restriction Policy
      description: Branch Restriction Policy
      type: object
      properties:
        url:
          type: string
          format: uri
        users_url:
          type: string
          format: uri
        teams_url:
          type: string
          format: uri
        apps_url:
          type: string
          format: uri
        users:
          type: array
          items:
            type: object
            properties:
              login:
                type: string
              id:
                type: integer
                format: int64
              node_id:
                type: string
              avatar_url:
                type: string
              gravatar_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              followers_url:
                type: string
              following_url:
                type: string
              gists_url:
                type: string
              starred_url:
                type: string
              subscriptions_url:
                type: string
              organizations_url:
                type: string
              repos_url:
                type: string
              events_url:
                type: string
              received_events_url:
                type: string
              type:
                type: string
              site_admin:
                type: boolean
              user_view_type:
                type: string
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              node_id:
                type: string
              url:
                type: string
              html_url:
                type: string
              name:
                type: string
              slug:
                type: string
              description:
                type: string
                nullable: true
              privacy:
                type: string
              notification_setting:
                type: string
              permission:
                type: string
              members_url:
                type: string
              repositories_url:
                type: string
              parent:
                type: string
                nullable: true
        apps:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              slug:
                type: string
              node_id:
                type: string
              owner:
                type: object
                properties:
                  login:
                    type: string
                  id:
                    type: integer
                  node_id:
                    type: string
                  url:
                    type: string
                  repos_url:
                    type: string
                  events_url:
                    type: string
                  hooks_url:
                    type: string
                  issues_url:
                    type: string
                  members_url:
                    type: string
                  public_members_url:
                    type: string
                  avatar_url:
                    type: string
                  description:
                    type: string
                  gravatar_id:
                    type: string
                    example: '""'
                  html_url:
                    type: string
                    example: '"https://github.com/testorg-ea8ec76d71c3af4b"'
                  followers_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers"'
                  following_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}"'
                  gists_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}"'
                  starred_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}"'
                  subscriptions_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions"'
                  organizations_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs"'
                  received_events_url:
                    type: string
                    example: '"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events"'
                  type:
                    type: string
                    example: '"Organization"'
                  site_admin:
                    type: boolean
                    example: false
                  user_view_type:
                    type: string
                    example: public
              name:
                type: string
              client_id:
                type: string
              description:
                type: string
              external_url:
                type: string
              html_url:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              permissions:
                type: object
                properties:
                  metadata:
                    type: string
                  contents:
                    type: string
                  issues:
                    type: string
                  single_file:
                    type: string
              events:
                type: array
                items:
                  type: string
      required:
      - url
      - users_url
      - teams_url
      - apps_url
      - users
      - teams
      - apps
    branch-protection:
      title: Branch Protection
      description: Branch Protection
      type: object
      properties:
        url:
          type: string
        enabled:
          type: boolean
        required_status_checks:
          $ref: '#/components/schemas/protected-branch-required-status-check'
        enforce_admins:
          $ref: '#/components/schemas/protected-branch-admin-enforced'
        required_pull_request_reviews:
          $ref: '#/components/schemas/protected-branch-pull-request-review'
        restrictions:
          $ref: '#/components/schemas/branch-restriction-policy'
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
        name:
          type: string
          example: '"branch/with/protection"'
        protection_url:
          type: string
          example: '"https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"'
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
    short-branch:
      title: Short Branch
      description: Short Branch
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        protected:
          type: boolean
        protection:
          $ref: '#/components/schemas/branch-protection'
        protection_url:
          type: string
          format: uri
      required:
      - name
      - commit
      - protected
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
        verified_at:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
      - verified_at
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          enum:
          - added
          - removed
          - modified
          - renamed
          - copied
          - changed
          - unchanged
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
        previous_filename:
          type: string
          example: file.txt
      required:
      - additions
      - blob_url
      - changes
      - contents_url
      - deletions
      - filename
      - raw_url
      - sha
      - status
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              $ref: '#/components/schemas/nullable-git-user'
            committer:
              $ref: '#/components/schemas/nullable-git-user'
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
              - sha
              - url
            verification:
              $ref: '#/components/schemas/verification'
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/empty-object'
        committer:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/empty-object'
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
            - sha
            - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            $ref: '#/components/schemas/diff-entry'
      required:
      - url
      - sha
      - node_id
      - html_url
      - comments_url
      - commit
      - author
      - committer
      - parents
    branch-with-protection:
      title: Branch With Protection
      description: Branch With Protection
      type: object
      properties:
        name:
          type: string
        commit:
          $ref: '#/components/schemas/commit'
        _links:
          type: object
          properties:
            html:
              type: string
            self:
              type: string
              format: uri
          required:
          - html
          - self
        protected:
          type: boolean
        protection:
          $ref: '#/components/schemas/branch-protection'
        protection_url:
          type: string
          format: uri
        pattern:
          type: string
          example: '"mas*"'
        required_approving_review_count:
          type: integer
          example: 1
      required:
      - name
      - commit
      - _links
      - protection
      - protected
      - protection_url
    status-check-policy:
      title: Status Check Policy
      description: Status Check Policy
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict:
          type: boolean
          example: true
        contexts:
          type: array
          example:
          - continuous-integration/travis-ci
          items:
            type: string
        checks:
          type: array
          items:
            type: object
            properties:
              context:
                type: string
                example: continuous-integration/travis-ci
              app_id:
                type: integer
                nullable: true
            required:
            - context
            - app_id
        contexts_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
      required:
      - url
      - contexts_url
      - strict
      - contexts
      - checks
    protected-branch:
      title: Protected Branch
      description: Branch protections protect branches
      type: object
      properties:
        url:
          type: string
          format: uri
        required_status_checks:
          $ref: '#/components/schemas/status-check-policy'
        required_pull_request_reviews:
          type: object
          properties:
            url:
              type: string
              format: uri
            dismiss_stale_reviews:
              type: boolean
            require_code_owner_reviews:
              type: boolean
            required_approving_review_count:
              type: integer
            require_last_push_approval:
              description: Whether the most recent push must be approved by someone other than the person who pushed it.
              type: boolean
              default: false
            dismissal_restrictions:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                users_url:
                  type: string
                  format: uri
                teams_url:
                  type: string
                  format: uri
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/simple-user'
                teams:
                  type: array
                  items:
                    $ref: '#/components/schemas/team'
                apps:
                  type: array
                  items:
                    $ref: '#/components/schemas/integration'
              required:
              - url
              - users_url
              - teams_url
              - users
              - teams
            bypass_pull_request_allowances:
              type: object
              properties:
                users:
                  type: array
                  items:
                    $ref: '#/components/schemas/simple-user'
                teams:
                  type: array
                  items:
                    $ref: '#/components/schemas/team'
                apps:
                  type: array
                  items:
                    $ref: '#/components/schemas/integration'
              required:
              - users
              - teams
          required:
          - url
        required_signatures:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
            enabled:
              type: boolean
              example: true
          required:
          - url
          - enabled
        enforce_admins:
          type: object
          properties:
            url:
              type: string
              format: uri
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - url
          - enabled
        required_linear_history:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_force_pushes:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        allow_deletions:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        restrictions:
          $ref: '#/components/schemas/branch-restriction-policy'
        required_conversation_resolution:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
        block_creations:
          type: object
          properties:
            enabled:
              type: boolean
          additionalProperties: false
          required:
          - enabled
        lock_branch:
          type: object
          description: Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
        allow_fork_syncing:
          type: object
          description: Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.
          properties:
            enabled:
              default: false
              type: boolean
          additionalProperties: false
      required:
      - url
    codeowners-errors:
      title: CODEOWNERS errors
      description: A list of errors found in a repo's CODEOWNERS file
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              line:
                description: The line number where this errors occurs.
                type: integer
                example: 7
              column:
                description: The column number where this errors occurs.
                type: integer
                example: 3
              source:
                description: The contents of the line where the error occurs.
                type: string
                example: '* user'
              kind:
                description: The type of error.
                type: string
                example: Invalid owner
              suggestion:
                description: Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.
                type: string
                nullable: true
                example: The pattern `/` will never match anything, did you mean `*` instead?
              message:
                description: A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).
                type: string
                example: "Invalid owner on line 7:\n\n  * user\n    ^"
              path:
                description: The path of the file where the error occured.
                type: string
                example: .github/CODEOWNERS
            required:
            - line
            - column
            - kind
            - message
            - path
      required:
      - errors
    collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
    repository-invitation:
      title: Repository Invitation
      description: Repository invitations let you manage who you collaborate with.
      type: object
      properties:
        id:
          description: Unique identifier of the repository invitation.
          example: 42
          type: integer
          format: int64
        repository:
          $ref: '#/components/schemas/minimal-repository'
        invitee:
          $ref: '#/components/schemas/nullable-simple-user'
        inviter:
          $ref: '#/components/schemas/nullable-simple-user'
        permissions:
          description: The permission associated with the invitation.
          example: read
          type: string
          enum:
          - read
          - write
          - admin
          - triage
          - maintain
        created_at:
          type: string
          format: date-time
          example: '2016-06-13T14:52:50-05:00'
        expired:
          description: Whether or not the invitation has expired
          type: boolean
        url:
          description: URL for the repository invitation
          example: https://api.github.com/user/repository-invitations/1
          type: string
        html_url:
          type: string
          example: https://github.com/octocat/Hello-World/invitations
        node_id:
          type: string
      required:
      - id
      - node_id
      - permissions
      - inviter
      - invitee
      - repository
      - url
      - html_url
      - created_at
    nullable-collaborator:
      title: Collaborator
      description: Collaborator
      type: object
      properties:
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        email:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - push
          - admin
        role_name:
          type: string
          example: admin
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - role_name
      nullable: true
    repository-collaborator-permission:
      title: Repository Collaborator Permission
      description: Repository Collaborator Permission
      type: object
      properties:
        permission:
          type: string
        role_name:
          type: string
          example: admin
        user:
          $ref: '#/components/schemas/nullable-collaborator'
      required:
      - permission
      - role_name
      - user
    commit-comment:
      title: Commit Comment
      description: Commit Comment
      type: object
      properties:
        html_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        body:
          type: string
        path:
          type: string
          nullable: true
        position:
          type: integer
          nullable: true
        line:
          type: integer
          nullable: true
        commit_id:
          type: string
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        author_association:
          $ref: '#/components/schemas/author-association'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
      - url
      - html_url
      - id
      - node_id
      - user
      - position
      - line
      - path
      - commit_id
      - body
      - author_association
      - created_at
      - updated_at
    branch-short:
      title: Branch Short
      description: Branch Short
      type: object
      properties:
        name:
          type: string
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
          required:
          - sha
          - url
        protected:
          type: boolean
      required:
      - name
      - commit
      - protected
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
      - href
    auto-merge:
      title: Auto merge
      description: The status of auto merging a pull request.
      type: object
      properties:
        enabled_by:
          $ref: '#/components/schemas/simple-user'
        merge_method:
          type: string
          description: The merge method to use.
          enum:
          - merge
          - squash
          - rebase
        commit_title:
          type: string
          description: Title for the merge commit message.
        commit_message:
          type: string
          description: Commit message for the merge commit.
      required:
      - enabled_by
      - merge_method
      - commit_title
      - commit_message
      nullable: true
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_reviewers:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_teams:
          type: array
          items:
            $ref: '#/components/schemas/team'
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              $ref: '#/components/schemas/link'
            commits:
              $ref: '#/components/schemas/link'
            statuses:
              $ref: '#/components/schemas/link'
            html:
              $ref: '#/components/schemas/link'
            issue:
              $ref: '#/components/schemas/link'
            review_comments:
              $ref: '#/components/schemas/link'
            review_comment:
              $ref: '#/components/schemas/link'
            self:
              $ref: '#/components/schemas/link'
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          $ref: '#/components/schemas/author-association'
        auto_merge:
          $ref: '#/components/schemas/auto-merge'
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
    simple-commit-status:
      title: Simple Commit Status
      type: object
      properties:
        description:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        context:
          type: string
        target_url:
          type: string
          format: uri
          nullable: true
        required:
          type: boolean
          nullable: true
        avatar_url:
          type: string
          nullable: true
          format: uri
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - description
      - id
      - node_id
      - state
      - context
      - target_url
      - avatar_url
      - url
      - created_at
      - updated_at
    combined-commit-status:
      title: Combined Commit Status
      description: Combined Commit Status
      type: object
      properties:
        state:
          type: string
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/simple-commit-status'
        sha:
          type: string
        total_count:
          type: integer
        repository:
          $ref: '#/components/schemas/minimal-repository'
        commit_url:
          type: string
          format: uri
        url:
          type: string
          format: uri
      required:
      - state
      - sha
      - total_count
      - statuses
      - repository
      - commit_url
      - url
    status:
      title: Status
      description: The status of a commit.
      type: object
      properties:
        url:
          type: string
        avatar_url:
          type: string
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        state:
          type: string
        description:
          type: string
          nullable: true
        target_url:
          type: string
          nullable: true
        context:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
      - url
      - avatar_url
      - id
      - node_id
      - state
      - description
      - target_url
      - context
      - created_at
      - updated_at
      - creator
    nullable-code-of-conduct-simple:
      title: Code Of Conduct Simple
      description: Code of Conduct Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/docs/community/code_of_conduct
        key:
          type: string
          example: citizen_code_of_conduct
        name:
          type: string
          example: Citizen Code of Conduct
        html_url:
          type: string
          nullable: true
          format: uri
          example: https://github.com/github/docs/blob/main/CODE_OF_CONDUCT.md
      required:
      - url
      - key
      - name
      - html_url
      nullable: true
    nullable-community-health-file:
      title: Community Health File
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
      required:
      - url
      - html_url
      nullable: true
    community-profile:
      title: Community Profile
      description: Community Profile
      type: object
      properties:
        health_percentage:
          type: integer
          example: 100
        description:
          type: string
          example: My first repository on GitHub!
          nullable: true
        documentation:
          type: string
          example: example.com
          nullable: true
        files:
          type: object
          properties:
            code_of_conduct:
              $ref: '#/components/schemas/nullable-code-of-conduct-simple'
            code_of_conduct_file:
              $ref: '#/components/schemas/nullable-community-health-file'
            license:
              $ref: '#/components/schemas/nullable-license-simple'
            contributing:
              $ref: '#/components/schemas/nullable-community-health-file'
            readme:
              $ref: '#/components/schemas/nullable-community-health-file'
            issue_template:
              $ref: '#/components/schemas/nullable-community-health-file'
            pull_request_template:
              $ref: '#/components/schemas/nullable-community-health-file'
          required:
          - code_of_conduct
          - code_of_conduct_file
          - license
          - contributing
          - readme
          - issue_template
          - pull_request_template
        updated_at:
          type: string
          format: date-time
          example: '2017-02-28T19:09:29Z'
          nullable: true
        content_reports_enabled:
          type: boolean
          example: true
      required:
      - health_percentage
      - description
      - documentation
      - files
      - updated_at
    commit-comparison:
      title: Commit Comparison
      description: Commit Comparison
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          $ref: '#/components/schemas/commit'
        merge_base_commit:
          $ref: '#/components/schemas/commit'
        status:
          type: string
          enum:
          - diverged
          - ahead
          - behind
          - identical
          example: ahead
        ahead_by:
          type: integer
          example: 4
        behind_by:
          type: integer
          example: 5
        total_commits:
          type: integer
          example: 6
        commits:
          type: array
          items:
            $ref: '#/components/schemas/commit'
        files:
          type: array
          items:
            $ref: '#/components/schemas/diff-entry'
      required:
      - url
      - html_url
      - permalink_url
      - diff_url
      - patch_url
      - base_commit
      - merge_base_commit
      - status
      - ahead_by
      - behind_by
      - total_commits
      - commits
    content-tree:
      title: Content Tree
      description: Content Tree
      type: object
      properties:
        type:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        content:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        entries:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              size:
                type: integer
              name:
                type: string
              path:
                type: string
              sha:
                type: string
              url:
                type: string
                format: uri
              git_url:
                type: string
                format: uri
                nullable: true
              html_url:
                type: string
                format: uri
                nullable: true
              download_url:
                type: string
                format: uri
                nullable: true
              _links:
                type: object
                properties:
                  git:
                    type: string
                    format: uri
                    nullable: true
                  html:
                    type: string
                    format: uri
                    nullable: true
                  self:
                    type: string
                    format: uri
                required:
                - git
                - html
                - self
            required:
            - _links
            - git_url
            - html_url
            - download_url
            - name
            - path
            - sha
            - size
            - type
            - url
        encoding:
          type: string
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
    content-directory:
      title: Content Directory
      description: A list of directory items
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
            - dir
            - file
            - submodule
            - symlink
          size:
            type: integer
          name:
            type: string
          path:
            type: string
          content:
            type: string
          sha:
            type: string
          url:
            type: string
            format: uri
          git_url:
            type: string
            format: uri
            nullable: true
          html_url:
            type: string
            format: uri
            nullable: true
          download_url:
            type: string
            format: uri
            nullable: true
          _links:
            type: object
            properties:
              git:
                type: string
                format: uri
                nullable: true
              html:
                type: string
                format: uri
                nullable: true
              self:
                type: string
                format: uri
            required:
            - git
            - html
            - self
        required:
        - _links
        - git_url
        - html_url
        - download_url
        - name
        - path
        - sha
        - size
        - type
        - url
    content-file:
      title: Content File
      description: Content File
      type: object
      properties:
        type:
          type: string
          enum:
          - file
        encoding:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        content:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
        target:
          type: string
          example: '"actual/actual.md"'
        submodule_git_url:
          type: string
          example: '"git://example.com/defunkt/dotjs.git"'
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - content
      - encoding
    content-symlink:
      title: Symlink Content
      description: An object describing a symlink
      type: object
      properties:
        type:
          type: string
          enum:
          - symlink
        target:
          type: string
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - target
    content-submodule:
      title: Submodule Content
      description: An object describing a submodule
      type: object
      properties:
        type:
          type: string
          enum:
          - submodule
        submodule_git_url:
          type: string
          format: uri
        size:
          type: integer
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
          nullable: true
        html_url:
          type: string
          format: uri
          nullable: true
        download_url:
          type: string
          format: uri
          nullable: true
        _links:
          type: object
          properties:
            git:
              type: string
              format: uri
              nullable: true
            html:
              type: string
              format: uri
              nullable: true
            self:
              type: string
              format: uri
          required:
          - git
          - html
          - self
      required:
      - _links
      - git_url
      - html_url
      - download_url
      - name
      - path
      - sha
      - size
      - type
      - url
      - submodule_git_url
    file-commit:
      title: File Commit
      description: File Commit
      type: object
      required:
      - content
      - commit
      properties:
        content:
          type: object
          properties:
            name:
              type: string
            path:
              type: string
            sha:
              type: string
            size:
              type: integer
            url:
              type: string
            html_url:
              type: string
            git_url:
              type: string
            download_url:
              type: string
            type:
              type: string
            _links:
              type: object
              properties:
                self:
                  type: string
                git:
                  type: string
                html:
                  type: string
          nullable: true
        commit:
          type: object
          properties:
            sha:
              type: string
            node_id:
              type: string
            url:
              type: string
            html_url:
              type: string
            author:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            committer:
              type: object
              properties:
                date:
                  type: string
                name:
                  type: string
                email:
                  type: string
            message:
              type: string
            tree:
              type: object
              properties:
                url:
                  type: string
                sha:
                  type: string
            parents:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  html_url:
                    type: string
                  sha:
                    type: string
            verification:
              type: object
              properties:
                verified:
                  type: boolean
                reason:
                  type: string
                signature:
                  type: string
                  nullable: true
                payload:
                  type: string
                  nullable: true
                verified_at:
                  type: string
                  nullable: true
    secret-scanning-push-protection-bypass-placeholder-id:
      description: The ID of the push protection bypass placeholder. This value is returned on any push protected routes.
      type: string
    repository-rule-violation-error:
      description: Repository rule violation was detected
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        status:
          type: string
        metadata:
          type: object
          properties:
            secret_scanning:
              type: object
              properties:
                bypass_placeholders:
                  type: array
                  items:
                    type: object
                    properties:
                      placeholder_id:
                        $ref: '#/components/schemas/secret-scanning-push-protection-bypass-placeholder-id'
                      token_type:
                        type: string
    contributor:
      title: Contributor
      description: Contributor
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        events_url:
          type: string
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        site_admin:
          type: boolean
        contributions:
          type: integer
        email:
          type: string
        name:
          type: string
        user_view_type:
          type: string
      required:
      - contributions
      - type
    deployment-status:
      title: Deployment Status
      description: The status of a deployment.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state:
          description: The state of the status.
          enum:
          - error
          - failure
          - inactive
          - pending
          - success
          - queued
          - in_progress
          example: success
          type: string
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        description:
          description: A short description of the status.
          default: ''
          type: string
          maxLength: 140
          example: Deployment finished successfully.
        environment:
          description: The environment of the deployment that the status is for.
          default: ''
          type: string
          example: production
        target_url:
          description: 'Closing down notice: the URL to associate with this status.'
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        created_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        updated_at:
          type: string
          format: date-time
          example: '2012-07-20T01:19:13Z'
        deployment_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example/deployments/42
        repository_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/example
        environment_url:
          description: The URL for accessing your environment.
          default: ''
          type: string
          format: uri
          example: https://staging.example.com/
        log_url:
          description: The URL to associate with this status.
          default: ''
          type: string
          format: uri
          example: https://example.com/deployment/42/output
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
      required:
      - id
      - node_id
      - state
      - creator
      - description
      - deployment_url
      - target_url
      - repository_url
      - url
      - created_at
      - updated_at
    wait-timer:
      type: integer
      example: 30
      description: The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
    deployment-branch-policy-settings:
      type: object
      description: The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.
      properties:
        protected_branches:
          type: boolean
          description: Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.
        custom_branch_policies:
          type: boolean
          description: Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.
      nullable: true
      required:
      - protected_branches
      - custom_branch_policies
    environment:
      title: Environment
      description: Details of a deployment environment
      type: object
      properties:
        id:
          description: The id of the environment.
          example: 56780428
          type: integer
          format: int64
        node_id:
          type: string
          example: MDExOkVudmlyb25tZW50NTY3ODA0Mjg=
        name:
          description: The name of the environment.
          example: staging
          type: string
        url:
          type: string
          example: https://api.github.com/repos/github/hello-world/environments/staging
        html_url:
          type: string
          example: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at:
          description: The time that the environment was created, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        updated_at:
          description: The time that the environment was last updated, in ISO 8601 format.
          example: '2020-11-23T22:00:40Z'
          format: date-time
          type: string
        protection_rules:
          type: array
          description: Built-in deployment protection rules for the environment.
          items:
            anyOf:
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: wait_timer
                wait_timer:
                  $ref: '#/components/schemas/wait-timer'
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3755
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM3NTU=
                prevent_self_review:
                  type: boolean
                  example: false
                  description: Whether deployments to this environment can be approved by the user who created the deployment.
                type:
                  type: string
                  example: required_reviewers
                reviewers:
                  type: array
                  description: The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        $ref: '#/components/schemas/deployment-reviewer-type'
                      reviewer:
                        anyOf:
                        - $ref: '#/components/schemas/simple-user'
                        - $ref: '#/components/schemas/team'
              required:
              - id
              - node_id
              - type
            - type: object
              properties:
                id:
                  type: integer
                  example: 3515
                node_id:
                  type: string
                  example: MDQ6R2F0ZTM1MTU=
                type:
                  type: string
                  example: branch_policy
              required:
              - id
              - node_id
              - type
        deployment_branch_policy:
          $ref: '#/components/schemas/deployment-branch-policy-settings'
      required:
      - id
      - node_id
      - name
      - url
      - html_url
      - created_at
      - updated_at
    prevent-self-review:
      type: boolean
      example: false
      description: Whether or not a user who created the job is prevented from approving their own job.
    deployment-branch-policy:
      title: Deployment branch policy
      description: Details of a deployment branch or tag policy.
      type: object
      properties:
        id:
          description: The unique identifier of the branch or tag policy.
          type: integer
          example: 361471
        node_id:
          type: string
          example: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=
        name:
          description: The name pattern that branches or tags must match in order to deploy to the environment.
          type: string
          example: release/*
        type:
          description: Whether this rule targets a branch or tag.
          type: string
          example: branch
          enum:
          - branch
          - tag
    deployment-branch-policy-name-pattern-with-type:
      title: Deployment branch and tag policy name pattern
      type: object
      properties:
        name:
          description: 'The name pattern that branches or tags must match in order to deploy to the environment.


            Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.

            For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).'
          type: string
          example: release/*
        type:
          description: Whether this rule targets a branch or tag
          type: string
          example: branch
          enum:
          - branch
          - tag
      required:
      - name
    deployment-branch-policy-name-pattern:
      title: Deployment branch policy name pattern
      type: object
      properties:
        name:
          description: 'The name pattern that branches must match in order to deploy to the environment.


            Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.

            For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).'
          type: string
          example: release/*
      required:
      - name
    custom-deployment-rule-app:
      title: Custom deployment protection rule app
      description: A GitHub App that is providing a custom deployment protection rule.
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier of the deployment protection rule integration.
        slug:
          type: string
          example: my-custom-app
          description: The slugified name of the deployment protection rule integration.
        integration_url:
          type: string
          example: https://api.github.com/apps/custom-app-slug
          description: The URL for the endpoint to get details about the app.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule integration.
      required:
      - id
      - slug
      - integration_url
      - node_id
    deployment-protection-rule:
      title: Deployment protection rule
      description: Deployment protection rule
      type: object
      properties:
        id:
          type: integer
          example: 3515
          description: The unique identifier for the deployment protection rule.
        node_id:
          type: string
          example: MDQ6R2F0ZTM1MTU=
          description: The node ID for the deployment protection rule.
        enabled:
          type: boolean
          example: true
          description: Whether the deployment protection rule is enabled for the environment.
        app:
          $ref: '#/components/schemas/custom-deployment-rule-app'
      required:
      - id
      - node_id
      - enabled
      - app
    hook-response:
      title: Hook Response
      type: object
      properties:
        code:
          type: integer
          nullable: true
        status:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
      required:
      - code
      - status
      - message
    hook:
      title: Webhook
      description: Webhooks for repositories.
      type: object
      properties:
        type:
          type: string
        id:
          description: Unique identifier of the webhook.
          example: 42
          type: integer
        name:
          description: The name of a valid service, use 'web' for a webhook.
          example: web
          type: string
        active:
          description: Determines whether the hook is actually triggered on pushes.
          type: boolean
          example: true
        events:
          description: 'Determines what events the hook is triggered for. Default: [''push''].'
          type: array
          items:
            type: string
          example:
          - push
          - pull_request
        config:
          $ref: '#/components/schemas/webhook-config'
        updated_at:
          type: string
          format: date-time
          example: '2011-09-06T20:39:23Z'
        created_at:
          type: string
          format: date-time
          example: '2011-09-06T17:26:27Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1
        test_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/test
        ping_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/pings
        deliveries_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks/1/deliveries
        last_response:
          $ref: '#/components/schemas/hook-response'
      required:
      - id
      - url
      - type
      - name
      - active
      - events
      - config
      - ping_url
      - created_at
      - updated_at
      - last_response
      - test_url
    deploy-key:
      title: Deploy Key
      description: An SSH key granting access to a single repository.
      type: object
      properties:
        id:
          type: integer
        key:
          type: string
        url:
          type: string
        title:
          type: string
        verified:
          type: boolean
        created_at:
          type: string
        read_only:
          type: boolean
        added_by:
          type: string
          nullable: true
        last_used:
          nullable: true
          type: string
          format: date-time
        enabled:
          type: boolean
      required:
      - id
      - key
      - url
      - title
      - verified
      - created_at
      - read_only
    language:
      title: Language
      description: Language
      type: object
      additionalProperties:
        type: integer
    merged-upstream:
      title: Merged upstream
      description: Results of a successful merge upstream request
      type: object
      properties:
        message:
          type: string
        merge_type:
          type: string
          enum:
          - merge
          - fast-forward
          - none
        base_branch:
          type: string
    pages-source-hash:
      title: Pages Source Hash
      type: object
      properties:
        branch:
          type: string
        path:
          type: string
      required:
      - branch
      - path
    pages-https-certificate:
      title: Pages Https Certificate
      type: object
      properties:
        state:
          type: string
          enum:
          - new
          - authorization_created
          - authorization_pending
          - authorized
          - authorization_revoked
          - issued
          - uploaded
          - approved
          - errored
          - bad_authz
          - destroy_pending
          - dns_changed
          example: approved
        description:
          type: string
          example: Certificate is approved
        domains:
          type: array
          items:
            type: string
          description: Array of the domain set and its alternate name (if it is configured)
          example:
          - example.com
          - www.example.com
        expires_at:
          type: string
          format: date
      required:
      - state
      - description
      - domains
    page:
      title: GitHub Pages
      description: The configuration for GitHub Pages for a repository.
      type: object
      properties:
        url:
          type: string
          description: The API address for accessing this Page resource.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages
        status:
          type: string
          description: The status of the most recent build of the Page.
          example: built
          enum:
          - built
          - building
          - errored
          nullable: true
        cname:
          description: The Pages site's custom domain
          example: example.com
          type: string
          nullable: true
        protected_domain_state:
          type: string
          description: The state if the domain is verified
          example: pending
          nullable: true
          enum:
          - pending
          - verified
          - unverified
        pending_domain_unverified_at:
          type: string
          description: The timestamp when a pending domain becomes unverified.
          nullable: true
          format: date-time
        custom_404:
          type: boolean
          description: Whether the Page has a custom 404 page.
          example: false
          default: false
        html_url:
          type: string
          description: The web address the Page can be accessed from.
          format: uri
          example: https://example.com
        build_type:
          type: string
          description: The process in which the Page will be built.
          example: legacy
          nullable: true
          enum:
          - legacy
          - workflow
        source:
          $ref: '#/components/schemas/pages-source-hash'
        public:
          type: boolean
          description: Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
          example: true
        https_certificate:
          $ref: '#/components/schemas/pages-https-certificate'
        https_enforced:
          type: boolean
          description: Whether https is enabled on the domain
          example: true
      required:
      - url
      - status
      - cname
      - custom_404
      - public
    page-build:
      title: Page Build
      description: Page Build
      type: object
      properties:
        url:
          type: string
          format: uri
        status:
          type: string
        error:
          type: object
          properties:
            message:
              type: string
              nullable: true
          required:
          - message
        pusher:
          $ref: '#/components/schemas/nullable-simple-user'
        commit:
          type: string
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - url
      - status
      - error
      - pusher
      - commit
      - duration
      - created_at
      - updated_at
    page-build-status:
      title: Page Build Status
      description: Page Build Status
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/builds/latest
        status:
          type: string
          example: queued
      required:
      - url
      - status
    page-deployment:
      title: GitHub Pages
      description: The GitHub Pages deployment status.
      type: object
      properties:
        id:
          oneOf:
          - type: integer
          - type: string
          description: The ID of the GitHub Pages deployment. This is the Git SHA of the deployed commit.
        status_url:
          type: string
          description: The URI to monitor GitHub Pages deployment status.
          format: uri
          example: https://api.github.com/repos/github/hello-world/pages/deployments/4fd754f7e594640989b406850d0bc8f06a121251
        page_url:
          type: string
          description: The URI to the deployed GitHub Pages.
          format: uri
          example: hello-world.github.io
        preview_url:
          type: string
          description: The URI to the deployed GitHub Pages preview.
          format: uri
          example: monalisa-1231a2312sa32-23sda74.drafts.github.io
      required:
      - id
      - status_url
      - page_url
    pages-deployment-status:
      title: GitHub Pages deployment status
      type: object
      properties:
        status:
          type: string
          description: The current status of the deployment.
          enum:
          - deployment_in_progress
          - syncing_files
          - finished_file_sync
          - updating_pages
          - purging_cdn
          - deployment_cancelled
          - deployment_failed
          - deployment_content_failed
          - deployment_attempt_error
          - deployment_lost
          - succeed
    pages-health-check:
      title: Pages Health Check Status
      description: Pages Health Check Status
      type: object
      properties:
        domain:
          type: object
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
        alt_domain:
          type: object
          nullable: true
          properties:
            host:
              type: string
            uri:
              type: string
            nameservers:
              type: string
            dns_resolves:
              type: boolean
            is_proxied:
              type: boolean
              nullable: true
            is_cloudflare_ip:
              type: boolean
              nullable: true
            is_fastly_ip:
              type: boolean
              nullable: true
            is_old_ip_address:
              type: boolean
              nullable: true
            is_a_record:
              type: boolean
              nullable: true
            has_cname_record:
              type: boolean
              nullable: true
            has_mx_records_present:
              type: boolean
              nullable: true
            is_valid_domain:
              type: boolean
            is_apex_domain:
              type: boolean
            should_be_a_record:
              type: boolean
              nullable: true
            is_cname_to_github_user_domain:
              type: boolean
              nullable: true
            is_cname_to_pages_dot_github_dot_com:
              type: boolean
              nullable: true
            is_cname_to_fastly:
              type: boolean
              nullable: true
            is_pointed_to_github_pages_ip:
              type: boolean
              nullable: true
            is_non_github_pages_ip_present:
              type: boolean
              nullable: true
            is_pages_domain:
              type: boolean
            is_served_by_pages:
              type: boolean
              nullable: true
            is_valid:
              type: boolean
            reason:
              type: string
              nullable: true
            responds_to_https:
              type: boolean
            enforces_https:
              type: boolean
            https_error:
              type: string
              nullable: true
            is_https_eligible:
              type: boolean
              nullable: true
            caa_error:
              type: string
              nullable: true
    release-asset:
      title: Release Asset
      description: Data related to a release.
      type: object
      properties:
        url:
          type: string
          format: uri
        browser_download_url:
          type: string
          format: uri
        id:
          type: integer
        node_id:
          type: string
        name:
          description: The file name of the asset.
          type: string
          example: Team Environment
        label:
          type: string
          nullable: true
        state:
          description: State of the release asset.
          type: string
          enum:
          - uploaded
          - open
        content_type:
          type: string
        size:
          type: integer
        digest:
          type: string
          nullable: true
        download_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        uploader:
          $ref: '#/components/schemas/nullable-simple-user'
      required:
      - id
      - name
      - content_type
      - size
      - digest
      - state
      - url
      - node_id
      - download_count
      - label
      - uploader
      - browser_download_url
      - created_at
      - updated_at
    release:
      title: Release
      description: A release.
      type: object
      properties:
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        assets_url:
          type: string
          format: uri
        upload_url:
          type: string
        tarball_url:
          type: string
          format: uri
          nullable: true
        zipball_url:
          type: string
          format: uri
          nullable: true
        id:
          type: integer
        node_id:
          type: string
        tag_name:
          description: The name of the tag.
          example: v1.0.0
          type: string
        target_commitish:
          description: Specifies the commitish value that determines where the Git tag is created from.
          example: master
          type: string
        name:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        draft:
          description: true to create a draft (unpublished) release, false to create a published one.
          example: false
          type: boolean
        prerelease:
          description: Whether to identify the release as a prerelease or a full release.
          example: false
          type: boolean
        immutable:
          description: Whether or not the release is immutable.
          example: false
          type: boolean
        created_at:
          type: string
          format: date-time
        published_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          nullable: true
          format: date-time
        author:
          $ref: '#/components/schemas/simple-user'
        assets:
          type: array
          items:
            $ref: '#/components/schemas/release-asset'
        body_html:
          type: string
        body_text:
          type: string
        mentions_count:
          type: integer
        discussion_url:
          description: The URL of the release discussion.
          type: string
          format: uri
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
      - assets_url
      - upload_url
      - tarball_url
      - zipball_url
      - created_at
      - published_at
      - draft
      - id
      - node_id
      - author
      - html_url
      - name
      - prerelease
      - tag_name
      - target_commitish
      - assets
      - url
    release-notes-content:
      title: Generated Release Notes Content
      description: Generated name and body describing a release
      type: object
      properties:
        name:
          description: The generated name of the release
          type: string
          example: Release v1.0.0 is now available!
        body:
          description: The generated body describing the contents of the release supporting markdown formatting
          type: string
      required:
      - name
      - body
    repository-rule-ruleset-info:
      title: repository ruleset data for rule
      description: User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
      properties:
        ruleset_source_type:
          type: string
          description: The type of source for the ruleset that includes this rule.
          enum:
          - Repository
          - Organization
        ruleset_source:
          type: string
          description: The name of the source of the ruleset that includes this rule.
        ruleset_id:
          type: integer
          description: The ID of the ruleset that includes this rule.
    repository-rule-detailed:
      title: Repository Rule
      type: object
      description: A repository rule with ruleset details.
      oneOf:
      - allOf:
        - $ref: '#/components/schemas/repository-rule-creation'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-update'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-deletion'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-required-linear-history'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-merge-queue'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-required-deployments'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-required-signatures'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-pull-request'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-required-status-checks'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-non-fast-forward'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-commit-message-pattern'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-commit-author-email-pattern'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-committer-email-pattern'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-branch-name-pattern'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-tag-name-pattern'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-file-path-restriction'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-max-file-path-length'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-file-extension-restriction'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-max-file-size'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-workflows'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
      - allOf:
        - $ref: '#/components/schemas/repository-rule-code-scanning'
        - $ref: '#/components/schemas/repository-rule-ruleset-info'
    code-frequency-stat:
      title: Code Frequency Stat
      description: Code Frequency Stat
      type: array
      items:
        type: integer
    commit-activity:
      title: Commit Activity
      description: Commit Activity
      type: object
      properties:
        days:
          type: array
          example:
          - 0
          - 3
          - 26
          - 20
          - 39
          - 1
          - 0
          items:
            type: integer
        total:
          type: integer
          example: 89
        week:
          type: integer
          example: 1336280400
      required:
      - days
      - total
      - week
    contributor-activity:
      title: Contributor Activity
      description: Contributor Activity
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        total:
          type: integer
          example: 135
        weeks:
          type: array
          example:
          - w: '1367712000'
            a: 6898
            d: 77
            c: 10
          items:
            type: object
            properties:
              w:
                type: integer
              a:
                type: integer
              d:
                type: integer
              c:
                type: integer
      required:
      - author
      - total
      - weeks
    participation-stats:
      title: Participation Stats
      type: object
      properties:
        all:
          type: array
          items:
            type: integer
        owner:
          type: array
          items:
            type: integer
      required:
      - all
      - owner
    tag:
      title: Tag
      description: Tag
      type: object
      properties:
        name:
          type: string
          example: v0.1
        commit:
          type: object
          properties:
            sha:
              type: string
            url:
              type: string
              format: uri
          required:
          - sha
          - url
        zipball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id:
          type: string
      required:
      - name
      - node_id
      - commit
      - zipball_url
      - tarball_url
    tag-protection:
      title: Tag protection
      description: Tag protection
      type: object
      properties:
        id:
          type: integer
          example: 2
        created_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          example: '2011-01-26T19:01:12Z'
        enabled:
          type: boolean
          example: true
        pattern:
          type: string
          example: v1.*
      required:
      - pattern
    topic:
      title: Topic
      description: A topic aggregates entities that are related to a subject.
      type: object
      properties:
        names:
          type: array
          items:
            type: string
      required:
      - names
    traffic:
      title: Traffic
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        uniques:
          type: integer
        count:
          type: integer
      required:
      - timestamp
      - uniques
      - count
    clone-traffic:
      title: Clone Traffic
      description: Clone Traffic
      type: object
      properties:
        count:
          type: integer
          example: 173
        uniques:
          type: integer
          example: 128
        clones:
          type: array
          items:
            $ref: '#/components/schemas/traffic'
      required:
      - uniques
      - count
      - clones
    content-traffic:
      title: Content Traffic
      description: Content Traffic
      type: object
      properties:
        path:
          type: string
          example: /github/hubot
        title:
          type: string
          example: 'github/hubot: A customizable life embetterment robot.'
        count:
          type: integer
          example: 3542
        uniques:
          type: integer
          example: 2225
      required:
      - path
      - title
      - uniques
      - count
    referrer-traffic:
      title: Referrer Traffic
      description: Referrer Traffic
      type: object
      properties:
        referrer:
          type: string
          example: Google
        count:
          type: integer
          example: 4
        uniques:
          type: integer
          example: 3
      required:
      - referrer
      - uniques
      - count
    view-traffic:
      title: View Traffic
      description: View Traffic
      type: object
      properties:
        count:
          type: integer
          example: 14850
        uniques:
          type: integer
          example: 3782
        views:
          type: array
          items:
            $ref: '#/components/schemas/traffic'
      required:
      - uniques
      - count
      - views
  examples:
    webhook-config:
      value:
        content_type: json
        insecure_ssl: '0'
        secret: '********'
        url: https://example.com/webhook
    hook-delivery-items:
      value:
      - id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        throttled_at: '2019-06-03T00:57:16Z'
      - id: 123456789
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-04T00:57:16Z'
        redelivery: true
        duration: 0.28
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        throttled_at: null
    hook-delivery:
      value:
        id: 12345678
        guid: 0b989ba4-242f-11e5-81e1-c7b6966d2516
        delivered_at: '2019-06-03T00:57:16Z'
        redelivery: false
        duration: 0.27
        status: OK
        status_code: 200
        event: issues
        action: opened
        installation_id: 123
        repository_id: 456
        url: https://www.example.com
        throttled_at: '2019-06-03T00:57:16Z'
        request:
          headers:
            X-GitHub-Delivery: 0b989ba4-242f-11e5-81e1-c7b6966d2516
            X-Hub-Signature-256: sha256=6dcb09b5b57875f334f61aebed695e2e4193db5e
            Accept: '*/*'
            X-GitHub-Hook-ID: '42'
            User-Agent: GitHub-Hookshot/b8c71d8
            X-GitHub-Event: issues
            X-GitHub-Hook-Installation-Target-ID: '123'
            X-GitHub-Hook-Installation-Target-Type: repository
            content-type: application/json
            X-Hub-Signature: sha1=a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          payload:
            action: opened
            issue:
              body: foo
            repository:
              id: 123
        response:
          headers:
            Content-Type: text/html;charset=utf-8
          payload: ok
    list-attestations:
      value:
        attestations:
        - bundle:
            mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
            verificationMaterial:
              tlogEntries:
              - logIndex: '97913980'
                logId:
                  keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                kindVersion:
                  kind: dsse
                  version: 0.0.1
                integratedTime: '1716998992'
                inclusionPromise:
                  signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                inclusionProof:
                  logIndex: '93750549'
                  rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                  treeSize: '93750551'
                  hashes:
                  - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                  - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                  - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                  - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                  - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                  - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                  - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                  - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                  - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                  - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                  - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                  - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                  - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                  checkpoint:
                    envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
              timestampVerificationData: {}
              certificate:
                rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
            dsseEnvelope:
              payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
              payloadType: application/vnd.in-toto+json
              signatures:
              - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
          repository_id: 1
        - bundle:
            mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
            verificationMaterial:
              tlogEntries:
              - logIndex: '97913980'
                logId:
                  keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
                kindVersion:
                  kind: dsse
                  version: 0.0.1
                integratedTime: '1716998992'
                inclusionPromise:
                  signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
                inclusionProof:
                  logIndex: '93750549'
                  rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                  treeSize: '93750551'
                  hashes:
                  - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                  - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                  - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                  - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                  - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                  - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                  - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                  - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                  - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                  - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                  - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                  - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                  - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                  checkpoint:
                    envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
                canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
              timestampVerificationData: {}
              certificate:
                rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
            dsseEnvelope:
              payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
              payloadType: application/vnd.in-toto+json
              signatures:
              - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
          repository_id: 1
    simple-user-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    team-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: null
    minimal-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        security_and_analysis:
          advanced_security:
            status: enabled
          secret_scanning:
            status: enabled
          secret_scanning_push_protection:
            status: disabled
          secret_scanning_non_provider_patterns:
            status: disabled
    full-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        language: null
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        allow_forking: true
        web_commit_signoff_required: false
        subscribers_count: 42
        network_count: 0
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
    org-ruleset-items:
      value:
      - id: 21
        name: super cool ruleset
        source_type: Organization
        source: my-org
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/21
          html:
            href: https://github.com/organizations/my-org/settings/rules/21
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
      - id: 432
        name: Another ruleset
        source_type: Organization
        source: my-org
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQQ
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/432
          html:
            href: https://github.com/organizations/my-org/settings/rules/432
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    org-ruleset:
      value:
        id: 21
        name: super cool ruleset
        target: branch
        source_type: Organization
        source: my-org
        enforcement: active
        bypass_actors:
        - actor_id: 234
          actor_type: Team
          bypass_mode: always
        conditions:
          ref_name:
            include:
            - refs/heads/main
            - refs/heads/master
            exclude:
            - refs/heads/dev*
          repository_name:
            include:
            - important_repository
            - another_important_repository
            exclude:
            - unimportant_repository
            protected: true
        rules:
        - type: commit_author_email_pattern
          parameters:
            operator: contains
            pattern: github
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/orgs/my-org/rulesets/21
          html:
            href: https://github.com/organizations/my-org/settings/rules/21
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    rule-suite-items:
      value:
      - id: 21
        actor_id: 12
        actor_name: octocat
        before_sha: 893f768e172fb1bc9c5d6f3dd48557e45f14e01d
        after_sha: dedd88641a362b6b4ea872da4847d6131a164d01
        ref: refs/heads/i-see-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-06T08:43:03Z'
        result: bypass
      - id: 25
        actor_id: 11
        actor_name: not-octocat
        before_sha: 48994e4e01ccc943624c6231f172702b82b233cc
        after_sha: ecfd5a1025fa271a33ca5608d089476a2df3c9a1
        ref: refs/heads/i-am-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-07T08:43:03Z'
        result: pass
        evaluation_result: fail
    rule-suite:
      value:
        id: 21
        actor_id: 12
        actor_name: octocat
        before_sha: 893f768e172fb1bc9c5d6f3dd48557e45f14e01d
        after_sha: dedd88641a362b6b4ea872da4847d6131a164d01
        ref: refs/heads/i-see-everything
        repository_id: 404
        repository_name: octo-repo
        pushed_at: '2023-07-06T08:43:03Z'
        result: bypass
        evaluation_result: fail
        rule_evaluations:
        - rule_source:
            type: ruleset
            id: 2
            name: Author email must be a GitHub email address
          enforcement: active
          result: pass
          rule_type: commit_author_email_pattern
        - rule_source:
            type: protected_branch
          enforcement: active
          result: fail
          rule_type: pull_request
          details: Changes must be made through a pull request.
        - rule_source:
            type: ruleset
            id: 3
            name: Evaluate commit message pattern
          enforcement: evaluate
          result: fail
          rule_type: commit_message_pattern
    ruleset-history:
      value:
      - version_id: 3
        actor:
          id: 1
          type: User
        updated_at: 2024-010-23T16:29:47Z
      - version_id: 2
        actor:
          id: 2
          type: User
        updated_at: '2024-09-23T16:29:47Z'
      - version_id: 1
        actor:
          id: 1
          type: User
        updated_at: '2024-08-23T16:29:47Z'
    full-repository-default-response:
      summary: Default response
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        forks_count: 9
        forks: 9
        stargazers_count: 80
        watchers_count: 80
        watchers: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        open_issues: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          pull: true
          push: false
          admin: false
        allow_rebase_merge: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        allow_forking: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
        organization:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: Organization
          site_admin: false
        parent:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          language: null
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
        source:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World.git
          mirror_url: git:git.example.com/octocat/Hello-World
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
          svn_url: https://svn.github.com/octocat/Hello-World
          homepage: https://github.com
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          size: 108
          default_branch: master
          open_issues_count: 0
          is_template: true
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          subscribers_count: 42
          network_count: 0
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          forks: 1
          open_issues: 1
          watchers: 1
          security_and_analysis:
            advanced_security:
              status: enabled
            secret_scanning:
              status: enabled
            secret_scanning_push_protection:
              status: disabled
            secret_scanning_non_provider_patterns:
              status: disabled
    deployment-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    activity-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        before: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        after: 827efc6d56897b048c772eb4087f854f46256132
        ref: refs/heads/main
        pushed_at: '2011-01-26T19:06:43Z'
        push_type: normal
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    attestation:
      value:
        bundle:
          mediaType: application/vnd.dev.sigstore.bundle.v0.3+json
          verificationMaterial:
            tlogEntries:
            - logIndex: '97913980'
              logId:
                keyId: wNI9atQGlz+VWfO6LRygH4QUfY/8W4RFwiT5i5WRgB0=
              kindVersion:
                kind: dsse
                version: 0.0.1
              integratedTime: '1716998992'
              inclusionPromise:
                signedEntryTimestamp: MEYCIQCeEsQAy+qXtULkh52wbnHrkt2R2JQ05P9STK/xmdpQ2AIhANiG5Gw6cQiMnwvUz1+9UKtG/vlC8dduq07wsFOViwSL
              inclusionProof:
                logIndex: '93750549'
                rootHash: KgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=
                treeSize: '93750551'
                hashes:
                - 8LI21mzwxnUSo0fuZeFsUrz2ujZ4QAL+oGeTG+5toZg=
                - nCb369rcIytNhGwWoqBv+eV49X3ZKpo/HJGKm9V+dck=
                - hnNQ9mUdSwYCfdV21pd87NucrdRRNZATowlaRR1hJ4A=
                - MBhhK33vlD4Tq/JKgAaXUI4VjmosWKe6+7RNpQ2ncNM=
                - XKWUE3stvGV1OHsIGiCGfn047Ok6uD4mFkh7BaicaEc=
                - Tgve40VPFfuei+0nhupdGpfPPR+hPpZjxgTiDT8WNoY=
                - wV+S/7tLtYGzkLaSb6UDqexNyhMvumHK/RpTNvEZuLU=
                - uwaWufty6sn6XqO1Tb9M3Vz6sBKPu0HT36mStxJNd7s=
                - jUfeMOXQP0XF1JAnCEETVbfRKMUwCzrVUzYi8vnDMVs=
                - xQKjzJAwwdlQG/YUYBKPXxbCmhMYKo1wnv+6vDuKWhQ=
                - cX3Agx+hP66t1ZLbX/yHbfjU46/3m/VAmWyG/fhxAVc=
                - sjohk/3DQIfXTgf/5XpwtdF7yNbrf8YykOMHr1CyBYQ=
                - 98enzMaC+x5oCMvIZQA5z8vu2apDMCFvE/935NfuPw8=
                checkpoint:
                  envelope: rekor.sigstore.dev - 2605736670972794746\n93750551\nKgKiXoOl8rM5d4y6Xlbm2QLftvj/FYvTs6z7dJlNO60=\n\n— rekor.sigstore.dev wNI9ajBEAiBkLzdjY8A9HReU7rmtjwZ+JpSuYtEr9SmvSwUIW7FBjgIgKo+vhkW3tqc+gc8fw9gza3xLoncA8a+MTaJYCaLGA9c=\n
              canonicalizedBody: eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiZHNzZSIsInNwZWMiOnsiZW52ZWxvcGVIYXNoIjp7ImFsZ29yaXRobSI6InNoYTI1NiIsInZhbHVlIjoiM2I1YzkwNDk5MGFiYzE4NjI1ZWE3Njg4MzE1OGEwZmI4MTEwMjM4MGJkNjQwZjI5OWJlMzYwZWVkOTMxNjYwYiJ9LCJwYXlsb2FkSGFzaCI6eyJhbGdvcml0aG0iOiJzaGEyNTYiLCJ2YWx1ZSI6IjM4ZGNlZDJjMzE1MGU2OTQxMDViYjZiNDNjYjY3NzBiZTYzZDdhNGM4NjNiMTc2YTkwMmU1MGQ5ZTAyN2ZiMjMifSwic2lnbmF0dXJlcyI6W3sic2lnbmF0dXJlIjoiTUVRQ0lFR0lHQW03Z1pWTExwc3JQY2puZEVqaXVjdEUyL2M5K2o5S0d2YXp6M3JsQWlBZDZPMTZUNWhrelJNM0liUlB6bSt4VDQwbU5RWnhlZmQ3bGFEUDZ4MlhMUT09IiwidmVyaWZpZXIiOiJMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VkcVZFTkRRbWhUWjBGM1NVSkJaMGxWVjFsNGNVdHpjazFUTTFOMmJEVkphalZQUkdaQ1owMUtUeTlKZDBObldVbExiMXBKZW1vd1JVRjNUWGNLVG5wRlZrMUNUVWRCTVZWRlEyaE5UV015Ykc1ak0xSjJZMjFWZFZwSFZqSk5ValIzU0VGWlJGWlJVVVJGZUZaNllWZGtlbVJIT1hsYVV6RndZbTVTYkFwamJURnNXa2RzYUdSSFZYZElhR05PVFdwUmQwNVVTVFZOVkZsM1QxUlZlVmRvWTA1TmFsRjNUbFJKTlUxVVdYaFBWRlY1VjJwQlFVMUdhM2RGZDFsSUNrdHZXa2w2YWpCRFFWRlpTVXR2V2tsNmFqQkVRVkZqUkZGblFVVmtiV2RvVGs1M00yNVZMMHQxWlZGbmMzQkhTRmMzWjJnNVdFeEVMMWRrU1RoWlRVSUtLekJ3TUZZMGJ6RnJTRzgyWTAweGMwUktaM0pEWjFCUlZYcDRjSFZaZFc4cmVIZFFTSGxzTDJ0RWVXWXpSVXhxYTJGUFEwSlVUWGRuWjFWMlRVRTBSd3BCTVZWa1JIZEZRaTkzVVVWQmQwbElaMFJCVkVKblRsWklVMVZGUkVSQlMwSm5aM0pDWjBWR1FsRmpSRUY2UVdSQ1owNVdTRkUwUlVablVWVnhaa05RQ25aWVMwRjJVelJEWkdoUk1taGlXbGRLVTA5RmRsWnZkMGgzV1VSV1VqQnFRa0puZDBadlFWVXpPVkJ3ZWpGWmEwVmFZalZ4VG1wd1MwWlhhWGhwTkZrS1drUTRkMWRuV1VSV1VqQlNRVkZJTDBKR1FYZFViMXBOWVVoU01HTklUVFpNZVRsdVlWaFNiMlJYU1hWWk1qbDBUREpPYzJGVE9XcGlSMnQyVEcxa2NBcGtSMmd4V1drNU0ySXpTbkphYlhoMlpETk5kbHBIVm5kaVJ6azFZbGRXZFdSRE5UVmlWM2hCWTIxV2JXTjVPVzlhVjBaclkzazVNR051Vm5WaGVrRTFDa0puYjNKQ1owVkZRVmxQTDAxQlJVSkNRM1J2WkVoU2QyTjZiM1pNTTFKMllUSldkVXh0Um1wa1IyeDJZbTVOZFZveWJEQmhTRlpwWkZoT2JHTnRUbllLWW01U2JHSnVVWFZaTWpsMFRVSTRSME5wYzBkQlVWRkNaemM0ZDBGUlNVVkZXR1IyWTIxMGJXSkhPVE5ZTWxKd1l6TkNhR1JIVG05TlJGbEhRMmx6UndwQlVWRkNaemM0ZDBGUlRVVkxSMXBvV2xkWmVWcEhVbXRQUkVacFRVUmplazVxWXpCUFJGRjRUVEpGTTFsNldUQk9iVTVyVFVkS2JWbDZTVEpaZWtGM0NsbFVRWGRIUVZsTFMzZFpRa0pCUjBSMmVrRkNRa0ZSUzFKSFZuZGlSemsxWWxkV2RXUkVRVlpDWjI5eVFtZEZSVUZaVHk5TlFVVkdRa0ZrYW1KSGEzWUtXVEo0Y0UxQ05FZERhWE5IUVZGUlFtYzNPSGRCVVZsRlJVaEtiRnB1VFhaaFIxWm9Xa2hOZG1SSVNqRmliWE4zVDNkWlMwdDNXVUpDUVVkRWRucEJRZ3BEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVk1iVVpxWkVkc2RtSnVUWFZhTW13d1lVaFdhV1JZVG14amJVNTJZbTVTYkdKdVVYVlpNamwwQ2sxR2QwZERhWE5IUVZGUlFtYzNPSGRCVVd0RlZHZDRUV0ZJVWpCalNFMDJUSGs1Ym1GWVVtOWtWMGwxV1RJNWRFd3lUbk5oVXpscVlrZHJka3h0WkhBS1pFZG9NVmxwT1ROaU0wcHlXbTE0ZG1RelRYWmFSMVozWWtjNU5XSlhWblZrUXpVMVlsZDRRV050Vm0xamVUbHZXbGRHYTJONU9UQmpibFoxWVhwQk5BcENaMjl5UW1kRlJVRlpUeTlOUVVWTFFrTnZUVXRIV21oYVYxbDVXa2RTYTA5RVJtbE5SR042VG1wak1FOUVVWGhOTWtVeldYcFpNRTV0VG10TlIwcHRDbGw2U1RKWmVrRjNXVlJCZDBoUldVdExkMWxDUWtGSFJIWjZRVUpEZDFGUVJFRXhibUZZVW05a1YwbDBZVWM1ZW1SSFZtdE5RMjlIUTJselIwRlJVVUlLWnpjNGQwRlJkMFZJUVhkaFlVaFNNR05JVFRaTWVUbHVZVmhTYjJSWFNYVlpNamwwVERKT2MyRlRPV3BpUjJ0M1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWdwRVVWRnhSRU5vYlZsWFZtMU5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBGSENrTnBjMGRCVVZGQ1p6YzRkMEZSTkVWRlozZFJZMjFXYldONU9XOWFWMFpyWTNrNU1HTnVWblZoZWtGYVFtZHZja0puUlVWQldVOHZUVUZGVUVKQmMwMEtRMVJKZUUxcVdYaE5la0V3VDFSQmJVSm5iM0pDWjBWRlFWbFBMMDFCUlZGQ1FtZE5SbTFvTUdSSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhZ3BpUjJ0M1IwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWUlVVdEVRV2N4VDFSamQwNUVZM2hOVkVKalFtZHZja0puUlVWQldVOHZUVUZGVTBKRk5FMVVSMmd3Q21SSVFucFBhVGgyV2pKc01HRklWbWxNYlU1MllsTTVhbUpIYTNaWk1uaHdUSGsxYm1GWVVtOWtWMGwyWkRJNWVXRXlXbk5pTTJSNlRESlNiR05IZUhZS1pWY3hiR0p1VVhWbFZ6RnpVVWhLYkZwdVRYWmhSMVpvV2toTmRtUklTakZpYlhOM1QwRlpTMHQzV1VKQ1FVZEVkbnBCUWtWM1VYRkVRMmh0V1ZkV2JRcE5iVkpyV2tSbmVGbHFRVE5OZWxrelRrUm5NRTFVVG1oT01rMHlUa1JhYWxwRVFtbGFiVTE1VG0xTmQwMUhSWGROUTBWSFEybHpSMEZSVVVKbk56aDNDa0ZTVVVWRmQzZFNaREk1ZVdFeVduTmlNMlJtV2tkc2VtTkhSakJaTW1kM1ZGRlpTMHQzV1VKQ1FVZEVkbnBCUWtaUlVTOUVSREZ2WkVoU2QyTjZiM1lLVERKa2NHUkhhREZaYVRWcVlqSXdkbGt5ZUhCTU1rNXpZVk01YUZrelVuQmlNalY2VEROS01XSnVUWFpQVkVrMFQxUkJNMDVVWXpGTmFUbG9aRWhTYkFwaVdFSXdZM2s0ZUUxQ1dVZERhWE5IUVZGUlFtYzNPSGRCVWxsRlEwRjNSMk5JVm1saVIyeHFUVWxIVEVKbmIzSkNaMFZGUVdSYU5VRm5VVU5DU0RCRkNtVjNRalZCU0dOQk0xUXdkMkZ6WWtoRlZFcHFSMUkwWTIxWFl6TkJjVXBMV0hKcVpWQkxNeTlvTkhCNVowTTRjRGR2TkVGQlFVZFFlRkl4ZW1KblFVRUtRa0ZOUVZORVFrZEJhVVZCS3pobmJGRkplRTlCYUZoQ1FVOVRObE1yT0ZweGQwcGpaSGQzVTNJdlZGZHBhSE16WkV4eFZrRjJiME5KVVVSaWVUbG9NUXBKWTNWRVJYSXJlbk5YYVV3NFVIYzFRMU5VZEd0c2RFbzBNakZ6UlRneFZuWjFOa0Z3VkVGTFFtZG5jV2hyYWs5UVVWRkVRWGRPYmtGRVFtdEJha0VyQ2tSSU4xQXJhR2cwVmtoWFprTlhXSFJ5UzFSdlFrdDFZa0pyUzNCbVYwTlpVWGhxV0UweWRsWXZibEJ4WWxwR1dVOVdXazlpWlRaQlRuSm5lV1J2V1VNS1RVWlZUV0l6ZUhwelJrNVJXWFp6UlZsUGFUSkxibkoyUmpCMFoyOXdiVmhIVm05NmJsb3JjUzh5UVVsRVZ6bEdNVVUzV1RaWk1EWXhaVzkxUVZsa1NBcFhkejA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLIn1dfX0=
            timestampVerificationData: {}
            certificate:
              rawBytes: MIIGjTCCBhSgAwIBAgIUWYxqKsrMS3Svl5Ij5ODfBgMJO/IwCgYIKoZIzj0EAwMwNzEVMBMGA1UEChMMc2lnc3RvcmUuZGV2MR4wHAYDVQQDExVzaWdzdG9yZS1pbnRlcm1lZGlhdGUwHhcNMjQwNTI5MTYwOTUyWhcNMjQwNTI5MTYxOTUyWjAAMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEdmghNNw3nU/KueQgspGHW7gh9XLD/WdI8YMB+0p0V4o1kHo6cM1sDJgrCgPQUzxpuYuo+xwPHyl/kDyf3ELjkaOCBTMwggUvMA4GA1UdDwEB/wQEAwIHgDATBgNVHSUEDDAKBggrBgEFBQcDAzAdBgNVHQ4EFgQUqfCPvXKAvS4CdhQ2hbZWJSOEvVowHwYDVR0jBBgwFoAU39Ppz1YkEZb5qNjpKFWixi4YZD8wWgYDVR0RAQH/BFAwToZMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA5BgorBgEEAYO/MAEBBCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMB8GCisGAQQBg78wAQIEEXdvcmtmbG93X2Rpc3BhdGNoMDYGCisGAQQBg78wAQMEKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwGAYKKwYBBAGDvzABBAQKRGVwbG95bWVudDAVBgorBgEEAYO/MAEFBAdjbGkvY2xpMB4GCisGAQQBg78wAQYEEHJlZnMvaGVhZHMvdHJ1bmswOwYKKwYBBAGDvzABCAQtDCtodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tMFwGCisGAQQBg78wAQkETgxMaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWxAcmVmcy9oZWFkcy90cnVuazA4BgorBgEEAYO/MAEKBCoMKGZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAwHQYKKwYBBAGDvzABCwQPDA1naXRodWItaG9zdGVkMCoGCisGAQQBg78wAQwEHAwaaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkwOAYKKwYBBAGDvzABDQQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCAGCisGAQQBg78wAQ4EEgwQcmVmcy9oZWFkcy90cnVuazAZBgorBgEEAYO/MAEPBAsMCTIxMjYxMzA0OTAmBgorBgEEAYO/MAEQBBgMFmh0dHBzOi8vZ2l0aHViLmNvbS9jbGkwGAYKKwYBBAGDvzABEQQKDAg1OTcwNDcxMTBcBgorBgEEAYO/MAESBE4MTGh0dHBzOi8vZ2l0aHViLmNvbS9jbGkvY2xpLy5naXRodWIvd29ya2Zsb3dzL2RlcGxveW1lbnQueW1sQHJlZnMvaGVhZHMvdHJ1bmswOAYKKwYBBAGDvzABEwQqDChmYWVmMmRkZDgxYjA3MzY3NDg0MTNhN2M2NDZjZDBiZmMyNmMwMGEwMCEGCisGAQQBg78wARQEEwwRd29ya2Zsb3dfZGlzcGF0Y2gwTQYKKwYBBAGDvzABFQQ/DD1odHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaS9hY3Rpb25zL3J1bnMvOTI4OTA3NTc1Mi9hdHRlbXB0cy8xMBYGCisGAQQBg78wARYECAwGcHVibGljMIGLBgorBgEEAdZ5AgQCBH0EewB5AHcA3T0wasbHETJjGR4cmWc3AqJKXrjePK3/h4pygC8p7o4AAAGPxR1zbgAABAMASDBGAiEA+8glQIxOAhXBAOS6S+8ZqwJcdwwSr/TWihs3dLqVAvoCIQDby9h1IcuDEr+zsWiL8Pw5CSTtkltJ421sE81Vvu6ApTAKBggqhkjOPQQDAwNnADBkAjA+DH7P+hh4VHWfCWXtrKToBKubBkKpfWCYQxjXM2vV/nPqbZFYOVZObe6ANrgydoYCMFUMb3xzsFNQYvsEYOi2KnrvF0tgopmXGVoznZ+q/2AIDW9F1E7Y6Y061eouAYdHWw==
          dsseEnvelope:
            payload: eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hfMi41MC4wX3dpbmRvd3NfYXJtNjQuemlwIiwiZGlnZXN0Ijp7InNoYTI1NiI6IjhhYWQxMjBiNDE2Mzg2YjQyNjllZjYyYzhmZGViY2FkMzFhNzA4NDcyOTc4MTdhMTQ5ZGFmOTI3ZWRjODU1NDgifX1dLCJwcmVkaWNhdGVUeXBlIjoiaHR0cHM6Ly9zbHNhLmRldi9wcm92ZW5hbmNlL3YxIiwicHJlZGljYXRlIjp7ImJ1aWxkRGVmaW5pdGlvbiI6eyJidWlsZFR5cGUiOiJodHRwczovL3Nsc2EtZnJhbWV3b3JrLmdpdGh1Yi5pby9naXRodWItYWN0aW9ucy1idWlsZHR5cGVzL3dvcmtmbG93L3YxIiwiZXh0ZXJuYWxQYXJhbWV0ZXJzIjp7IndvcmtmbG93Ijp7InJlZiI6InJlZnMvaGVhZHMvdHJ1bmsiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkiLCJwYXRoIjoiLmdpdGh1Yi93b3JrZmxvd3MvZGVwbG95bWVudC55bWwifX0sImludGVybmFsUGFyYW1ldGVycyI6eyJnaXRodWIiOnsiZXZlbnRfbmFtZSI6IndvcmtmbG93X2Rpc3BhdGNoIiwicmVwb3NpdG9yeV9pZCI6IjIxMjYxMzA0OSIsInJlcG9zaXRvcnlfb3duZXJfaWQiOiI1OTcwNDcxMSJ9fSwicmVzb2x2ZWREZXBlbmRlbmNpZXMiOlt7InVyaSI6ImdpdCtodHRwczovL2dpdGh1Yi5jb20vY2xpL2NsaUByZWZzL2hlYWRzL3RydW5rIiwiZGlnZXN0Ijp7ImdpdENvbW1pdCI6ImZhZWYyZGRkODFiMDczNjc0ODQxM2E3YzY0NmNkMGJmYzI2YzAwYTAifX1dfSwicnVuRGV0YWlscyI6eyJidWlsZGVyIjp7ImlkIjoiaHR0cHM6Ly9naXRodWIuY29tL2FjdGlvbnMvcnVubmVyL2dpdGh1Yi1ob3N0ZWQifSwibWV0YWRhdGEiOnsiaW52b2NhdGlvbklkIjoiaHR0cHM6Ly9naXRodWIuY29tL2NsaS9jbGkvYWN0aW9ucy9ydW5zLzkyODkwNzU3NTIvYXR0ZW1wdHMvMSJ9fX19
            payloadType: application/vnd.in-toto+json
            signatures:
            - sig: MEQCIEGIGAm7gZVLLpsrPcjndEjiuctE2/c9+j9KGvazz3rlAiAd6O16T5hkzRM3IbRPzm+xT40mNQZxefd7laDP6x2XLQ==
    autolink-items:
      value:
      - id: 1
        key_prefix: TICKET-
        url_template: https://example.com/TICKET?query=<num>
        is_alphanumeric: true
    autolink:
      value:
        id: 1
        key_prefix: TICKET-
        url_template: https://example.com/TICKET?query=<num>
        is_alphanumeric: true
    short-branch-with-protection-items:
      value:
      - name: master
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: true
        protection:
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    branch-get:
      value:
        name: main
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0MTI5NjI2OTo3ZmQxYTYwYjAxZjkxYjMxNGY1OTk1NWE0ZTRkNGU4MGQ4ZWRmMTFk
          commit:
            author:
              name: The Octocat
              email: octocat@nowhere.com
              date: '2012-03-06T23:06:50Z'
            committer:
              name: The Octocat
              email: octocat@nowhere.com
              date: '2012-03-06T23:06:50Z'
            message: 'Merge pull request #6 from Spaceghost/patch-1


              New line at end of file.'
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            comment_count: 77
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
              verified_at: null
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          html_url: https://github.com/octocat/Hello-World/commit/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d/comments
          author:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=4
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            html_url: https://github.com/octocat/Hello-World/commit/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
          - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
            url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
            html_url: https://github.com/octocat/Hello-World/commit/762941318ee16e59dabbacb1b4049eec22f0d303
        _links:
          self: https://api.github.com/repos/octocat/Hello-World/branches/main
          html: https://github.com/octocat/Hello-World/tree/main
        protected: false
        protection:
          enabled: false
          required_status_checks:
            enforcement_level: 'off'
            contexts: []
            checks: []
        protection_url: https://api.github.com/repos/octocat/Hello-World/branches/main/protection
    branch-protection:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection
        required_status_checks:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
          contexts:
          - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
          enforcement_level: non_admins
        enforce_admins:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
          enabled: true
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
            users:
            - login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            teams:
            - id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              notification_setting: notifications_enabled
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: null
            apps:
            - id: 1
              slug: octoapp
              node_id: MDExOkludGVncmF0aW9uMQ==
              owner:
                login: github
                id: 1
                node_id: MDEyOk9yZ2FuaXphdGlvbjE=
                url: https://api.github.com/orgs/github
                repos_url: https://api.github.com/orgs/github/repos
                events_url: https://api.github.com/orgs/github/events
                hooks_url: https://api.github.com/orgs/github/hooks
                issues_url: https://api.github.com/orgs/github/issues
                members_url: https://api.github.com/orgs/github/members{/member}
                public_members_url: https://api.github.com/orgs/github/public_members{/member}
                avatar_url: https://github.com/images/error/octocat_happy.gif
                description: A great organization
              name: Octocat App
              description: ''
              external_url: https://example.com
              html_url: https://github.com/apps/octoapp
              created_at: '2017-07-08T16:18:44-04:00'
              updated_at: '2017-07-08T16:18:44-04:00'
              permissions:
                metadata: read
                contents: read
                issues: write
                single_file: write
              events:
              - push
              - pull_request
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
          require_last_push_approval: true
        restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/apps
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
            parent: null
          apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
        required_conversation_resolution:
          enabled: true
        lock_branch:
          enabled: true
        allow_fork_syncing:
          enabled: true
    branch-protection-update:
      value:
        url: https://api.github.com/repos/octocat/hello-world/branches/main/protection
        required_status_checks:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_status_checks
          strict: true
          contexts:
          - continuous-integration/travis-ci
          contexts_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_status_checks/contexts
          checks:
          - context: continuous-integration/travis-ci
            app_id: null
        restrictions:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions
          users_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/users
          teams_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/teams
          apps_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/restrictions/apps
          users: []
          teams: []
          apps: []
        required_pull_request_reviews:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_pull_request_reviews
          dismiss_stale_reviews: true
          require_code_owner_reviews: true
          required_approving_review_count: 2
          require_last_push_approval: true
          dismissal_restrictions:
            url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions
            users_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions/users
            teams_url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/dismissal_restrictions/teams
            users: []
            teams: []
            apps: []
        required_signatures:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/required_signatures
          enabled: false
        enforce_admins:
          url: https://api.github.com/repos/octocat/hello-world/branches/main/protection/enforce_admins
          enabled: true
        required_linear_history:
          enabled: true
        allow_force_pushes:
          enabled: true
        allow_deletions:
          enabled: true
        block_creations:
          enabled: true
        required_conversation_resolution:
          enabled: true
        lock_branch:
          enabled: true
        allow_fork_syncing:
          enabled: true
    protected-branch-admin-enforced-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins
        enabled: true
    protected-branch-pull-request-review:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews
        dismissal_restrictions:
          url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions
          users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users
          teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams
          users:
          - login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          teams:
          - id: 1
            node_id: MDQ6VGVhbTE=
            url: https://api.github.com/teams/1
            html_url: https://github.com/orgs/github/teams/justice-league
            name: Justice League
            slug: justice-league
            description: A great team.
            privacy: closed
            notification_setting: notifications_enabled
            permission: admin
            members_url: https://api.github.com/teams/1/members{/member}
            repositories_url: https://api.github.com/teams/1/repos
            parent: null
          apps:
          - id: 1
            slug: octoapp
            node_id: MDExOkludGVncmF0aW9uMQ==
            owner:
              login: github
              id: 1
              node_id: MDEyOk9yZ2FuaXphdGlvbjE=
              url: https://api.github.com/orgs/github
              repos_url: https://api.github.com/orgs/github/repos
              events_url: https://api.github.com/orgs/github/events
              hooks_url: https://api.github.com/orgs/github/hooks
              issues_url: https://api.github.com/orgs/github/issues
              members_url: https://api.github.com/orgs/github/members{/member}
              public_members_url: https://api.github.com/orgs/github/public_members{/member}
              avatar_url: https://github.com/images/error/octocat_happy.gif
              description: A great organization
            name: Octocat App
            description: ''
            external_url: https://example.com
            html_url: https://github.com/apps/octoapp
            created_at: '2017-07-08T16:18:44-04:00'
            updated_at: '2017-07-08T16:18:44-04:00'
            permissions:
              metadata: read
              contents: read
              issues: write
              single_file: write
            events:
            - push
            - pull_request
        dismiss_stale_reviews: true
        require_code_owner_reviews: true
        required_approving_review_count: 2
        require_last_push_approval: true
    protected-branch-admin-enforced:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures
        enabled: true
    status-check-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks
        strict: true
        contexts:
        - continuous-integration/travis-ci
        contexts_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts
    branch-restriction-policy:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions
        users_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users
        teams_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams
        apps_url: https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/apps
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
        apps:
        - id: 1
          slug: octoapp
          node_id: MDExOkludGVncmF0aW9uMQ==
          owner:
            login: github
            id: 1
            node_id: MDEyOk9yZ2FuaXphdGlvbjE=
            url: https://api.github.com/orgs/github
            repos_url: https://api.github.com/orgs/github/repos
            events_url: https://api.github.com/orgs/github/events
            hooks_url: https://api.github.com/orgs/github/hooks
            issues_url: https://api.github.com/orgs/github/issues
            members_url: https://api.github.com/orgs/github/members{/member}
            public_members_url: https://api.github.com/orgs/github/public_members{/member}
            avatar_url: https://github.com/images/error/octocat_happy.gif
            description: A great organization
          name: Octocat App
          description: ''
          external_url: https://example.com
          html_url: https://github.com/apps/octoapp
          created_at: '2017-07-08T16:18:44-04:00'
          updated_at: '2017-07-08T16:18:44-04:00'
          permissions:
            metadata: read
            contents: read
            issues: write
            single_file: write
          events:
          - push
          - pull_request
    integration-items:
      value:
      - id: 1
        slug: octoapp
        node_id: MDExOkludGVncmF0aW9uMQ==
        owner:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        name: Octocat App
        description: ''
        external_url: https://example.com
        html_url: https://github.com/apps/octoapp
        created_at: '2017-07-08T16:18:44-04:00'
        updated_at: '2017-07-08T16:18:44-04:00'
        permissions:
          metadata: read
          contents: read
          issues: write
          single_file: write
        events:
        - push
        - pull_request
    branch-with-protection:
      value:
        name: master
        commit:
          sha: 7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          node_id: MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==
          commit:
            author:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
            message: 'Merge pull request #6 from Spaceghost/patch-1


              New line at end of file.'
            tree:
              sha: b4eecafa9be2f2006ce1b709d6857b07069b4608
              url: https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608
            committer:
              name: The Octocat
              date: '2012-03-06T15:06:50-08:00'
              email: octocat@nowhere.com
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
              verified_at: null
            comment_count: 0
          author:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          parents:
          - sha: 553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
            url: https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e
          - sha: 762941318ee16e59dabbacb1b4049eec22f0d303
            url: https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303
          url: https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d
          committer:
            gravatar_id: ''
            avatar_url: https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png
            url: https://api.github.com/users/octocat
            id: 583231
            login: octocat
            node_id: MDQ6VXNlcjE=
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: true
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        _links:
          html: https://github.com/octocat/Hello-World/tree/master
          self: https://api.github.com/repos/octocat/Hello-World/branches/master
        protected: true
        protection:
          required_status_checks:
            enforcement_level: non_admins
            contexts:
            - ci-test
            - linter
        protection_url: https://api.github.com/repos/octocat/hello-world/branches/master/protection
    codeowners-errors:
      value:
        errors:
        - line: 3
          column: 1
          kind: Invalid pattern
          source: '***/*.rb @monalisa'
          suggestion: Did you mean `**/*.rb`?
          message: "Invalid pattern on line 3: Did you mean `**/*.rb`?\n\n  ***/*.rb @monalisa\n  ^"
          path: .github/CODEOWNERS
        - line: 7
          column: 7
          kind: Invalid owner
          source: '*.txt docs@'
          suggestion: null
          message: "Invalid owner on line 7:\n\n  *.txt docs@\n        ^"
          path: .github/CODEOWNERS
    collaborator-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        permissions:
          pull: true
          triage: true
          push: true
          maintain: false
          admin: false
        role_name: write
    repository-invitation-response-when-a-new-invitation-is-created:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    repository-collaborator-permission-response-if-user-has-admin-permissions:
      value:
        permission: admin
        role_name: admin
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    commit-comment-items:
      value:
      - html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        author_association: COLLABORATOR
    commit-comment:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Great stuff
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-comment-2:
      value:
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1
        url: https://api.github.com/repos/octocat/Hello-World/comments/1
        id: 1
        node_id: MDEzOkNvbW1pdENvbW1lbnQx
        body: Nice change
        path: file1.txt
        position: 4
        line: 14
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: COLLABORATOR
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
    commit-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
    branch-short-items:
      value:
      - name: branch_5
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        protected: false
    pull-request-simple-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          notification_setting: notifications_enabled
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        auto_merge: null
        draft: false
    commit:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: mona@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        stats:
          additions: 104
          deletions: 4
          total: 108
        files:
        - filename: file1.txt
          additions: 10
          deletions: 2
          changes: 12
          status: modified
          raw_url: https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          blob_url: https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt
          patch: '@@ -29,7 +29,7 @@

            .....'
    combined-commit-status:
      value:
        state: success
        statuses:
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/hubot_happy.gif
          id: 1
          node_id: MDY6U3RhdHVzMQ==
          state: success
          description: Build has completed successfully
          target_url: https://ci.example.com/1000/output
          context: continuous-integration/jenkins
          created_at: '2012-07-20T01:19:13Z'
          updated_at: '2012-07-20T01:19:13Z'
        - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
          avatar_url: https://github.com/images/error/other_user_happy.gif
          id: 2
          node_id: MDY6U3RhdHVzMg==
          state: success
          description: Testing has completed successfully
          target_url: https://ci.example.com/2000/output
          context: security/brakeman
          created_at: '2012-08-20T01:19:13Z'
          updated_at: '2012-08-20T01:19:13Z'
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        total_count: 2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        commit_url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e
        url: https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status
    status-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    community-profile:
      value:
        health_percentage: 100
        description: My first repository on GitHub!
        documentation: null
        files:
          code_of_conduct:
            name: Contributor Covenant
            key: contributor_covenant
            url: https://api.github.com/codes_of_conduct/contributor_covenant
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          code_of_conduct_file:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CODE_OF_CONDUCT.md
            html_url: https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md
          contributing:
            url: https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING
            html_url: https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING
          issue_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE
          pull_request_template:
            url: https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE
            html_url: https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE
          license:
            name: MIT License
            key: mit
            spdx_id: MIT
            url: https://api.github.com/licenses/mit
            html_url: https://github.com/octocat/Hello-World/blob/master/LICENSE
            node_id: MDc6TGljZW5zZW1pdA==
          readme:
            url: https://api.github.com/repos/octocat/Hello-World/contents/README.md
            html_url: https://github.com/octocat/Hello-World/blob/master/README.md
        updated_at: '2017-02-28T19:09:29Z'
        content_reports_enabled: true
    commit-comparison:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/compare/master...topic
        html_url: https://github.com/octocat/Hello-World/compare/master...topic
        permalink_url: https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17
        diff_url: https://github.com/octocat/Hello-World/compare/master...topic.diff
        patch_url: https://github.com/octocat/Hello-World/compare/master...topic.patch
        base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
              verified_at: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merge_base_commit:
          url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
              verified_at: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        status: behind
        ahead_by: 1
        behind_by: 2
        total_commits: 1
        commits:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
          html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
          comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
          commit:
            url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            committer:
              name: Monalisa Octocat
              email: mona@github.com
              date: '2011-04-14T16:00:49Z'
            message: Fix all the bugs
            tree:
              url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
              sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
            comment_count: 0
            verification:
              verified: false
              reason: unsigned
              signature: null
              payload: null
              verified_at: null
          author:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        files:
        - sha: bbcd538c8e72b8c175046e27cc8f907076331401
          filename: file1.txt
          status: added
          additions: 103
          deletions: 21
          changes: 124
          blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
          patch: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
    content-file-response-if-content-is-a-file:
      summary: Response if content is a file
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: IyBZb2dhIEJvmsgaW4gcHJvZ3Jlc3MhIEZlZWwgdAoKOndhcm5pbmc6IFdvc\nZnJlZSBmUgdG8gY0byBjaGVjayBvdXQgdGhlIGFwcCwgYnV0IGJlIHN1c29t\nZSBiYWNrIG9uY2UgaXQgaXMgY29tcGxldGUuCgpBIHdlYiBhcHAgdGhhdCBs\nZWFkcyB5b3UgdGhyb3VnaCBhIHlvZ2Egc2Vzc2lvbi4KCltXb3Jrb3V0IG5v\ndyFdKGh0dHBzOi8vc2tlZHdhcmRzODguZ2l0aHViLmlvL3lvZ2EvKQoKPGlt\nZyBzcmM9InNyYy9pbWFnZXMvbWFza2FibGVfaWNvbl81MTIucG5nIiBhbHQ9\nImJvdCBsaWZ0aW5nIHdlaWdodHMiIHdpZHRoPSIxMDAiLz4KCkRvIHlvdSBo\nYXZlIGZlZWRiYWNrIG9yIGlkZWFzIGZvciBpbXByb3ZlbWVudD8gW09wZW4g\nYW4gaXNzdWVdKGh0dHBzOi8vZ2l0aHViLmNvbS9za2Vkd2FyZHM4OC95b2dh\nL2lzc3Vlcy9uZXcpLgoKV2FudCBtb3JlIGdhbWVzPyBWaXNpdCBbQ25TIEdh\nbWVzXShodHRwczovL3NrZWR3YXJkczg4LmdpdGh1Yi5pby9wb3J0Zm9saW8v\nKS4KCiMjIERldmVsb3BtZW50CgpUbyBhZGQgYSBuZXcgcG9zZSwgYWRkIGFu\nIGVudHJ5IHRvIHRoZSByZWxldmFudCBmaWxlIGluIGBzcmMvYXNhbmFzYC4K\nClRvIGJ1aWxkLCBydW4gYG5wbSBydW4gYnVpbGRgLgoKVG8gcnVuIGxvY2Fs\nbHkgd2l0aCBsaXZlIHJlbG9hZGluZyBhbmQgbm8gc2VydmljZSB3b3JrZXIs\nIHJ1biBgbnBtIHJ1biBkZXZgLiAoSWYgYSBzZXJ2aWNlIHdvcmtlciB3YXMg\ncHJldmlvdXNseSByZWdpc3RlcmVkLCB5b3UgY2FuIHVucmVnaXN0ZXIgaXQg\naW4gY2hyb21lIGRldmVsb3BlciB0b29sczogYEFwcGxpY2F0aW9uYCA+IGBT\nZXJ2aWNlIHdvcmtlcnNgID4gYFVucmVnaXN0ZXJgLikKClRvIHJ1biBsb2Nh\nbGx5IGFuZCByZWdpc3RlciB0aGUgc2VydmljZSB3b3JrZXIsIHJ1biBgbnBt\nIHN0YXJ0YC4KClRvIGRlcGxveSwgcHVzaCB0byBgbWFpbmAgb3IgbWFudWFs\nbHkgdHJpZ2dlciB0aGUgYC5naXRodWIvd29ya2Zsb3dzL2RlcGxveS55bWxg\nIHdvcmtmbG93Lgo=\n
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    content-file-response-if-content-is-a-directory-object:
      summary: Response if content is a directory and the application/vnd.github.v3.object media type is requested
      value:
        type: dir
        size: 0
        name: src
        path: src
        sha: 2962be1c94eaae9794b3080790ec9d74b2fa8358
        url: https://api.github.com/repos/octocat/octorepo/contents/src?ref=main
        git_url: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        html_url: https://github.com/octocat/octorepo/blob/main/src
        download_url: https://raw.githubusercontent.com/octocat/octorepo/main/src
        _links:
          self: https://api.github.com/repos/octocat/octorepo/contents/src
          git: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html: https://github.com/octocat/octorepo/blob/main/src
        entries:
        - type: file
          size: 625
          name: app.js
          path: src/app.js
          sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          url: https://api.github.com/repos/octocat/octorepo/contents/src/app.js
          git_url: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html_url: https://github.com/octocat/octorepo/blob/main/src/app.js
          download_url: https://raw.githubusercontent.com/octocat/octorepo/main/src/app.js
          _links:
            self: https://api.github.com/repos/octocat/octorepo/contents/src/app.js
            git: https://api.github.com/repos/octocat/octorepo/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
            html: https://github.com/octocat/octorepo/blob/main/src/app.js
        - type: dir
          size: 0
          name: images
          path: src/images
          sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          url: https://api.github.com/repos/octocat/octorepo/contents/src/images
          git_url: https://api.github.com/repos/octocat/octorepo/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html_url: https://github.com/octocat/octorepo/tree/main/src/images
          download_url: null
          _links:
            self: https://api.github.com/repos/octocat/octorepo/contents/src/images
            git: https://api.github.com/repos/octocat/octorepo/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
            html: https://github.com/octocat/octorepo/tree/main/src/images
    content-file-response-if-content-is-a-directory:
      summary: Response if content is a directory and the application/json media type is requested
      value:
      - type: file
        size: 625
        name: octokit.rb
        path: lib/octokit.rb
        sha: fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
        html_url: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/lib/octokit.rb
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit.rb
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/fff6fe3a23bf1c8ea0692b4a883af99bee26fd3b
          html: https://github.com/octokit/octokit.rb/blob/master/lib/octokit.rb
      - type: dir
        size: 0
        name: octokit
        path: lib/octokit
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        url: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        html_url: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
        download_url: null
        _links:
          self: https://api.github.com/repos/octokit/octokit.rb/contents/lib/octokit
          git: https://api.github.com/repos/octokit/octokit.rb/git/trees/a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
          html: https://github.com/octokit/octokit.rb/tree/master/lib/octokit
    content-file-response-if-content-is-a-symlink:
      summary: Response if content is a symlink and the application/json media type is requested
      value:
        type: symlink
        target: /path/to/symlink/target
        size: 23
        name: some-symlink
        path: bin/some-symlink
        sha: 452a98979c88e093d682cab404a3ec82babebb48
        url: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
        html_url: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/bin/some-symlink
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/452a98979c88e093d682cab404a3ec82babebb48
          self: https://api.github.com/repos/octokit/octokit.rb/contents/bin/some-symlink
          html: https://github.com/octokit/octokit.rb/blob/master/bin/some-symlink
    content-file-response-if-content-is-a-submodule:
      summary: Response if content is a submodule and the application/json media type is requested
      value:
        type: submodule
        submodule_git_url: git://github.com/jquery/qunit.git
        size: 0
        name: qunit
        path: test/qunit
        sha: 6ca3721222109997540bd6d9ccd396902e0ad2f9
        url: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
        git_url: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
        html_url: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
        download_url: null
        _links:
          git: https://api.github.com/repos/jquery/qunit/git/trees/6ca3721222109997540bd6d9ccd396902e0ad2f9
          self: https://api.github.com/repos/jquery/jquery/contents/test/qunit?ref=master
          html: https://github.com/jquery/qunit/tree/6ca3721222109997540bd6d9ccd396902e0ad2f9
    file-commit-example-for-updating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: a56507ed892d05a37c6d6128c260937ea4d287bd
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          node_id: MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          html_url: https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
            sha: 9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6
            html_url: https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6
            sha: da5a433788da5c255edad7979b328b67d79f53f6
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
    file-commit-example-for-creating-a-file:
      value:
        content:
          name: hello.txt
          path: notes/hello.txt
          sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          size: 9
          url: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
          html_url: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
          git_url: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
          download_url: https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt
          type: file
          _links:
            self: https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt
            git: https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3
            html: https://github.com/octocat/Hello-World/blob/master/notes/hello.txt
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
    file-commit:
      value:
        content: null
        commit:
          sha: 7638417db6d59f3c431d3e1f261cc637155684cd
          node_id: MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd
          html_url: https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd
          author:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          committer:
            date: '2014-11-07T22:01:45Z'
            name: Monalisa Octocat
            email: octocat@github.com
          message: my commit message
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb
            sha: 691272480426f78a0138979dd3ce63b77f706feb
          parents:
          - url: https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5
            html_url: https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5
            sha: 1acc419d4d6a9ce985db7be48c6349a0475975b5
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
    contributor-items-response-if-repository-contains-content:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
        contributions: 32
    deployment-simple-example:
      summary: Simple example
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/1
        id: 1
        node_id: MDEwOkRlcGxveW1lbnQx
        sha: a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d
        ref: topic-branch
        task: deploy
        payload: {}
        original_environment: staging
        environment: production
        description: Deploy request from hubot
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        statuses_url: https://api.github.com/repos/octocat/example/deployments/1/statuses
        repository_url: https://api.github.com/repos/octocat/example
        transient_environment: false
        production_environment: true
    deployment-status-items:
      value:
      - url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    deployment-status:
      value:
        url: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
        id: 1
        node_id: MDE2OkRlcGxveW1lbnRTdGF0dXMx
        state: success
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        description: Deployment finished successfully.
        environment: production
        target_url: https://example.com/deployment/42/output
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        deployment_url: https://api.github.com/repos/octocat/example/deployments/42
        repository_url: https://api.github.com/repos/octocat/example
        environment_url: https://test-branch.lab.acme.com
        log_url: https://example.com/deployment/42/output
    environments:
      value:
        total_count: 1
        environments:
        - id: 161088068
          node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
          name: staging
          url: https://api.github.com/repos/github/hello-world/environments/staging
          html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
          created_at: '2020-11-23T22:00:40Z'
          updated_at: '2020-11-23T22:00:40Z'
          protection_rules:
          - id: 3736
            node_id: MDQ6R2F0ZTM3MzY=
            type: wait_timer
            wait_timer: 30
          - id: 3755
            node_id: MDQ6R2F0ZTM3NTU=
            prevent_self_review: false
            type: required_reviewers
            reviewers:
            - type: User
              reviewer:
                login: octocat
                id: 1
                node_id: MDQ6VXNlcjE=
                avatar_url: https://github.com/images/error/octocat_happy.gif
                gravatar_id: ''
                url: https://api.github.com/users/octocat
                html_url: https://github.com/octocat
                followers_url: https://api.github.com/users/octocat/followers
                following_url: https://api.github.com/users/octocat/following{/other_user}
                gists_url: https://api.github.com/users/octocat/gists{/gist_id}
                starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
                subscriptions_url: https://api.github.com/users/octocat/subscriptions
                organizations_url: https://api.github.com/users/octocat/orgs
                repos_url: https://api.github.com/users/octocat/repos
                events_url: https://api.github.com/users/octocat/events{/privacy}
                received_events_url: https://api.github.com/users/octocat/received_events
                type: User
                site_admin: false
            - type: Team
              reviewer:
                id: 1
                node_id: MDQ6VGVhbTE=
                url: https://api.github.com/teams/1
                html_url: https://github.com/orgs/github/teams/justice-league
                name: Justice League
                slug: justice-league
                description: A great team.
                privacy: closed
                notification_setting: notifications_enabled
                permission: admin
                members_url: https://api.github.com/teams/1/members{/member}
                repositories_url: https://api.github.com/teams/1/repos
                parent: null
          - id: 3756
            node_id: MDQ6R2F0ZTM3NTY=
            type: branch_policy
          deployment_branch_policy:
            protected_branches: false
            custom_branch_policies: true
    environment:
      value:
        id: 161088068
        node_id: MDExOkVudmlyb25tZW50MTYxMDg4MDY4
        name: staging
        url: https://api.github.com/repos/github/hello-world/environments/staging
        html_url: https://github.com/github/hello-world/deployments/activity_log?environments_filter=staging
        created_at: '2020-11-23T22:00:40Z'
        updated_at: '2020-11-23T22:00:40Z'
        protection_rules:
        - id: 3736
          node_id: MDQ6R2F0ZTM3MzY=
          type: wait_timer
          wait_timer: 30
        - id: 3755
          node_id: MDQ6R2F0ZTM3NTU=
          prevent_self_review: false
          type: required_reviewers
          reviewers:
          - type: User
            reviewer:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
          - type: Team
            reviewer:
              id: 1
              node_id: MDQ6VGVhbTE=
              url: https://api.github.com/teams/1
              html_url: https://github.com/orgs/github/teams/justice-league
              name: Justice League
              slug: justice-league
              description: A great team.
              privacy: closed
              notification_setting: notifications_enabled
              permission: admin
              members_url: https://api.github.com/teams/1/members{/member}
              repositories_url: https://api.github.com/teams/1/repos
              parent: null
        - id: 3756
          node_id: MDQ6R2F0ZTM3NTY=
          type: branch_policy
        deployment_branch_policy:
          protected_branches: false
          custom_branch_policies: true
    deployment-branch-policies-list:
      value:
        total_count: 2
        branch_policies:
        - id: 361471
          node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzE=
          name: release/*
        - id: 361472
          node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjE0NzI=
          name: main
    deployment-branch-policy-wildcard:
      value:
        id: 364662
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjI=
        name: release/*
    deployment-branch-policy-single-branch:
      value:
        id: 364663
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjM=
        name: main
    deployment-branch-policy-single-tag:
      value:
        id: 364663
        node_id: MDE2OkdhdGVCcmFuY2hQb2xpY3kzNjQ2NjM=
        name: v1
        type: tag
    deployment-protection-rules:
      value:
      - total_count: 2
      - custom_deployment_protection_rules:
        - id: 3
          node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
          enabled: true
          app:
            id: 1
            node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
            slug: a-custom-app
            integration_url: https://api.github.com/apps/a-custom-app
        - id: 4
          node_id: MDE2OkRlcGxveW1lbnRTdHJ41128
          enabled: true
          app:
            id: 1
            node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
            slug: another-custom-app
            integration_url: https://api.github.com/apps/another-custom-app
    deployment-protection-rule:
      value:
        id: 3
        node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
        enabled: true
        app:
          id: 1
          node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
          slug: a-custom-app
          integration_url: https://api.github.com/apps/a-custom-app
    custom-deployment-protection-rule-apps:
      value:
      - total_count: 2
      - available_custom_deployment_protection_rule_integrations:
        - id: 1
          node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
          slug: a-custom-app
          integration_url: https://api.github.com/apps/a-custom-app
        - id: 2
          node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
          slug: another-custom-app
          integration_url: https://api.github.com/apps/another-custom-app
    minimal-repository-items-2:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: true
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        delete_branch_on_merge: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          spdx_id: MIT
          url: https://api.github.com/licenses/mit
          node_id: MDc6TGljZW5zZW1pdA==
    hook-items:
      value:
      - type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        last_response:
          code: null
          status: unused
          message: null
    hook:
      value:
        type: Repository
        id: 12345678
        name: web
        active: true
        events:
        - push
        - pull_request
        config:
          content_type: json
          insecure_ssl: '0'
          url: https://example.com/webhook
        updated_at: '2019-06-03T00:57:16Z'
        created_at: '2019-06-03T00:57:16Z'
        url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
        test_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test
        ping_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings
        deliveries_url: https://api.github.com/repos/octocat/Hello-World/hooks/12345678/deliveries
        last_response:
          code: null
          status: unused
          message: null
    repository-invitation-items:
      value:
      - id: 1
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
        node_id: MDQ6VXNlcjE=
    repository-invitation:
      value:
        id: 1
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
        invitee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        inviter:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        permissions: write
        created_at: '2016-06-13T14:52:50-05:00'
        expired: false
        url: https://api.github.com/user/repository_invitations/1296269
        html_url: https://github.com/octocat/Hello-World/invitations
    deploy-key-items:
      value:
      - id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
        added_by: octocat
        last_used: '2022-01-10T15:53:42Z'
        enabled: true
    deploy-key:
      value:
        id: 1
        key: ssh-rsa AAA...
        url: https://api.github.com/repos/octocat/Hello-World/keys/1
        title: octocat@octomac
        verified: true
        created_at: '2014-12-10T15:53:42Z'
        read_only: true
        added_by: octocat
        last_used: '2022-01-10T15:53:42Z'
        enabled: true
    language:
      value:
        C: 78769
        Python: 7769
    merged-upstream:
      value:
        message: Successfully fetched and fast-forwarded from upstream defunkt:main
        merge_type: fast-forward
        base_branch: defunkt:main
    page:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages
        status: built
        cname: developer.github.com
        custom_404: false
        html_url: https://developer.github.com
        source:
          branch: master
          path: /
        public: true
        pending_domain_unverified_at: '2024-04-30T19:33:31Z'
        protected_domain_state: verified
        https_certificate:
          state: approved
          description: Certificate is approved
          domains:
          - developer.github.com
          expires_at: '2021-05-22'
        https_enforced: true
    page-build-items:
      value:
      - url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error:
          message: null
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    page-build-status:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/latest
        status: queued
    page-build:
      value:
        url: https://api.github.com/repos/github/developer.github.com/pages/builds/5472601
        status: built
        error:
          message: null
        pusher:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        commit: 351391cdcb88ffae71ec3028c91f375a8036a26b
        duration: 2104
        created_at: '2014-02-10T19:00:49Z'
        updated_at: '2014-02-10T19:00:51Z'
    page-deployment:
      value:
        id: 4fd754f7e594640989b406850d0bc8f06a121251
        status_url: https://api.github.com/repos/github/developer.github.com/pages/deployments/4fd754f7e594640989b406850d0bc8f06a121251/status
        page_url: developer.github.com
    pages-deployment-status:
      value:
        status: succeed
    pages-health-check:
      value:
        domain:
          host: example.com
          uri: http://example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          reason: null
          responds_to_https: true
          enforces_https: true
          https_error: null
          is_https_eligible: true
          caa_error: null
        alt_domain:
          host: www.example.com
          uri: http://www.example.com/
          nameservers: default
          dns_resolves: true
          is_proxied: false
          is_cloudflare_ip: false
          is_fastly_ip: false
          is_old_ip_address: false
          is_a_record: true
          has_cname_record: false
          has_mx_records_present: false
          is_valid_domain: true
          is_apex_domain: true
          should_be_a_record: true
          is_cname_to_github_user_domain: false
          is_cname_to_pages_dot_github_dot_com: false
          is_cname_to_fastly: false
          is_pointed_to_github_pages_ip: true
          is_non_github_pages_ip_present: false
          is_pages_domain: false
          is_served_by_pages: true
          is_valid: true
          reason: null
          responds_to_https: true
          enforces_https: true
          https_error: null
          is_https_eligible: true
          caa_error: null
    custom-property-values:
      value:
      - property_name: environment
        value: production
      - property_name: service
        value: web
      - property_name: team
        value: octocat
    create-or-update-custom-properties-values:
      value:
        properties:
        - property_name: environment
          value: production
        - property_name: service
          value: web
        - property_name: team
          value: octocat
    content-file:
      value:
        type: file
        encoding: base64
        size: 5362
        name: README.md
        path: README.md
        content: encoded content ...
        sha: 3d21ec53a331a6f037a91c368710b99387d012c1
        url: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
        git_url: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
        html_url: https://github.com/octokit/octokit.rb/blob/master/README.md
        download_url: https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md
        _links:
          git: https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1
          self: https://api.github.com/repos/octokit/octokit.rb/contents/README.md
          html: https://github.com/octokit/octokit.rb/blob/master/README.md
    release-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        immutable: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          digest: sha256:2151b604e3429bff440b9fbc03eb3617bc2603cda96c95b9bb05277f9ddba255
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/1
        html_url: https://github.com/octocat/Hello-World/releases/v1.0.0
        assets_url: https://api.github.com/repos/octocat/Hello-World/releases/1/assets
        upload_url: https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}
        tarball_url: https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0
        zipball_url: https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0
        discussion_url: https://github.com/octocat/Hello-World/discussions/90
        id: 1
        node_id: MDc6UmVsZWFzZTE=
        tag_name: v1.0.0
        target_commitish: master
        name: v1.0.0
        body: Description of the release
        draft: false
        prerelease: false
        immutable: false
        created_at: '2013-02-27T19:35:32Z'
        published_at: '2013-02-27T19:35:32Z'
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assets:
        - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
          browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
          id: 1
          node_id: MDEyOlJlbGVhc2VBc3NldDE=
          name: example.zip
          label: short description
          state: uploaded
          content_type: application/zip
          size: 1024
          digest: sha256:2151b604e3429bff440b9fbc03eb3617bc2603cda96c95b9bb05277f9ddba255
          download_count: 42
          created_at: '2013-02-27T19:35:32Z'
          updated_at: '2013-02-27T19:35:32Z'
          uploader:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
    release-asset:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        digest: sha256:2151b604e3429bff440b9fbc03eb3617bc2603cda96c95b9bb05277f9ddba255
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-notes-content:
      value:
        name: Release v1.0.0 is now available!
        body: '##Changes in Release v1.0.0 ... ##Contributors @monalisa'
    release-asset-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        digest: sha256:2151b604e3429bff440b9fbc03eb3617bc2603cda96c95b9bb05277f9ddba255
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    release-asset-response-for-successful-upload:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/releases/assets/1
        browser_download_url: https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip
        id: 1
        node_id: MDEyOlJlbGVhc2VBc3NldDE=
        name: example.zip
        label: short description
        state: uploaded
        content_type: application/zip
        size: 1024
        digest: sha256:2151b604e3429bff440b9fbc03eb3617bc2603cda96c95b9bb05277f9ddba255
        download_count: 42
        created_at: '2013-02-27T19:35:32Z'
        updated_at: '2013-02-27T19:35:32Z'
        uploader:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    repository-rule-items:
      value:
      - type: commit_message_pattern
        ruleset_source_type: Repository
        ruleset_source: monalisa/my-repo
        ruleset_id: 42
        parameters:
          operator: starts_with
          pattern: issue
      - type: commit_author_email_pattern
        ruleset_source_type: Organization
        ruleset_source: my-org
        ruleset_id: 73
        parameters:
          operator: contains
          pattern: github
    repository-ruleset-items:
      value:
      - id: 42
        name: super cool ruleset
        source_type: Repository
        source: monalisa/my-repo
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/42
          html:
            href: https://github.com/monalisa/my-repo/rules/42
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
      - id: 314
        name: Another ruleset
        source_type: Repository
        source: monalisa/my-repo
        enforcement: enabled
        node_id: RRS_lACkVXNlcgQQ
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/314
          html:
            href: https://github.com/monalisa/my-repo/rules/314
        created_at: '2023-08-15T08:43:03Z'
        updated_at: '2023-09-23T16:29:47Z'
    repository-ruleset:
      value:
        id: 42
        name: super cool ruleset
        target: branch
        source_type: Repository
        source: monalisa/my-repo
        enforcement: active
        bypass_actors:
        - actor_id: 234
          actor_type: Team
          bypass_mode: always
        conditions:
          ref_name:
            include:
            - refs/heads/main
            - refs/heads/master
            exclude:
            - refs/heads/dev*
        rules:
        - type: commit_author_email_pattern
          parameters:
            operator: contains
            pattern: github
        node_id: RRS_lACkVXNlcgQB
        _links:
          self:
            href: https://api.github.com/repos/monalisa/my-repo/rulesets/42
          html:
            href: https://github.com/monalisa/my-repo/rules/42
        created_at: '2023-07-15T08:43:03Z'
        updated_at: '2023-08-23T16:29:47Z'
    repository-ruleset-version-with-state:
      value:
      - version_id: 3
        actor:
          id: 1
          type: User
        updated_at: 2024-010-23T16:29:47Z
        state:
          id: 42
          name: super cool ruleset
          target: branch
          source_type: Repository
          source: monalisa/my-repo
          enforcement: active
          bypass_actors:
          - actor_id: 234
            actor_type: Team
            bypass_mode: always
          conditions:
            ref_name:
              include:
              - refs/heads/main
              - refs/heads/master
              exclude:
              - refs/heads/dev*
          rules:
          - type: commit_author_email_pattern
            parameters:
              operator: contains
              pattern: github
    code-frequency-stat-items:
      value:
      - - 1302998400
        - 1124
        - -435
    commit-activity-items:
      value:
      - days:
        - 0
        - 3
        - 26
        - 20
        - 39
        - 1
        - 0
        total: 89
        week: 1336280400
    contributor-activity-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        total: 135
        weeks:
        - w: 1367712000
          a: 6898
          d: 77
          c: 10
    participation-stats:
      value:
        all:
        - 11
        - 21
        - 15
        - 2
        - 8
        - 1
        - 8
        - 23
        - 17
        - 21
        - 11
        - 10
        - 33
        - 91
        - 38
        - 34
        - 22
        - 23
        - 32
        - 3
        - 43
        - 87
        - 71
        - 18
        - 13
        - 5
        - 13
        - 16
        - 66
        - 27
        - 12
        - 45
        - 110
        - 117
        - 13
        - 8
        - 18
        - 9
        - 19
        - 26
        - 39
        - 12
        - 20
        - 31
        - 46
        - 91
        - 45
        - 10
        - 24
        - 9
        - 29
        - 7
        owner:
        - 3
        - 2
        - 3
        - 0
        - 2
        - 0
        - 5
        - 14
        - 7
        - 9
        - 1
        - 5
        - 0
        - 48
        - 19
        - 2
        - 0
        - 1
        - 10
        - 2
        - 23
        - 40
        - 35
        - 8
        - 8
        - 2
        - 10
        - 6
        - 30
        - 0
        - 2
        - 9
        - 53
        - 104
        - 3
        - 3
        - 10
        - 4
        - 7
        - 11
        - 21
        - 4
        - 4
        - 22
        - 26
        - 63
        - 11
        - 2
        - 14
        - 1
        - 10
        - 3
    code-frequency-stat-items-2:
      value:
      - - 0
        - 0
        - 5
      - - 0
        - 1
        - 43
      - - 0
        - 2
        - 21
    status:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        avatar_url: https://github.com/images/error/hubot_happy.gif
        id: 1
        node_id: MDY6U3RhdHVzMQ==
        state: success
        description: Build has completed successfully
        target_url: https://ci.example.com/1000/output
        context: continuous-integration/jenkins
        created_at: '2012-07-20T01:19:13Z'
        updated_at: '2012-07-20T01:19:13Z'
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
    tag-items:
      value:
      - name: v0.1
        commit:
          sha: c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
          url: https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc
        zipball_url: https://github.com/octocat/Hello-World/zipball/v0.1
        tarball_url: https://github.com/octocat/Hello-World/tarball/v0.1
        node_id: MDQ6VXNlcjE=
    tag-protection-items:
      value:
      - id: 2
        pattern: v1.*
    tag-protection:
      value:
        enabled: true
    topic:
      value:
        names:
        - octocat
        - atom
        - electron
        - api
    clone-traffic:
      value:
        count: 173
        uniques: 128
        clones:
        - timestamp: '2016-10-10T00:00:00Z'
          count: 2
          uniques: 1
        - timestamp: '2016-10-11T00:00:00Z'
          count: 17
          uniques: 16
        - timestamp: '2016-10-12T00:00:00Z'
          count: 21
          uniques: 15
        - timestamp: '2016-10-13T00:00:00Z'
          count: 8
          uniques: 7
        - timestamp: '2016-10-14T00:00:00Z'
          count: 5
          uniques: 5
        - timestamp: '2016-10-15T00:00:00Z'
          count: 2
          uniques: 2
        - timestamp: '2016-10-16T00:00:00Z'
          count: 8
          uniques: 7
        - timestamp: '2016-10-17T00:00:00Z'
          count: 26
          uniques: 15
        - timestamp: '2016-10-18T00:00:00Z'
          count: 19
          uniques: 17
        - timestamp: '2016-10-19T00:00:00Z'
          count: 19
          uniques: 14
        - timestamp: '2016-10-20T00:00:00Z'
          count: 19
          uniques: 15
        - timestamp: '2016-10-21T00:00:00Z'
          count: 9
          uniques: 7
        - timestamp: '2016-10-22T00:00:00Z'
          count: 5
          uniques: 5
        - timestamp: '2016-10-23T00:00:00Z'
          count: 6
          uniques: 5
        - timestamp: '2016-10-24T00:00:00Z'
          count: 7
          uniques: 5
    content-traffic-items:
      value:
      - path: /github/hubot
        title: 'github/hubot: A customizable life embetterment robot.'
        count: 3542
        uniques: 2225
      - path: /github/hubot/blob/master/docs/scripting.md
        title: hubot/scripting.md at master · github/hubot · GitHub
        count: 1707
        uniques: 804
      - path: /github/hubot/tree/master/docs
        title: hubot/docs at master · github/hubot · GitHub
        count: 685
        uniques: 435
      - path: /github/hubot/tree/master/src
        title: hubot/src at master · github/hubot · GitHub
        count: 577
        uniques: 347
      - path: /github/hubot/blob/master/docs/index.md
        title: hubot/index.md at master · github/hubot · GitHub
        count: 379
        uniques: 259
      - path: /github/hubot/blob/master/docs/adapters.md
        title: hubot/adapters.md at master · github/hubot · GitHub
        count: 354
        uniques: 201
      - path: /github/hubot/tree/master/examples
        title: hubot/examples at master · github/hubot · GitHub
        count: 340
        uniques: 260
      - path: /github/hubot/blob/master/docs/deploying/heroku.md
        title: hubot/heroku.md at master · github/hubot · GitHub
        count: 324
        uniques: 217
      - path: /github/hubot/blob/master/src/robot.coffee
        title: hubot/robot.coffee at master · github/hubot · GitHub
        count: 293
        uniques: 191
      - path: /github/hubot/blob/master/LICENSE.md
        title: hubot/LICENSE.md at master · github/hubot · GitHub
        count: 281
        uniques: 222
    referrer-traffic-items:
      value:
      - referrer: Google
        count: 4
        uniques: 3
      - referrer: stackoverflow.com
        count: 2
        uniques: 2
      - referrer: eggsonbread.com
        count: 1
        uniques: 1
      - referrer: yandex.ru
        count: 1
        uniques: 1
    view-traffic:
      value:
        count: 14850
        uniques: 3782
        views:
        - timestamp: '2016-10-10T00:00:00Z'
          count: 440
          uniques: 143
        - timestamp: '2016-10-11T00:00:00Z'
          count: 1308
          uniques: 414
        - timestamp: '2016-10-12T00:00:00Z'
          count: 1486
          uniques: 452
        - timestamp: '2016-10-13T00:00:00Z'
          count: 1170
          uniques: 401
        - timestamp: '2016-10-14T00:00:00Z'
          count: 868
          uniques: 266
        - timestamp: '2016-10-15T00:00:00Z'
          count: 495
          uniques: 157
        - timestamp: '2016-10-16T00:00:00Z'
          count: 524
          uniques: 175
        - timestamp: '2016-10-17T00:00:00Z'
          count: 1263
          uniques: 412
        - timestamp: '2016-10-18T00:00:00Z'
          count: 1402
          uniques: 417
        - timestamp: '2016-10-19T00:00:00Z'
          count: 1394
          uniques: 424
        - timestamp: '2016-10-20T00:00:00Z'
          count: 1492
          uniques: 448
        - timestamp: '2016-10-21T00:00:00Z'
          count: 1153
          uniques: 332
        - timestamp: '2016-10-22T00:00:00Z'
          count: 566
          uniques: 168
        - timestamp: '2016-10-23T00:00:00Z'
          count: 675
          uniques: 184
        - timestamp: '2016-10-24T00:00:00Z'
          count: 614
          uniques: 237
    minimal-repository:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        template_repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World-Template
          full_name: octocat/Hello-World-Template
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World-Template
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World-Template
          archive_url: https://api.github.com/repos/octocat/Hello-World-Template/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World-Template/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World-Template/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World-Template/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World-Template/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World-Template/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World-Template/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World-Template/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World-Template/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World-Template/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World-Template/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World-Template/events
          forks_url: https://api.github.com/repos/octocat/Hello-World-Template/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World-Template/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World-Template/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World-Template/git/tags{/sha}
          git_url: git:github.com/octocat/Hello-World-Template.git
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World-Template/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World-Template/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World-Template/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World-Template/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World-Template/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World-Template/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World-Template/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World-Template/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World-Template/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World-Template/releases{/id}
          ssh_url: git@github.com:octocat/Hello-World-Template.git
          stargazers_url: https://api.github.com/repos/octocat/Hello-World-Template/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World-Template/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World-Template/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World-Template/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World-Template/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World-Template/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World-Template/git/trees{/sha}
          clone_url: https://github.com/octocat/Hello-World-Template.git
          mirror_url: git:git.example.com/octocat/Hello-World-Template
          hooks_url: https://api.github.com/repos/octocat/Hello-World-Template/hooks
          svn_url: https://svn.github.com/octocat/Hello-World-Template
          homepage: https://github.com
          language: null
          forks: 9
          forks_count: 9
          stargazers_count: 80
          watchers_count: 80
          watchers: 80
          size: 108
          default_branch: master
          open_issues: 0
          open_issues_count: 0
          is_template: true
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
          topics:
          - octocat
          - atom
          - electron
          - api
          has_issues: true
          has_projects: true
          has_wiki: true
          has_pages: false
          has_downloads: true
          archived: false
          disabled: false
          visibility: public
          pushed_at: '2011-01-26T19:06:43Z'
          created_at: '2011-01-26T19:01:12Z'
          updated_at: '2011-01-26T19:14:43Z'
          permissions:
            admin: false
            push: false
            pull: true
          allow_rebase_merge: true
          temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
          allow_squash_merge: true
          allow_auto_merge: false
          delete_branch_on_merge: true
          allow_merge_commit: true
          allow_forking: true
          subscribers_count: 42
          network_count: 0
    public-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        hooks_url: http://api.github.com/repos/octocat/Hello-World/hooks
    repository-items-default-response:
      summary: Default response
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: true
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        allow_rebase_merge: true
        template_repository: null
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
  parameters:
    pagination-before:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    pagination-after:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    cursor:
      name: cursor
      description: 'Used for pagination: the starting delivery from which the page of deliveries is fetched. Refer to the `link` header for the next and previous page cursors.'
      in: query
      required: false
      schema:
        type: string
    delivery-id:
      name: delivery_id
      in: path
      required: true
      schema:
        type: integer
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    comment-id:
      name: comment_id
      description: The unique identifier of the comment.
      in: path
      required: true
      schema:
        type: integer
        format: int64
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    username:
      name: username
      description: The handle for the GitHub user account.
      in: path
      required: true
      schema:
        type: string
    hook-id:
      name: hook_id
      description: The unique identifier of the hook. You can find this value in the `X-GitHub-Hook-ID` header of a webhook delivery.
      in: path
      required: true
      schema:
        type: integer
    invitation-id:
      name: invitation_id
      description: The unique identifier of the invitation.
      in: path
      required: true
      schema:
        type: integer
    ruleset-targets:
      name: targets
      description: 'A comma-separated list of rule targets to filter by.

        If provided, only rulesets that apply to the specified targets will be returned.

        For example, `branch,tag,push`.

        '
      in: query
      required: false
      schema:
        type: string
        example: branch,tag,push
    ref-in-query:
      name: ref
      description: The name of the ref. Cannot contain wildcard characters. Optionally prefix with `refs/heads/` to limit to branches or `refs/tags/` to limit to tags. Omit the prefix to search across all refs. When specified, only rule evaluations triggered for this ref will be returned.
      in: query
      schema:
        type: string
      x-multi-segment: true
    repository-name-in-query:
      name: repository_name
      description: The name of the repository to filter on.
      in: query
      schema:
        type: string
    time-period:
      name: time_period
      description: 'The time period to filter by.


        For example, `day` will filter for rule suites that occurred in the past 24 hours, and `week` will filter for rule suites that occurred in the past 7 days (168 hours).'
      in: query
      required: false
      schema:
        type: string
        enum:
        - hour
        - day
        - week
        - month
        default: day
    actor-name-in-query:
      name: actor_name
      description: The handle for the GitHub user account to filter on. When specified, only rule evaluations triggered by this actor will be returned.
      in: query
      schema:
        type: string
    rule-suite-result:
      name: rule_suite_result
      description: The rule suite results to filter on. When specified, only suites with this result will be returned.
      in: query
      schema:
        type: string
        enum:
        - pass
        - fail
        - bypass
        - all
        default: all
    rule-suite-id:
      name: rule_suite_id
      description: 'The unique identifier of the rule suite result.

        To get this ID, you can use [GET /repos/{owner}/{repo}/rulesets/rule-suites](https://docs.github.com/rest/repos/rule-suites#list-repository-rule-suites)

        for repositories and [GET /orgs/{org}/rulesets/rule-suites](https://docs.github.com/rest/orgs/rule-suites#list-organization-rule-suites)

        for organizations.'
      in: path
      required: true
      schema:
        type: integer
    autolink-id:
      name: autolink_id
      description: The unique identifier of the autolink.
      in: path
      required: true
      schema:
        type: integer
    branch:
      name: branch
      description: The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/graphql).
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    commit-sha:
      name: commit_sha
      description: The SHA of the commit.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    commit-ref:
      name: ref
      description: The commit reference. Can be a commit SHA, branch name (`heads/BRANCH_NAME`), or tag name (`tags/TAG_NAME`). For more information, see "[Git References](https://git-scm.com/book/en/v2/Git-Internals-Git-References)" in the Git documentation.
      in: path
      required: true
      schema:
        type: string
      x-multi-segment: true
    deployment-id:
      name: deployment_id
      description: deployment_id parameter
      in: path
      required: true
      schema:
        type: integer
    environment-name:
      name: environment_name
      in: path
      required: true
      description: The name of the environment. The name must be URL encoded. For example, any slashes in the name must be replaced with `%2F`.
      schema:
        type: string
    branch-policy-id:
      name: branch_policy_id
      in: path
      required: true
      description: The unique identifier of the branch policy.
      schema:
        type: integer
    protection-rule-id:
      name: protection_rule_id
      description: The unique identifier of the protection rule.
      in: path
      required: true
      schema:
        type: integer
    key-id:
      name: key_id
      description: The unique identifier of the key.
      in: path
      required: true
      schema:
        type: integer
    pages-deployment-id:
      name: pages_deployment_id
      description: The ID of the Pages deployment. You can also give the commit SHA of the deployment.
      in: path
      required: true
      schema:
        oneOf:
        - type: integer
        - type: string
    asset-id:
      name: asset_id
      description: The unique identifier of the asset.
      in: path
      required: true
      schema:
        type: integer
    release-id:
      name: release_id
      description: The unique identifier of the release.
      in: path
      required: true
      schema:
        type: integer
    tag-protection-id:
      name: tag_protection_id
      description: The unique identifier of the tag protection.
      in: path
      required: true
      schema:
        type: integer
    per:
      name: per
      description: The time frame to display results for.
      in: query
      required: false
      schema:
        type: string
        enum:
        - day
        - week
        default: day
    since-repo:
      name: since
      description: A repository ID. Only return repositories with an ID greater than this ID.
      in: query
      required: false
      schema:
        type: integer
    since-repo-date:
      name: since
      description: 'Only show repositories updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    before-repo-date:
      name: before
      description: 'Only show repositories updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
  responses:
    validation_failed_simple:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
        application/scim+json:
          schema:
            $ref: '#/components/schemas/scim-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    accepted:
      description: Accepted
      content:
        application/json:
          schema:
            type: object
          examples:
            default:
              value: null
    not_modified:
      description: Not modified
    requires_authentication:
      description: Requires authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    no_content:
      description: A header with no content is returned.
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    moved_permanently:
      description: Moved permanently
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    temporary_redirect:
      description: Temporary Redirect
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    found:
      description: Found
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: repos
  description: Interact with GitHub Repos.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /orgs/{org}/repos:
    get:
      summary: List organization repositories
      description: 'Lists repositories for the specified organization.


        > [!NOTE]

        > In order to see the `security_and_analysis` block for a repository you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."'
      tags:
      - repos
      operationId: repos/list-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-organization-repositories
      parameters:
      - $ref: '#/components/parameters/org'
      - name: type
        description: Specifies the types of repositories you want returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          - forks
          - sources
          - member
          default: all
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: created
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    post:
      summary: Create an organization repository
      description: 'Creates a new repository in the specified organization. The authenticated user must be a member of the organization.


        OAuth app tokens and personal access tokens (classic) need the `public_repo` or `repo` scope to create a public repository, and `repo` scope to create a private repository.'
      tags:
      - repos
      operationId: repos/create-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-an-organization-repository
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: Whether the repository is private.
                  default: false
                visibility:
                  type: string
                  description: The visibility of the repository.
                  enum:
                  - public
                  - private
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository or `false` to disable it.
                  default: true
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template repository or `false` to prevent it.
                  default: false
                team_id:
                  type: integer
                  description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.
                auto_init:
                  type: boolean
                  description: Pass `true` to create an initial commit with empty README.
                  default: false
                gitignore_template:
                  type: string
                  description: Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, "Haskell".
                license_template:
                  type: string
                  description: Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://docs.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, "mit" or "mpl-2.0".
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion. **The authenticated user must be an organization owner to set this property to `true`.**
                  default: false
                use_squash_pr_title_as_default:
                  type: boolean
                  description: Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property is closing down. Please use `squash_merge_commit_title` instead.
                  default: false
                  deprecated: true
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: 'Required when using `squash_merge_commit_message`.


                    The default value for a squash merge commit title:


                    - `PR_TITLE` - default to the pull request''s title.

                    - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: 'The default value for a squash merge commit message:


                    - `PR_BODY` - default to the pull request''s body.

                    - `COMMIT_MESSAGES` - default to the branch''s commit messages.

                    - `BLANK` - default to a blank commit message.'
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: 'Required when using `merge_commit_message`.


                    The default value for a merge commit title.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: 'The default value for a merge commit message.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `PR_BODY` - default to the pull request''s body.

                    - `BLANK` - default to a blank commit message.'
                custom_properties:
                  type: object
                  description: The custom properties for the new repository. The keys are the custom property names, and the values are the corresponding custom property values.
                  additionalProperties: true
              required:
              - name
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repository
                  homepage: https://github.com
                  private: false
                  has_issues: true
                  has_projects: true
                  has_wiki: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /orgs/{org}/rulesets:
    get:
      summary: Get all organization repository rulesets
      description: Get all the repository rulesets for an organization.
      tags:
      - repos
      operationId: repos/get-org-rulesets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-all-organization-repository-rulesets
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/ruleset-targets'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/org-ruleset-items'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    post:
      summary: Create an organization repository ruleset
      description: Create a repository ruleset for an organization.
      tags:
      - repos
      operationId: repos/create-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#create-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset
                  enum:
                  - branch
                  - tag
                  - push
                  - repository
                  default: branch
                enforcement:
                  $ref: '#/components/schemas/repository-rule-enforcement'
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    $ref: '#/components/schemas/repository-ruleset-bypass-actor'
                conditions:
                  $ref: '#/components/schemas/org-ruleset-conditions'
                rules:
                  type: array
                  description: An array of rules within the ruleset.
                  items:
                    $ref: '#/components/schemas/org-rules'
              required:
              - name
              - enforcement
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                    repository_name:
                      include:
                      - important_repository
                      - another_important_repository
                      exclude:
                      - unimportant_repository
                      protected: true
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/org-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
  /orgs/{org}/rulesets/rule-suites:
    get:
      summary: List organization rule suites
      description: 'Lists suites of rule evaluations at the organization level.

        For more information, see "[Managing rulesets for repositories in your organization](https://docs.github.com/organizations/managing-organization-settings/managing-rulesets-for-repositories-in-your-organization#viewing-insights-for-rulesets)."'
      tags:
      - repos
      operationId: repos/get-org-rule-suites
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rule-suites#list-organization-rule-suites
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/ref-in-query'
      - $ref: '#/components/parameters/repository-name-in-query'
      - $ref: '#/components/parameters/time-period'
      - $ref: '#/components/parameters/actor-name-in-query'
      - $ref: '#/components/parameters/rule-suite-result'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule-suites'
              examples:
                default:
                  $ref: '#/components/examples/rule-suite-items'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rule-suites
  /orgs/{org}/rulesets/rule-suites/{rule_suite_id}:
    get:
      summary: Get an organization rule suite
      description: 'Gets information about a suite of rule evaluations from within an organization.

        For more information, see "[Managing rulesets for repositories in your organization](https://docs.github.com/organizations/managing-organization-settings/managing-rulesets-for-repositories-in-your-organization#viewing-insights-for-rulesets)."'
      tags:
      - repos
      operationId: repos/get-org-rule-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rule-suites#get-an-organization-rule-suite
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/rule-suite-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule-suite'
              examples:
                default:
                  $ref: '#/components/examples/rule-suite'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rule-suites
  /orgs/{org}/rulesets/{ruleset_id}:
    get:
      summary: Get an organization repository ruleset
      description: 'Get a repository ruleset for an organization.


        **Note:** To prevent leaking sensitive information, the `bypass_actors` property is only returned if the user

        making the API request has write access to the ruleset.'
      tags:
      - repos
      operationId: repos/get-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#get-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/org'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/org-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    put:
      summary: Update an organization repository ruleset
      description: Update a ruleset for an organization.
      tags:
      - repos
      operationId: repos/update-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#update-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/org'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Request body
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset
                  enum:
                  - branch
                  - tag
                  - push
                  - repository
                enforcement:
                  $ref: '#/components/schemas/repository-rule-enforcement'
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    $ref: '#/components/schemas/repository-ruleset-bypass-actor'
                conditions:
                  $ref: '#/components/schemas/org-ruleset-conditions'
                rules:
                  description: An array of rules within the ruleset.
                  type: array
                  items:
                    $ref: '#/components/schemas/org-rules'
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                    repository_name:
                      include:
                      - important_repository
                      - another_important_repository
                      exclude:
                      - unimportant_repository
                      protected: true
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/org-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    delete:
      summary: Delete an organization repository ruleset
      description: Delete a ruleset for an organization.
      tags:
      - repos
      operationId: repos/delete-org-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/orgs/rules#delete-an-organization-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: orgs
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/org'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
  /repos/{owner}/{repo}:
    get:
      summary: Get a repository
      description: 'The `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network.


        > [!NOTE]

        > In order to see the `security_and_analysis` block for a repository you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."'
      tags:
      - repos
      operationId: repos/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#get-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default-response:
                  $ref: '#/components/examples/full-repository-default-response'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '301':
          $ref: '#/components/responses/moved_permanently'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    patch:
      summary: Update a repository
      description: '**Note**: To edit a repository''s topics, use the [Replace all repository topics](https://docs.github.com/rest/repos/repos#replace-all-repository-topics) endpoint.'
      tags:
      - repos
      operationId: repos/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#update-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the repository.
                description:
                  type: string
                  description: A short description of the repository.
                homepage:
                  type: string
                  description: A URL with more information about the repository.
                private:
                  type: boolean
                  description: "Either `true` to make the repository private or `false` to make it public. Default: `false`.  \n**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private."
                  default: false
                visibility:
                  type: string
                  description: The visibility of the repository.
                  enum:
                  - public
                  - private
                security_and_analysis:
                  type: object
                  description: 'Specify which security and analysis features to enable or disable for the repository.


                    To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."


                    For example, to enable GitHub Advanced Security, use this data in the body of the `PATCH` request:

                    `{ "security_and_analysis": {"advanced_security": { "status": "enabled" } } }`.


                    You can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.'
                  nullable: true
                  properties:
                    advanced_security:
                      type: object
                      description: 'Use the `status` property to enable or disable GitHub Advanced Security for this repository.

                        For more information, see "[About GitHub Advanced

                        Security](/github/getting-started-with-github/learning-about-github/about-github-advanced-security)."


                        For standalone Code Scanning or Secret Protection products, this parameter cannot be used.'
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    code_security:
                      type: object
                      description: Use the `status` property to enable or disable GitHub Code Security for this repository.
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning:
                      type: object
                      description: Use the `status` property to enable or disable secret scanning for this repository. For more information, see "[About secret scanning](/code-security/secret-security/about-secret-scanning)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning_push_protection:
                      type: object
                      description: Use the `status` property to enable or disable secret scanning push protection for this repository. For more information, see "[Protecting pushes with secret scanning](/code-security/secret-scanning/protecting-pushes-with-secret-scanning)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning_ai_detection:
                      type: object
                      description: Use the `status` property to enable or disable secret scanning AI detection for this repository. For more information, see "[Responsible detection of generic secrets with AI](https://docs.github.com/code-security/secret-scanning/using-advanced-secret-scanning-and-push-protection-features/generic-secret-detection/responsible-ai-generic-secrets)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                    secret_scanning_non_provider_patterns:
                      type: object
                      description: Use the `status` property to enable or disable secret scanning non-provider patterns for this repository. For more information, see "[Supported secret scanning patterns](/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets)."
                      properties:
                        status:
                          type: string
                          description: Can be `enabled` or `disabled`.
                has_issues:
                  type: boolean
                  description: Either `true` to enable issues for this repository or `false` to disable them.
                  default: true
                has_projects:
                  type: boolean
                  description: Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
                  default: true
                has_wiki:
                  type: boolean
                  description: Either `true` to enable the wiki for this repository or `false` to disable it.
                  default: true
                is_template:
                  type: boolean
                  description: Either `true` to make this repo available as a template repository or `false` to prevent it.
                  default: false
                default_branch:
                  type: string
                  description: Updates the default branch for this repository.
                allow_squash_merge:
                  type: boolean
                  description: Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
                  default: true
                allow_merge_commit:
                  type: boolean
                  description: Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
                  default: true
                allow_rebase_merge:
                  type: boolean
                  description: Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
                  default: true
                allow_auto_merge:
                  type: boolean
                  description: Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
                  default: false
                delete_branch_on_merge:
                  type: boolean
                  description: Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
                  default: false
                allow_update_branch:
                  type: boolean
                  description: Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.
                  default: false
                use_squash_pr_title_as_default:
                  type: boolean
                  description: Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property is closing down. Please use `squash_merge_commit_title` instead.
                  default: false
                  deprecated: true
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: 'Required when using `squash_merge_commit_message`.


                    The default value for a squash merge commit title:


                    - `PR_TITLE` - default to the pull request''s title.

                    - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: 'The default value for a squash merge commit message:


                    - `PR_BODY` - default to the pull request''s body.

                    - `COMMIT_MESSAGES` - default to the branch''s commit messages.

                    - `BLANK` - default to a blank commit message.'
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: 'Required when using `merge_commit_message`.


                    The default value for a merge commit title.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: 'The default value for a merge commit message.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `PR_BODY` - default to the pull request''s body.

                    - `BLANK` - default to a blank commit message.'
                archived:
                  type: boolean
                  description: Whether to archive this repository. `false` will unarchive a previously archived repository.
                  default: false
                allow_forking:
                  type: boolean
                  description: Either `true` to allow private forks, or `false` to prevent private forks.
                  default: false
                web_commit_signoff_required:
                  type: boolean
                  description: Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign off on web-based commits.
                  default: false
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repository
                  homepage: https://github.com
                  private: true
                  has_issues: true
                  has_projects: true
                  has_wiki: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
        '307':
          $ref: '#/components/responses/temporary_redirect'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Delete a repository
      description: 'Deleting a repository requires admin access.


        If an organization owner has configured the organization to prevent members from deleting organization-owned

        repositories, you will get a `403 Forbidden` response.


        OAuth app tokens and personal access tokens (classic) need the `delete_repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/delete
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#delete-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '403':
          description: 'If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                default:
                  value:
                    message: Organization members cannot delete repositories.
                    documentation_url: https://docs.github.com/rest/repos/repos#delete-a-repository
        '307':
          $ref: '#/components/responses/temporary_redirect'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/activity:
    get:
      summary: List repository activities
      description: 'Lists a detailed history of changes to a repository, such as pushes, merges, force pushes, and branch changes, and associates these changes with commits and users.


        For more information about viewing repository activity,

        see "[Viewing activity and data for your repository](https://docs.github.com/repositories/viewing-activity-and-data-for-your-repository)."'
      tags:
      - repos
      operationId: repos/list-activities
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-activities
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - name: ref
        description: 'The Git reference for the activities you want to list.


          The `ref` for a branch can be formatted either as `refs/heads/BRANCH_NAME` or `BRANCH_NAME`, where `BRANCH_NAME` is the name of your branch.'
        in: query
        required: false
        schema:
          type: string
      - name: actor
        description: The GitHub username to use to filter by the actor who performed the activity.
        in: query
        required: false
        schema:
          type: string
      - name: time_period
        description: 'The time period to filter by.


          For example, `day` will filter for activity that occurred in the past 24 hours, and `week` will filter for activity that occurred in the past 7 days (168 hours).'
        in: query
        required: false
        schema:
          type: string
          enum:
          - day
          - week
          - month
          - quarter
          - year
      - name: activity_type
        description: 'The activity type to filter by.


          For example, you can choose to filter by "force_push", to see all force pushes to the repository.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - push
          - force_push
          - branch_creation
          - branch_deletion
          - pr_merge
          - merge_queue_merge
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/activity'
              examples:
                default:
                  $ref: '#/components/examples/activity-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/attestations:
    post:
      summary: Create an attestation
      description: 'Store an artifact attestation and associate it with a repository.


        The authenticated user must have write permission to the repository and, if using a fine-grained access token, the `attestations:write` permission is required.


        Artifact attestations are meant to be created using the [attest action](https://github.com/actions/attest). For more information, see our guide on [using artifact attestations to establish a build''s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).'
      tags:
      - repos
      operationId: repos/create-attestation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-an-attestation
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bundle:
                  type: object
                  properties:
                    mediaType:
                      type: string
                    verificationMaterial:
                      type: object
                      properties: {}
                      additionalProperties: true
                    dsseEnvelope:
                      type: object
                      properties: {}
                      additionalProperties: true
                  description: 'The attestation''s Sigstore Bundle.

                    Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto) for more information.'
              required:
              - bundle
            examples:
              default:
                summary: Example of a request body
                value:
                  $ref: '#/components/examples/attestation'
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the attestation.
              examples:
                default:
                  value:
                    id: 2
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/attestations/{subject_digest}:
    get:
      summary: List attestations
      description: 'List a collection of artifact attestations with a given subject digest that are associated with a repository.


        The authenticated user making the request must have read access to the repository. In addition, when using a fine-grained access token the `attestations:read` permission is required.


        **Please note:** in order to offer meaningful security benefits, an attestation''s signature and timestamps **must** be cryptographically verified, and the identity of the attestation signer **must** be validated. Attestations can be verified using the [GitHub CLI `attestation verify` command](https://cli.github.com/manual/gh_attestation_verify). For more information, see [our guide on how to use artifact attestations to establish a build''s provenance](https://docs.github.com/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds).'
      tags:
      - repos
      operationId: repos/list-attestations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-attestations
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - name: subject_digest
        description: The parameter should be set to the attestation's subject's SHA256 digest, in the form `sha256:HEX_DIGEST`.
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: predicate_type
        description: 'Optional filter for fetching attestations with a given predicate type.

          This option accepts `provenance`, `sbom`, or freeform text for custom predicate types.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  attestations:
                    type: array
                    items:
                      type: object
                      properties:
                        bundle:
                          type: object
                          properties:
                            mediaType:
                              type: string
                            verificationMaterial:
                              type: object
                              properties: {}
                              additionalProperties: true
                            dsseEnvelope:
                              type: object
                              properties: {}
                              additionalProperties: true
                          description: 'The attestation''s Sigstore Bundle.

                            Refer to the [Sigstore Bundle Specification](https://github.com/sigstore/protobuf-specs/blob/main/protos/sigstore_bundle.proto) for more information.'
                        repository_id:
                          type: integer
                        bundle_url:
                          type: string
              examples:
                default:
                  $ref: '#/components/examples/list-attestations'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/autolinks:
    get:
      summary: Get all autolinks of a repository
      description: 'Gets all autolinks that are configured for a repository.


        Information about autolinks are only available to repository administrators.'
      tags:
      - repos
      operationId: repos/list-autolinks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#get-all-autolinks-of-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    post:
      summary: Create an autolink reference for a repository
      description: Users with admin access to the repository can create an autolink.
      tags:
      - repos
      operationId: repos/create-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#create-an-autolink-reference-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key_prefix:
                  type: string
                  description: This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commit.
                url_template:
                  type: string
                  description: The URL must contain `<num>` for the reference number. `<num>` matches different characters depending on the value of `is_alphanumeric`.
                is_alphanumeric:
                  type: boolean
                  default: true
                  description: Whether this autolink reference matches alphanumeric characters. If true, the `<num>` parameter of the `url_template` matches alphanumeric characters `A-Z` (case insensitive), `0-9`, and `-`. If false, this autolink reference only matches numeric characters.
              required:
              - key_prefix
              - url_template
            examples:
              default:
                value:
                  key_prefix: TICKET-
                  url_template: https://example.com/TICKET?query=<num>
                  is_alphanumeric: true
      responses:
        '201':
          description: response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/autolinks/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  /repos/{owner}/{repo}/autolinks/{autolink_id}:
    get:
      summary: Get an autolink reference of a repository
      description: 'This returns a single autolink reference by ID that was configured for the given repository.


        Information about autolinks are only available to repository administrators.'
      tags:
      - repos
      operationId: repos/get-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#get-an-autolink-reference-of-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/autolink-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/autolink'
              examples:
                default:
                  $ref: '#/components/examples/autolink'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
    delete:
      summary: Delete an autolink reference from a repository
      description: 'This deletes a single autolink reference by ID that was configured for the given repository.


        Information about autolinks are only available to repository administrators.'
      tags:
      - repos
      operationId: repos/delete-autolink
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/autolinks#delete-an-autolink-reference-from-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/autolink-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: autolinks
  /repos/{owner}/{repo}/automated-security-fixes:
    get:
      summary: Check if Dependabot security updates are enabled for a repository
      description: Shows whether Dependabot security updates are enabled, disabled or paused for a repository. The authenticated user must have admin read access to the repository. For more information, see "[Configuring Dependabot security updates](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/check-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#check-if-dependabot-security-updates-are-enabled-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response if Dependabot is enabled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/check-automated-security-fixes'
              examples:
                default:
                  value:
                    enabled: true
                    paused: false
        '404':
          description: Not Found if Dependabot is not enabled for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Enable Dependabot security updates
      description: Enables Dependabot security updates for a repository. The authenticated user must have admin access to the repository. For more information, see "[Configuring Dependabot security updates](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/enable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-dependabot-security-updates
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable Dependabot security updates
      description: Disables Dependabot security updates for a repository. The authenticated user must have admin access to the repository. For more information, see "[Configuring Dependabot security updates](https://docs.github.com/articles/configuring-automated-security-fixes)".
      tags:
      - repos
      operationId: repos/disable-automated-security-fixes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-dependabot-security-updates
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/branches:
    get:
      summary: List branches
      description: ''
      tags:
      - repos
      operationId: repos/list-branches
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#list-branches
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: protected
        description: Setting to `true` returns only branches protected by branch protections or rulesets. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches.
        in: query
        required: false
        schema:
          type: boolean
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/short-branch'
              examples:
                default:
                  $ref: '#/components/examples/short-branch-with-protection-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}:
    get:
      summary: Get a branch
      description: ''
      tags:
      - repos
      operationId: repos/get-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#get-a-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-with-protection'
              examples:
                default:
                  $ref: '#/components/examples/branch-get'
        '301':
          $ref: '#/components/responses/moved_permanently'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  /repos/{owner}/{repo}/branches/{branch}/protection:
    get:
      summary: Get branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-protection'
              examples:
                default:
                  $ref: '#/components/examples/branch-protection'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    put:
      summary: Update branch protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Protecting a branch requires admin or owner permissions to the repository.


        > [!NOTE]

        > Passing new arrays of `users` and `teams` replaces their previous values.


        > [!NOTE]

        > The list of users, apps, and teams in total is limited to 100 items.'
      tags:
      - repos
      operationId: repos/update-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                required_status_checks:
                  type: object
                  description: Require status checks to pass before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    strict:
                      type: boolean
                      description: Require branches to be up to date before merging.
                    contexts:
                      type: array
                      deprecated: true
                      description: '**Closing down notice**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.'
                      items:
                        type: string
                    checks:
                      type: array
                      description: The list of status checks to require in order to merge into this branch.
                      items:
                        type: object
                        required:
                        - context
                        properties:
                          context:
                            type: string
                            description: The name of the required check
                          app_id:
                            type: integer
                            description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.
                  required:
                  - strict
                  - contexts
                enforce_admins:
                  type: boolean
                  description: Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.
                  nullable: true
                required_pull_request_reviews:
                  type: object
                  description: Require at least one approving review on a pull request, before merging. Set to `null` to disable.
                  nullable: true
                  properties:
                    dismissal_restrictions:
                      type: object
                      description: Specify which users, teams, and apps can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s with dismissal access
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s with dismissal access
                          items:
                            type: string
                        apps:
                          type: array
                          description: The list of app `slug`s with dismissal access
                          items:
                            type: string
                    dismiss_stale_reviews:
                      type: boolean
                      description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.
                    require_code_owner_reviews:
                      type: boolean
                      description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) review them.
                    required_approving_review_count:
                      type: integer
                      description: Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
                    require_last_push_approval:
                      type: boolean
                      description: 'Whether the most recent push must be approved by someone other than the person who pushed it. Default: `false`.'
                      default: false
                    bypass_pull_request_allowances:
                      type: object
                      description: Allow specific users, teams, or apps to bypass pull request requirements.
                      properties:
                        users:
                          type: array
                          description: The list of user `login`s allowed to bypass pull request requirements.
                          items:
                            type: string
                        teams:
                          type: array
                          description: The list of team `slug`s allowed to bypass pull request requirements.
                          items:
                            type: string
                        apps:
                          type: array
                          description: The list of app `slug`s allowed to bypass pull request requirements.
                          items:
                            type: string
                restrictions:
                  type: object
                  description: Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.
                  nullable: true
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with push access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with push access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with push access
                      items:
                        type: string
                  required:
                  - users
                  - teams
                required_linear_history:
                  type: boolean
                  description: 'Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see "[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)" in the GitHub Help documentation.'
                allow_force_pushes:
                  type: boolean
                  description: 'Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation."'
                  nullable: true
                allow_deletions:
                  type: boolean
                  description: 'Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation.'
                block_creations:
                  type: boolean
                  description: 'If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Set to `true` to restrict new branch creation. Default: `false`.'
                required_conversation_resolution:
                  type: boolean
                  description: 'Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.'
                lock_branch:
                  type: boolean
                  description: 'Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. Default: `false`.'
                  default: false
                allow_fork_syncing:
                  type: boolean
                  description: 'Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. Default: `false`.'
                  default: false
              required:
              - required_status_checks
              - enforce_admins
              - required_pull_request_reviews
              - restrictions
            examples:
              default:
                value:
                  required_status_checks:
                    strict: true
                    contexts:
                    - continuous-integration/travis-ci
                  enforce_admins: true
                  required_pull_request_reviews:
                    dismissal_restrictions:
                      users:
                      - octocat
                      teams:
                      - justice-league
                    dismiss_stale_reviews: true
                    require_code_owner_reviews: true
                    required_approving_review_count: 2
                    require_last_push_approval: true
                    bypass_pull_request_allowances:
                      users:
                      - octocat
                      teams:
                      - justice-league
                  restrictions:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - super-ci
                  required_linear_history: true
                  allow_force_pushes: true
                  allow_deletions: true
                  block_creations: true
                  required_conversation_resolution: true
                  lock_branch: true
                  allow_fork_syncing: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch'
              examples:
                default:
                  $ref: '#/components/examples/branch-protection-update'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins:
    get:
      summary: Get admin branch protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-admin-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Set admin branch protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Adding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.'
      tags:
      - repos
      operationId: repos/set-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-admin-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete admin branch protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Removing admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled.'
      tags:
      - repos
      operationId: repos/delete-admin-branch-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-admin-branch-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews:
    get:
      summary: Get pull request review protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-pull-request-review-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-pull-request-review'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    patch:
      summary: Update pull request review protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Updating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.


        > [!NOTE]

        > Passing new arrays of `users` and `teams` replaces their previous values.'
      tags:
      - repos
      operationId: repos/update-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-pull-request-review-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                dismissal_restrictions:
                  type: object
                  description: Specify which users, teams, and apps can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s with dismissal access
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s with dismissal access
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s with dismissal access
                      items:
                        type: string
                dismiss_stale_reviews:
                  type: boolean
                  description: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.
                require_code_owner_reviews:
                  type: boolean
                  description: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed.
                required_approving_review_count:
                  type: integer
                  description: Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
                require_last_push_approval:
                  type: boolean
                  description: 'Whether the most recent push must be approved by someone other than the person who pushed it. Default: `false`'
                  default: false
                bypass_pull_request_allowances:
                  type: object
                  description: Allow specific users, teams, or apps to bypass pull request requirements.
                  properties:
                    users:
                      type: array
                      description: The list of user `login`s allowed to bypass pull request requirements.
                      items:
                        type: string
                    teams:
                      type: array
                      description: The list of team `slug`s allowed to bypass pull request requirements.
                      items:
                        type: string
                    apps:
                      type: array
                      description: The list of app `slug`s allowed to bypass pull request requirements.
                      items:
                        type: string
            examples:
              default:
                value:
                  dismissal_restrictions:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - octoapp
                  bypass_pull_request_allowances:
                    users:
                    - octocat
                    teams:
                    - justice-league
                    apps:
                    - octoapp
                  dismiss_stale_reviews: true
                  require_code_owner_reviews: true
                  required_approving_review_count: 2
                  require_last_push_approval: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-pull-request-review'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete pull request review protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/delete-pull-request-review-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-pull-request-review-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures:
    get:
      summary: Get commit signature protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://docs.github.com/articles/signing-commits-with-gpg) in GitHub Help.


        > [!NOTE]

        > You must enable branch protection to require signed commits.'
      tags:
      - repos
      operationId: repos/get-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-commit-signature-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Create commit signature protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits.'
      tags:
      - repos
      operationId: repos/create-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#create-commit-signature-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/protected-branch-admin-enforced'
              examples:
                default:
                  $ref: '#/components/examples/protected-branch-admin-enforced'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete commit signature protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        When authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits.'
      tags:
      - repos
      operationId: repos/delete-commit-signature-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-commit-signature-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks:
    get:
      summary: Get status checks protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-status-checks-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-status-checks-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status-check-policy'
              examples:
                default:
                  $ref: '#/components/examples/status-check-policy'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    patch:
      summary: Update status check protection
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Updating required status checks requires admin or owner permissions to the repository and branch protection to be enabled.'
      tags:
      - repos
      operationId: repos/update-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#update-status-check-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                strict:
                  type: boolean
                  description: Require branches to be up to date before merging.
                contexts:
                  type: array
                  deprecated: true
                  description: '**Closing down notice**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.'
                  items:
                    type: string
                checks:
                  type: array
                  description: The list of status checks to require in order to merge into this branch.
                  items:
                    type: object
                    required:
                    - context
                    properties:
                      context:
                        type: string
                        description: The name of the required check
                      app_id:
                        type: integer
                        description: The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.
            examples:
              default:
                value:
                  strict: true
                  contexts:
                  - continuous-integration/travis-ci
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status-check-policy'
              examples:
                default:
                  $ref: '#/components/examples/status-check-policy'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove status check protection
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-status-check-protection
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts:
    get:
      summary: Get all status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/get-all-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-all-status-check-contexts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/add-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-status-check-contexts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example adding status checks to a branch protection rule
                value:
                  contexts:
                  - continuous-integration/travis-ci
                  - continuous-integration/jenkins
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
                  - continuous-integration/jenkins
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
    put:
      summary: Set status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/set-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-status-check-contexts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example updating status checks for a branch protection rule
                value:
                  contexts:
                  - continuous-integration/travis-ci
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove status check contexts
      description: Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
      tags:
      - repos
      operationId: repos/remove-status-check-contexts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-status-check-contexts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  contexts:
                    type: array
                    description: The name of the status checks
                    items:
                      type: string
                required:
                - contexts
                example:
                  contexts:
                  - contexts
              - type: array
                description: The name of the status checks
                items:
                  type: string
            examples:
              default:
                summary: Example removing status checks from a branch protection rule
                value:
                  contexts:
                  - continuous-integration/jenkins
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              examples:
                default:
                  value:
                  - continuous-integration/travis-ci
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: contexts
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions:
    get:
      summary: Get access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Lists who has access to this protected branch.


        > [!NOTE]

        > Users, apps, and teams `restrictions` are only available for organization-owned repositories.'
      tags:
      - repos
      operationId: repos/get-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-restriction-policy'
              examples:
                default:
                  $ref: '#/components/examples/branch-restriction-policy'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    delete:
      summary: Delete access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Disables the ability to restrict who can push to this branch.'
      tags:
      - repos
      operationId: repos/delete-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#delete-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps:
    get:
      summary: Get apps with access to the protected branch
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Lists the GitHub Apps that have push access to this branch. Only GitHub Apps that are installed on the repository and that have been granted write access to the repository contents can be added as authorized actors on a protected branch.'
      tags:
      - repos
      operationId: repos/get-apps-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-apps-with-access-to-the-protected-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add app access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Grants the specified apps push access for this branch. Only GitHub Apps that are installed on the repository and that have been granted write access to the repository contents can be added as authorized actors on a protected branch.'
      tags:
      - repos
      operationId: repos/add-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-app-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apps:
                  type: array
                  description: 'The GitHub Apps that have push access to this branch. Use the slugified version of the app name. **Note**: The list of users, apps, and teams in total is limited to 100 items.'
                  items:
                    type: string
              required:
              - apps
              example:
                apps:
                - my-app
            examples:
              default:
                value:
                  apps:
                  - octoapp
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
    put:
      summary: Set app access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Replaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only GitHub Apps that are installed on the repository and that have been granted write access to the repository contents can be added as authorized actors on a protected branch.'
      tags:
      - repos
      operationId: repos/set-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-app-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apps:
                  type: array
                  description: 'The GitHub Apps that have push access to this branch. Use the slugified version of the app name. **Note**: The list of users, apps, and teams in total is limited to 100 items.'
                  items:
                    type: string
              required:
              - apps
              example:
                apps:
                - my-app
            examples:
              default:
                value:
                  apps:
                  - octoapp
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove app access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Removes the ability of an app to push to this branch. Only GitHub Apps that are installed on the repository and that have been granted write access to the repository contents can be added as authorized actors on a protected branch.'
      tags:
      - repos
      operationId: repos/remove-app-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-app-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apps:
                  type: array
                  description: 'The GitHub Apps that have push access to this branch. Use the slugified version of the app name. **Note**: The list of users, apps, and teams in total is limited to 100 items.'
                  items:
                    type: string
              required:
              - apps
              example:
                apps:
                - my-app
            examples:
              default:
                value:
                  apps:
                  - my-app
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/integration'
              examples:
                default:
                  $ref: '#/components/examples/integration-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: apps
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams:
    get:
      summary: Get teams with access to the protected branch
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Lists the teams who have push access to this branch. The list includes child teams.'
      tags:
      - repos
      operationId: repos/get-teams-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-teams-with-access-to-the-protected-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add team access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Grants the specified teams push access for this branch. You can also give push access to child teams.'
      tags:
      - repos
      operationId: repos/add-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-team-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - my-team
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example adding a team in a branch protection rule
                value:
                  teams:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
    put:
      summary: Set team access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Replaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.'
      tags:
      - repos
      operationId: repos/set-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-team-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - justice-league
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example replacing a team in a branch protection rule
                value:
                  teams:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove team access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Removes the ability of a team to push to this branch. You can also remove push access for child teams.'
      tags:
      - repos
      operationId: repos/remove-team-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-team-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - type: object
                properties:
                  teams:
                    type: array
                    description: The slug values for teams
                    items:
                      type: string
                required:
                - teams
                example:
                  teams:
                  - my-team
              - type: array
                description: The slug values for teams
                items:
                  type: string
            examples:
              default:
                summary: Example removing a team in a branch protection rule
                value:
                  teams:
                  - octocats
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: teams
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users:
    get:
      summary: Get users with access to the protected branch
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Lists the people who have push access to this branch.'
      tags:
      - repos
      operationId: repos/get-users-with-access-to-protected-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#get-users-with-access-to-the-protected-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branch-protection
    post:
      summary: Add user access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Grants the specified people push access for this branch.


        | Type    | Description                                                                                                                   |

        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |'
      tags:
      - repos
      operationId: repos/add-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#add-user-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: The username for users
                  items:
                    type: string
              required:
              - users
              example:
                users:
                - mona
            examples:
              default:
                summary: Example adding a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    put:
      summary: Set user access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Replaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.


        | Type    | Description                                                                                                                   |

        | ------- | ----------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |'
      tags:
      - repos
      operationId: repos/set-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#set-user-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: The username for users
                  items:
                    type: string
              required:
              - users
              example:
                users:
                - mona
            examples:
              default:
                summary: Example replacing a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
    delete:
      summary: Remove user access restrictions
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Removes the ability of a user to push to this branch.


        | Type    | Description                                                                                                                                   |

        | ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |

        | `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |'
      tags:
      - repos
      operationId: repos/remove-user-access-restrictions
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branch-protection#remove-user-access-restrictions
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: array
                  description: The username for users
                  items:
                    type: string
              required:
              - users
              example:
                users:
                - mona
            examples:
              default:
                summary: Example removing a user in a branch protection rule
                value:
                  users:
                  - octocat
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        requestBodyParameterName: users
        category: branches
        subcategory: branch-protection
  /repos/{owner}/{repo}/branches/{branch}/rename:
    post:
      summary: Rename a branch
      description: 'Renames a branch in a repository.


        > [!NOTE]

        > Although the API responds immediately, the branch rename process might take some extra time to complete in the background. You won''t be able to push to the old branch name while the rename process is in progress. For more information, see "[Renaming a branch](https://docs.github.com/github/administering-a-repository/renaming-a-branch)".


        The authenticated user must have push access to the branch. If the branch is the default branch, the authenticated user must also have admin or owner permissions.


        In order to rename the default branch, fine-grained access tokens also need the `administration:write` repository permission.'
      tags:
      - repos
      operationId: repos/rename-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#rename-a-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_name:
                  type: string
                  description: The new name of the branch.
              required:
              - new_name
            examples:
              default:
                value:
                  new_name: my_renamed_branch
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/branch-with-protection'
              examples:
                default:
                  $ref: '#/components/examples/branch-with-protection'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  /repos/{owner}/{repo}/codeowners/errors:
    get:
      summary: List CODEOWNERS errors
      description: 'List any syntax errors that are detected in the CODEOWNERS

        file.


        For more information about the correct CODEOWNERS syntax,

        see "[About code owners](https://docs.github.com/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners)."'
      tags:
      - repos
      operationId: repos/codeowners-errors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-codeowners-errors
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ref
        description: 'A branch, tag or commit name used to determine which version of the CODEOWNERS file to use. Default: the repository''s default branch (e.g. `main`)'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/codeowners-errors'
              examples:
                default:
                  $ref: '#/components/examples/codeowners-errors'
        '404':
          description: Resource not found
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        previews: []
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/collaborators:
    get:
      summary: List repository collaborators
      description: 'For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.

        The `permissions` hash returned in the response contains the base role permissions of the collaborator. The `role_name` is the highest role assigned to the collaborator after considering all sources of grants, including: repo, teams, organization, and enterprise.

        There is presently not a way to differentiate between an organization level grant and a repository level grant from this endpoint response.


        Team members will include the members of child teams.


        The authenticated user must have write, maintain, or admin privileges on the repository to use this endpoint. For organization-owned repositories, the authenticated user needs to be a member of the organization.

        OAuth app tokens and personal access tokens (classic) need the `read:org` and `repo` scopes to use this endpoint.'
      tags:
      - repos
      operationId: repos/list-collaborators
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#list-repository-collaborators
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: affiliation
        description: Filter collaborators returned by their affiliation. `outside` means all outside collaborators of an organization-owned repository. `direct` means all collaborators with permissions to an organization-owned repository, regardless of organization membership status. `all` means all collaborators the authenticated user can see.
        in: query
        required: false
        schema:
          type: string
          enum:
          - outside
          - direct
          - all
          default: all
      - name: permission
        description: Filter collaborators by the permissions they have on the repository. If not specified, all collaborators will be returned.
        in: query
        required: false
        schema:
          type: string
          enum:
          - pull
          - triage
          - push
          - maintain
          - admin
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/collaborator'
              examples:
                default:
                  $ref: '#/components/examples/collaborator-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  /repos/{owner}/{repo}/collaborators/{username}:
    get:
      summary: Check if a user is a repository collaborator
      description: 'For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.


        Team members will include the members of child teams.


        The authenticated user must have push access to the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `read:org` and `repo` scopes to use this endpoint.'
      tags:
      - repos
      operationId: repos/check-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#check-if-a-user-is-a-repository-collaborator
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response if user is a collaborator
        '404':
          description: Not Found if user is not a collaborator
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
    put:
      summary: Add a repository collaborator
      description: 'Add a user to a repository with a specified level of access. If the repository is owned by an organization, this API does not add the user to the organization - a user that has repository access without being an organization member is called an "outside collaborator" (if they are not an Enterprise Managed User) or a "repository collaborator" if they are an Enterprise Managed User. These users are exempt from some organization policies - see "[Adding outside collaborators to repositories](https://docs.github.com/organizations/managing-user-access-to-your-organizations-repositories/managing-outside-collaborators/adding-outside-collaborators-to-repositories-in-your-organization)" to learn more about these collaborator types.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications).


        Adding an outside collaborator may be restricted by enterprise and organization administrators. For more information, see "[Enforcing repository management policies in your enterprise](https://docs.github.com/admin/policies/enforcing-policies-for-your-enterprise/enforcing-repository-management-policies-in-your-enterprise#enforcing-a-policy-for-inviting-outside-collaborators-to-repositories)" and "[Setting permissions for adding outside collaborators](https://docs.github.com/organizations/managing-organization-settings/setting-permissions-for-adding-outside-collaborators)" for organization settings.


        For more information on permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)". There are restrictions on which permissions can be granted to organization members when an organization base role is in place. In this case, the role being given must be equal to or higher than the org base permission. Otherwise, the request will fail with:


        ```

        Cannot assign {member} permission of {role name}

        ```


        Note that, if you choose not to pass any parameters, you''ll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."


        The invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [API](https://docs.github.com/rest/collaborators/invitations).


        For Enterprise Managed Users, this endpoint does not send invitations - these users are automatically added to organizations and repositories. Enterprise Managed Users can only be added to organizations and repositories within their enterprise.


        **Updating an existing collaborator''s permission level**


        The endpoint can also be used to change the permissions of an existing collaborator without first removing and re-adding the collaborator. To change the permissions, use the same endpoint and pass a different `permission` parameter. The response will be a `204`, with no other indication that the permission level changed.


        **Rate limits**


        You are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository.'
      tags:
      - repos
      operationId: repos/add-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#add-a-repository-collaborator
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant the collaborator. **Only valid on organization-owned repositories.** We accept the following permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin` and you can also specify a custom repository role name, if the owning organization has defined any.'
                  default: push
            examples:
              new-invitation-is-created:
                summary: Add a collaborator with triage permissions
                value:
                  permission: triage
      responses:
        '201':
          description: Response when a new invitation is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-invitation'
              examples:
                new-invitation-is-created:
                  $ref: '#/components/examples/repository-invitation-response-when-a-new-invitation-is-created'
        '204':
          description: 'Response when:

            - an existing collaborator is added as a collaborator

            - an organization member is added as an individual collaborator

            - an existing team member (whose team is also a repository collaborator) is added as an individual collaborator'
        '422':
          description: 'Response when:

            - validation failed, or the endpoint has been spammed

            - an Enterprise Managed User (EMU) account was invited to a repository in an enterprise with personal user accounts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/validation-error'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
    delete:
      summary: Remove a repository collaborator
      description: "Removes a collaborator from a repository.\n\nTo use this endpoint, the authenticated user must either be an administrator of the repository or target themselves for removal.\n\nThis endpoint also:\n- Cancels any outstanding invitations sent by the collaborator\n- Unassigns the user from any issues\n- Removes access to organization projects if the user is not an organization member and is not a collaborator on any other organization repositories.\n- Unstars the repository\n- Updates access permissions to packages\n\nRemoving a user as a collaborator has the following effects on forks:\n - If the user had access to a fork through their membership to this repository, the user will also be removed from the fork.\n - If the user had their own fork of the repository, the fork will be deleted.\n - If the user still has read access to the repository, open pull requests by this user from a fork will be denied.\n\n> [!NOTE]\n> A user can still have access to the repository through\
        \ organization permissions like base repository permissions.\n\nAlthough the API responds immediately, the additional permission updates might take some extra time to complete in the background.\n\nFor more information on fork permissions, see \"[About permissions and visibility of forks](https://docs.github.com/pull-requests/collaborating-with-pull-requests/working-with-forks/about-permissions-and-visibility-of-forks)\"."
      tags:
      - repos
      operationId: repos/remove-collaborator
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#remove-a-repository-collaborator
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: No Content when collaborator was removed from the repository.
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  /repos/{owner}/{repo}/collaborators/{username}/permission:
    get:
      summary: Get repository permissions for a user
      description: 'Checks the repository permission and role of a collaborator.


        The `permission` attribute provides the legacy base roles of `admin`, `write`, `read`, and `none`, where the

        `maintain` role is mapped to `write` and the `triage` role is mapped to `read`.

        The `role_name` attribute provides the name of the assigned role, including custom roles. The

        `permission` can also be used to determine which base level of access the collaborator has to the repository.


        The calculated permissions are the highest role assigned to the collaborator after considering all sources of grants, including: repo, teams, organization, and enterprise.

        There is presently not a way to differentiate between an organization level grant and a repository level grant from this endpoint response.'
      tags:
      - repos
      operationId: repos/get-collaborator-permission-level
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/collaborators#get-repository-permissions-for-a-user
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: if user has admin permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-collaborator-permission'
              examples:
                response-if-user-has-admin-permissions:
                  $ref: '#/components/examples/repository-collaborator-permission-response-if-user-has-admin-permissions'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: collaborators
  /repos/{owner}/{repo}/comments:
    get:
      summary: List commit comments for a repository
      description: 'Lists the commit comments for a specified repository. Comments are ordered by ascending ID.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - repos
      operationId: repos/list-commit-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#list-commit-comments-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  /repos/{owner}/{repo}/comments/{comment_id}:
    get:
      summary: Get a commit comment
      description: 'Gets a specified commit comment.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - repos
      operationId: repos/get-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#get-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    patch:
      summary: Update a commit comment
      description: 'Updates the contents of a specified commit comment.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - repos
      operationId: repos/update-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#update-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment
              required:
              - body
            examples:
              default:
                value:
                  body: Nice change
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-2'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    delete:
      summary: Delete a commit comment
      description: ''
      tags:
      - repos
      operationId: repos/delete-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#delete-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  /repos/{owner}/{repo}/commits:
    get:
      summary: List commits
      description: '**Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit''s signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |

        | `verified_at` | `string` | The date the signature was verified by GitHub. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user''s account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |'
      tags:
      - repos
      operationId: repos/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-commits
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: sha
        description: 'SHA or branch to start listing commits from. Default: the repository’s default branch (usually `main`).'
        in: query
        required: false
        schema:
          type: string
      - name: path
        description: Only commits containing this file path will be returned.
        in: query
        required: false
        schema:
          type: string
      - name: author
        description: GitHub username or email address to use to filter by commit author.
        in: query
        required: false
        schema:
          type: string
      - name: committer
        description: GitHub username or email address to use to filter by commit committer.
        in: query
        required: false
        schema:
          type: string
      - name: since
        description: 'Only show results that were last updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.'
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: until
        description: 'Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Due to limitations of Git, timestamps must be between 1970-01-01 and 2099-12-31 (inclusive) or unexpected results may be returned.'
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '500':
          $ref: '#/components/responses/internal_error'
        '400':
          $ref: '#/components/responses/bad_request'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head:
    get:
      summary: List branches for HEAD commit
      description: 'Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Returns all branches where the given commit SHA is the HEAD, or latest commit for the branch.'
      tags:
      - repos
      operationId: repos/list-branches-for-head-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-branches-for-head-commit
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-sha'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/branch-short'
              examples:
                default:
                  $ref: '#/components/examples/branch-short-items'
        '422':
          $ref: '#/components/responses/validation_failed'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  /repos/{owner}/{repo}/commits/{commit_sha}/comments:
    get:
      summary: List commit comments
      description: 'Lists the comments for a specified commit.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - repos
      operationId: repos/list-comments-for-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#list-commit-comments
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-sha'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
    post:
      summary: Create a commit comment
      description: 'Create a comment for a commit using its `:commit_sha`.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - repos
      operationId: repos/create-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/comments#create-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-sha'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The contents of the comment.
                path:
                  type: string
                  description: Relative path of the file to comment on.
                position:
                  type: integer
                  description: Line index in the diff to comment on.
                line:
                  type: integer
                  description: '**Closing down notice**. Use **position** parameter instead. Line number in the file to comment on.'
              required:
              - body
            examples:
              default:
                value:
                  body: Great stuff
                  path: file1.txt
                  position: 4
                  line: 1
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comment'
              examples:
                default:
                  $ref: '#/components/examples/commit-comment'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/comments/1
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: comments
  /repos/{owner}/{repo}/commits/{commit_sha}/pulls:
    get:
      summary: List pull requests associated with a commit
      description: 'Lists the merged pull request that introduced the commit to the repository. If the commit is not present in the default branch, it will return merged and open pull requests associated with the commit.


        To list the open or merged pull requests associated with a branch, you can set the `commit_sha` parameter to the branch name.'
      tags:
      - repos
      operationId: repos/list-pull-requests-associated-with-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#list-pull-requests-associated-with-a-commit
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-sha'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-simple'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  /repos/{owner}/{repo}/commits/{ref}:
    get:
      summary: Get a commit
      description: 'Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.


        > [!NOTE]

        > If there are more than 300 files in the commit diff and the default JSON media type is requested, the response will include pagination link headers for the remaining files, up to a limit of 3000 files. Each page contains the static commit information, and the only changes are to the file listing.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)." Pagination query parameters are not supported for these media types.


        - **`application/vnd.github.diff`**: Returns the diff of the commit. Larger diffs may time out and return a 5xx status code.

        - **`application/vnd.github.patch`**: Returns the patch of the commit. Diffs with binary data will have no `patch` property. Larger diffs may time out and return a 5xx status code.

        - **`application/vnd.github.sha`**: Returns the commit''s SHA-1 hash. You can use this endpoint to check if a remote reference''s SHA-1 hash is the same as your local reference''s SHA-1 hash by providing the local SHA-1 reference as the ETag.


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit''s signature. The following fields are included in the `verification` object:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |

        | `verified_at` | `string` | The date the signature was verified by GitHub. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user''s account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |'
      tags:
      - repos
      operationId: repos/get-commit
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#get-a-commit
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/commit-ref'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
        '503':
          $ref: '#/components/responses/service_unavailable'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  /repos/{owner}/{repo}/commits/{ref}/status:
    get:
      summary: Get the combined status for a specific reference
      description: 'Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.



        Additionally, a combined `state` is returned. The `state` is one of:


        *   **failure** if any of the contexts report as `error` or `failure`

        *   **pending** if there are no statuses or a context is `pending`

        *   **success** if the latest status for all contexts is `success`'
      tags:
      - repos
      operationId: repos/get-combined-status-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#get-the-combined-status-for-a-specific-reference
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-ref'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/combined-commit-status'
              examples:
                default:
                  $ref: '#/components/examples/combined-commit-status'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  /repos/{owner}/{repo}/commits/{ref}/statuses:
    get:
      summary: List commit statuses for a reference
      description: 'Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.


        This resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`.'
      tags:
      - repos
      operationId: repos/list-commit-statuses-for-ref
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#list-commit-statuses-for-a-reference
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/commit-ref'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/status'
              examples:
                default:
                  $ref: '#/components/examples/status-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '301':
          $ref: '#/components/responses/moved_permanently'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  /repos/{owner}/{repo}/community/profile:
    get:
      summary: Get community profile metrics
      description: 'Returns all community profile metrics for a repository. The repository cannot be a fork.


        The returned metrics include an overall health score, the repository description, the presence of documentation, the

        detected code of conduct, the detected license, and the presence of ISSUE\_TEMPLATE, PULL\_REQUEST\_TEMPLATE,

        README, and CONTRIBUTING files.


        The `health_percentage` score is defined as a percentage of how many of

        the recommended community health files are present. For more information, see

        "[About community profiles for public repositories](https://docs.github.com/communities/setting-up-your-project-for-healthy-contributions/about-community-profiles-for-public-repositories)."


        `content_reports_enabled` is only returned for organization-owned repositories.'
      tags:
      - repos
      operationId: repos/get-community-profile-metrics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/community#get-community-profile-metrics
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/community-profile'
              examples:
                default:
                  $ref: '#/components/examples/community-profile'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: community
  /repos/{owner}/{repo}/compare/{basehead}:
    get:
      summary: Compare two commits
      description: 'Compares two commits against one another. You can compare refs (branches or tags) and commit SHAs in the same repository, or you can compare refs and commit SHAs that exist in different repositories within the same repository network, including fork branches. For more information about how to view a repository''s network, see "[Understanding connections between repositories](https://docs.github.com/repositories/viewing-activity-and-data-for-your-repository/understanding-connections-between-repositories)."


        This endpoint is equivalent to running the `git log BASE..HEAD` command, but it returns commits in a different order. The `git log BASE..HEAD` command returns commits in reverse chronological order, whereas the API returns commits in chronological order.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.diff`**: Returns the diff of the commit.

        - **`application/vnd.github.patch`**: Returns the patch of the commit. Diffs with binary data will have no `patch` property.


        The API response includes details about the files that were changed between the two commits. This includes the status of the change (if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.


        When calling this endpoint without any paging parameter (`per_page` or `page`), the returned list is limited to 250 commits, and the last commit in the list is the most recent of the entire comparison.


        **Working with large comparisons**


        To process a response with a large number of commits, use a query parameter (`per_page` or `page`) to paginate the results. When using pagination:


        - The list of changed files is only shown on the first page of results, and it includes up to 300 changed files for the entire comparison.

        - The results are returned in chronological order, but the last commit in the returned list may not be the most recent one in the entire set if there are more pages of results.


        For more information on working with pagination, see "[Using pagination in the REST API](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api)."


        **Signature verification object**


        The response will include a `verification` object that describes the result of verifying the commit''s signature. The `verification` object includes the following fields:


        | Name | Type | Description |

        | ---- | ---- | ----------- |

        | `verified` | `boolean` | Indicates whether GitHub considers the signature in this commit to be verified. |

        | `reason` | `string` | The reason for verified value. Possible values and their meanings are enumerated in table below. |

        | `signature` | `string` | The signature that was extracted from the commit. |

        | `payload` | `string` | The value that was signed. |

        | `verified_at` | `string` | The date the signature was verified by GitHub. |


        These are the possible values for `reason` in the `verification` object:


        | Value | Description |

        | ----- | ----------- |

        | `expired_key` | The key that made the signature is expired. |

        | `not_signing_key` | The "signing" flag is not among the usage flags in the GPG key that made the signature. |

        | `gpgverify_error` | There was an error communicating with the signature verification service. |

        | `gpgverify_unavailable` | The signature verification service is currently unavailable. |

        | `unsigned` | The object does not include a signature. |

        | `unknown_signature_type` | A non-PGP signature was found in the commit. |

        | `no_user` | No user was associated with the `committer` email address in the commit. |

        | `unverified_email` | The `committer` email address in the commit was associated with a user, but the email address is not verified on their account. |

        | `bad_email` | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature. |

        | `unknown_key` | The key that made the signature has not been registered with any user''s account. |

        | `malformed_signature` | There was an error parsing the signature. |

        | `invalid` | The signature could not be cryptographically verified using the key whose key-id was found in the signature. |

        | `valid` | None of the above errors applied, so the signature is considered to be verified. |'
      tags:
      - repos
      operationId: repos/compare-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/commits#compare-two-commits
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - name: basehead
        description: The base branch and head branch to compare. This parameter expects the format `BASE...HEAD`. Both must be branch names in `repo`. To compare with a branch that exists in a different repository in the same network as `repo`, the `basehead` parameter expects the format `USERNAME:BASE...USERNAME:HEAD`.
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit-comparison'
              examples:
                default:
                  $ref: '#/components/examples/commit-comparison'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: commits
  /repos/{owner}/{repo}/contents/{path}:
    get:
      summary: Get repository content
      description: "Gets the contents of a file or directory in a repository. Specify the file path or directory with the `path` parameter. If you omit the `path` parameter, you will receive the contents of the repository's root directory.\n\nThis endpoint supports the following custom media types. For more information, see \"[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types).\"\n\n- **`application/vnd.github.raw+json`**: Returns the raw file contents for files and symlinks.\n- **`application/vnd.github.html+json`**: Returns the file contents in HTML. Markup languages are rendered to HTML using GitHub's open-source [Markup library](https://github.com/github/markup).\n- **`application/vnd.github.object+json`**: Returns the contents in a consistent object format regardless of the content type. For example, instead of an array of objects for a directory, the response will be an object with an `entries` attribute containing the array\
        \ of objects.\n\nIf the content is a directory, the response will be an array of objects, one object for each item in the directory. When listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value _should_ be \"submodule\". This behavior exists [for backwards compatibility purposes](https://git.io/v1YCW). In the next major version of the API, the type will be returned as \"submodule\".\n\nIf the content is a symlink and the symlink's target is a normal file in the repository, then the API responds with the content of the file. Otherwise, the API responds with an object describing the symlink itself.\n\nIf the content is a submodule, the `submodule_git_url` field identifies the location of the submodule repository, and the `sha` identifies a specific commit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out the submodule at that specific commit. If the submodule repository\
        \ is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the github.com URLs (`html_url` and `_links[\"html\"]`) will have null values.\n\n**Notes**:\n\n- To get a repository's contents recursively, you can [recursively get the tree](https://docs.github.com/rest/git/trees#get-a-tree).\n- This API has an upper limit of 1,000 files for a directory. If you need to retrieve\nmore files, use the [Git Trees API](https://docs.github.com/rest/git/trees#get-a-tree).\n- Download URLs expire and are meant to be used just once. To ensure the download URL does not expire, please use the contents API to obtain a fresh download URL for each download.\n- If the requested file's size is:\n  - 1 MB or smaller: All features of this endpoint are supported.\n  - Between 1-100 MB: Only the `raw` or `object` custom media types are supported. Both will work as normal, except that when using the `object` media type, the `content` field will be an empty\nstring and the `encoding`\
        \ field will be `\"none\"`. To get the contents of these larger files, use the `raw` media type.\n  - Greater than 100 MB: This endpoint is not supported."
      tags:
      - repos
      operationId: repos/get-content
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-repository-content
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/vnd.github.object:
              schema:
                $ref: '#/components/schemas/content-tree'
              examples:
                response-if-content-is-a-file:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-file'
                response-if-content-is-a-directory:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-directory-object'
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/content-directory'
                - $ref: '#/components/schemas/content-file'
                - $ref: '#/components/schemas/content-symlink'
                - $ref: '#/components/schemas/content-submodule'
                discriminator:
                  propertyName: type
                  mapping:
                    array: '#/components/schemas/content-directory'
                    file: '#/components/schemas/content-file'
                    symlink: '#/components/schemas/content-symlink'
                    submodule: '#/components/schemas/content-submodule'
              examples:
                response-if-content-is-a-file:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-file'
                response-if-content-is-a-directory:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-directory'
                response-if-content-is-a-symlink:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-symlink'
                response-if-content-is-a-submodule:
                  $ref: '#/components/examples/content-file-response-if-content-is-a-submodule'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '302':
          $ref: '#/components/responses/found'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    put:
      summary: Create or update file contents
      description: 'Creates a new file or replaces an existing file in a repository.


        > [!NOTE]

        > If you use this endpoint and the "[Delete a file](https://docs.github.com/rest/repos/contents/#delete-a-file)" endpoint in parallel, the concurrent requests will conflict and you will receive errors. You must use these endpoints serially instead.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint. The `workflow` scope is also required in order to modify files in the `.github/workflows` directory.'
      tags:
      - repos
      operationId: repos/create-or-update-file-contents
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#create-or-update-file-contents
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                content:
                  type: string
                  description: The new file content, using Base64 encoding.
                sha:
                  type: string
                  description: '**Required if you are updating a file**. The blob SHA of the file being replaced.'
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default branch.'
                committer:
                  type: object
                  description: 'The person that committed the file. Default: the authenticated user.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-05T13:13:22+05:00"'
                  required:
                  - name
                  - email
                author:
                  type: object
                  description: 'The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.'
                  properties:
                    name:
                      type: string
                      description: The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
                    email:
                      type: string
                      description: The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
                    date:
                      type: string
                      example: '"2013-01-15T17:13:22+05:00"'
                  required:
                  - name
                  - email
              required:
              - message
              - content
            examples:
              example-for-creating-a-file:
                summary: Example for creating a file
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgbmV3IGZpbGUgY29udGVudHM=
              example-for-updating-a-file:
                summary: Example for updating a file
                value:
                  message: a new commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  content: bXkgdXBkYXRlZCBmaWxlIGNvbnRlbnRz
                  sha: 95b966ae1c166bd92f8ae7d1c313e738c731dfc3
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                example-for-updating-a-file:
                  $ref: '#/components/examples/file-commit-example-for-updating-a-file'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                example-for-creating-a-file:
                  $ref: '#/components/examples/file-commit-example-for-creating-a-file'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/basic-error'
                - $ref: '#/components/schemas/repository-rule-violation-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
    delete:
      summary: Delete a file
      description: 'Deletes a file in a repository.


        You can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.


        The `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user''s information is used.


        You must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you''ll receive a `422` status code.


        > [!NOTE]

        > If you use this endpoint and the "[Create or update file contents](https://docs.github.com/rest/repos/contents/#create-or-update-file-contents)" endpoint in parallel, the concurrent requests will conflict and you will receive errors. You must use these endpoints serially instead.'
      tags:
      - repos
      operationId: repos/delete-file
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#delete-a-file
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: path
        description: path parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The commit message.
                sha:
                  type: string
                  description: The blob SHA of the file being deleted.
                branch:
                  type: string
                  description: 'The branch name. Default: the repository’s default branch'
                committer:
                  type: object
                  description: object containing information about the committer.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
                author:
                  type: object
                  description: object containing information about the author.
                  properties:
                    name:
                      type: string
                      description: The name of the author (or committer) of the commit
                    email:
                      type: string
                      description: The email of the author (or committer) of the commit
              required:
              - message
              - sha
            examples:
              default:
                value:
                  message: my commit message
                  committer:
                    name: Monalisa Octocat
                    email: octocat@github.com
                  sha: 329688480d39049927147c162b9d2deaf885005f
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file-commit'
              examples:
                default:
                  $ref: '#/components/examples/file-commit'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/contributors:
    get:
      summary: List repository contributors
      description: 'Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API caches contributor data to improve performance.


        GitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information.'
      tags:
      - repos
      operationId: repos/list-contributors
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-contributors
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: anon
        description: Set to `1` or `true` to include anonymous contributors in results.
        in: query
        required: false
        schema:
          type: string
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: If repository contains content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contributor'
              examples:
                response-if-repository-contains-content:
                  $ref: '#/components/examples/contributor-items-response-if-repository-contains-content'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '204':
          description: Response if repository is empty
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/deployments:
    get:
      summary: List deployments
      description: 'Simple filtering of deployments is available via query parameters:'
      tags:
      - repos
      operationId: repos/list-deployments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#list-deployments
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: sha
        description: The SHA recorded at creation time.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: ref
        description: The name of the ref. This can be a branch, tag, or SHA.
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: task
        description: The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`).
        in: query
        required: false
        schema:
          type: string
          default: none
      - name: environment
        description: The name of the environment that was deployed to (e.g., `staging` or `production`).
        in: query
        required: false
        schema:
          type: string
          default: none
          nullable: true
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deployment'
              examples:
                default:
                  $ref: '#/components/examples/deployment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
    post:
      summary: Create a deployment
      description: 'Deployments offer a few configurable parameters with certain defaults.


        The `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them

        before we merge a pull request.


        The `environment` parameter allows deployments to be issued to different runtime environments. Teams often have

        multiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter

        makes it easier to track which environments have requested deployments. The default environment is `production`.


        The `auto_merge` parameter is used to ensure that the requested ref is not behind the repository''s default branch. If

        the ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,

        the API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will

        return a failure response.


        By default, [commit statuses](https://docs.github.com/rest/commits/statuses) for every submitted context must be in a `success`

        state. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to

        specify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do

        not require any contexts or create any commit statuses, the deployment will always succeed.


        The `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text

        field that will be passed on when a deployment event is dispatched.


        The `task` parameter is used by the deployment system to allow different execution paths. In the web world this might

        be `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an

        application with debugging enabled.


        Merged branch response:


        You will see this response when GitHub automatically merges the base branch into the topic branch instead of creating

        a deployment. This auto-merge happens when:

        *   Auto-merge option is enabled in the repository

        *   Topic branch does not include the latest changes on the base branch, which is `master` in the response example

        *   There are no merge conflicts


        If there are no new commits in the base branch, a new request to create a deployment should give a successful

        response.


        Merge conflict response:


        This error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can''t

        be merged into the branch that''s being deployed (in this case `topic-branch`), due to merge conflicts.


        Failed commit status checks:


        This error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`

        status for the commit to be deployed, but one or more of the required contexts do not have a state of `success`.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `repo_deployment` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#create-a-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref:
                  type: string
                  description: The ref to deploy. This can be a branch, tag, or SHA.
                task:
                  type: string
                  description: Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
                  default: deploy
                auto_merge:
                  type: boolean
                  description: Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.
                  default: true
                required_contexts:
                  type: array
                  description: The [status](https://docs.github.com/rest/commits/statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.
                  items:
                    type: string
                payload:
                  oneOf:
                  - type: object
                    additionalProperties: true
                  - type: string
                    description: JSON payload with extra information about the deployment.
                    default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment (e.g., `production`, `staging`, `qa`).
                  default: production
                description:
                  type: string
                  description: Short description of the deployment.
                  default: ''
                  nullable: true
                transient_environment:
                  type: boolean
                  description: 'Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`'
                  default: false
                production_environment:
                  type: boolean
                  description: 'Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.'
              required:
              - ref
            examples:
              simple-example:
                summary: Simple example
                value:
                  ref: topic-branch
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
              advanced-example:
                summary: Advanced example
                value:
                  ref: topic-branch
                  auto_merge: false
                  payload: '{ "deploy": "migrate" }'
                  description: Deploy request from hubot
                  required_contexts:
                  - ci/janky
                  - security/brakeman
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
              examples:
                simple-example:
                  $ref: '#/components/examples/deployment-simple-example'
        '202':
          description: Merged branch response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                merged-branch-response:
                  value:
                    message: Auto-merged master into topic-branch on deployment.
        '409':
          description: Conflict when there is a merge conflict or the commit's status checks failed
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
  /repos/{owner}/{repo}/deployments/{deployment_id}:
    get:
      summary: Get a deployment
      description: ''
      tags:
      - repos
      operationId: repos/get-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#get-a-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/deployment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment'
              examples:
                default:
                  $ref: '#/components/examples/deployment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
    delete:
      summary: Delete a deployment
      description: 'If the repository only has one deployment, you can delete the deployment regardless of its status. If the repository has more than one deployment, you can only delete inactive deployments. This ensures that repositories with multiple deployments will always have an active deployment.


        To set a deployment as inactive, you must:


        *   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.

        *   Mark the active deployment as inactive by adding any non-successful deployment status.


        For more information, see "[Create a deployment](https://docs.github.com/rest/deployments/deployments/#create-a-deployment)" and "[Create a deployment status](https://docs.github.com/rest/deployments/statuses#create-a-deployment-status)."


        OAuth app tokens and personal access tokens (classic) need the `repo` or `repo_deployment` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/delete-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/deployments#delete-a-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/deployment-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: deployments
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses:
    get:
      summary: List deployment statuses
      description: 'Users with pull access can view deployment statuses for a deployment:'
      tags:
      - repos
      operationId: repos/list-deployment-statuses
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#list-deployment-statuses
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/deployment-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
    post:
      summary: Create a deployment status
      description: 'Users with `push` access can create deployment statuses for a given deployment.


        OAuth app tokens and personal access tokens (classic) need the `repo_deployment` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#create-a-deployment-status
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/deployment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
                  enum:
                  - error
                  - failure
                  - inactive
                  - in_progress
                  - queued
                  - pending
                  - success
                target_url:
                  type: string
                  description: 'The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment.


                    > [!NOTE]

                    > It''s recommended to use the `log_url` parameter, which replaces `target_url`.'
                  default: ''
                log_url:
                  type: string
                  description: 'The full URL of the deployment''s output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`'
                  default: ''
                description:
                  type: string
                  description: A short description of the status. The maximum description length is 140 characters.
                  default: ''
                environment:
                  type: string
                  description: Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. If not defined, the environment of the previous status on the deployment will be used, if it exists. Otherwise, the environment of the deployment will be used.
                environment_url:
                  type: string
                  description: 'Sets the URL for accessing your environment. Default: `""`'
                  default: ''
                auto_inactive:
                  type: boolean
                  description: 'Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status''s deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`'
              required:
              - state
            examples:
              default:
                value:
                  environment: production
                  state: success
                  log_url: https://example.com/deployment/42/output
                  description: Deployment finished successfully.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/example/deployments/42/statuses/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
  /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}:
    get:
      summary: Get a deployment status
      description: 'Users with pull access can view a deployment status for a deployment:'
      tags:
      - repos
      operationId: repos/get-deployment-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/statuses#get-a-deployment-status
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/deployment-id'
      - name: status_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/deployment-status'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: statuses
  /repos/{owner}/{repo}/dispatches:
    post:
      summary: Create a repository dispatch event
      description: 'You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see "[RepositoryDispatchEvent](https://docs.github.com/webhooks/event-payloads/#repository_dispatch)."


        The `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow.


        This input example shows how you can use the `client_payload` as a test to debug your workflow.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-dispatch-event
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-dispatch-event
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
              - event_type
              properties:
                event_type:
                  type: string
                  description: A custom webhook event name. Must be 100 characters or fewer.
                  minLength: 1
                  maxLength: 100
                client_payload:
                  type: object
                  description: JSON payload with extra information about the webhook event that your action or workflow may use. The maximum number of top-level properties is 10. The total size of the JSON payload must be less than 64KB.
                  additionalProperties: true
                  maxProperties: 10
            examples:
              default:
                value:
                  event_type: on-demand-test
                  client_payload:
                    unit: false
                    integration: true
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/environments:
    get:
      summary: List environments
      description: 'Lists the environments for a repository.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/get-all-environments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#list-environments
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of environments in this repository
                    example: 5
                    type: integer
                  environments:
                    type: array
                    items:
                      $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environments'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
  /repos/{owner}/{repo}/environments/{environment_name}:
    get:
      summary: Get an environment
      description: '> [!NOTE]

        > To get information about name patterns that branches must match in order to deploy to this environment, see "[Get a deployment branch policy](/rest/deployments/branch-policies#get-a-deployment-branch-policy)."


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/get-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#get-an-environment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environment'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
    put:
      summary: Create or update an environment
      description: 'Create or update an environment with protection rules, such as required reviewers. For more information about environment protection rules, see "[Environments](/actions/reference/environments#environment-protection-rules)."


        > [!NOTE]

        > To create or update name patterns that branches must match in order to deploy to this environment, see "[Deployment branch policies](/rest/deployments/branch-policies)."


        > [!NOTE]

        > To create or update secrets for an environment, see "[GitHub Actions secrets](/rest/actions/secrets)."


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-or-update-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#create-or-update-an-environment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                wait_timer:
                  $ref: '#/components/schemas/wait-timer'
                prevent_self_review:
                  $ref: '#/components/schemas/prevent-self-review'
                reviewers:
                  type: array
                  nullable: true
                  description: The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
                  items:
                    type: object
                    properties:
                      type:
                        $ref: '#/components/schemas/deployment-reviewer-type'
                      id:
                        type: integer
                        description: The id of the user or team who can review the deployment
                        example: 4532992
                deployment_branch_policy:
                  $ref: '#/components/schemas/deployment-branch-policy-settings'
              additionalProperties: false
            examples:
              default:
                value:
                  wait_timer: 30
                  prevent_self_review: false
                  reviewers:
                  - type: User
                    id: 1
                  - type: Team
                    id: 1
                  deployment_branch_policy:
                    protected_branches: false
                    custom_branch_policies: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/environment'
              examples:
                default:
                  $ref: '#/components/examples/environment'
        '422':
          description: Validation error when the environment name is invalid or when `protected_branches` and `custom_branch_policies` in `deployment_branch_policy` are set to the same value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
    delete:
      summary: Delete an environment
      description: OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.
      tags:
      - repos
      operationId: repos/delete-an-environment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/environments#delete-an-environment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      responses:
        '204':
          description: Default response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: environments
  /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies:
    get:
      summary: List deployment branch policies
      description: 'Lists the deployment branch policies for an environment.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/list-deployment-branch-policies
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#list-deployment-branch-policies
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of deployment branch policies for the environment.
                    type: integer
                    example: 2
                  branch_policies:
                    type: array
                    items:
                      $ref: '#/components/schemas/deployment-branch-policy'
                required:
                - total_count
                - branch_policies
              examples:
                default:
                  $ref: '#/components/examples/deployment-branch-policies-list'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    post:
      summary: Create a deployment branch policy
      description: 'Creates a deployment branch or tag policy for an environment.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#create-a-deployment-branch-policy
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployment-branch-policy-name-pattern-with-type'
            examples:
              example-wildcard:
                summary: Example of a wildcard name pattern
                value:
                  name: release/*
              example-single-branch:
                summary: Example of a single branch name pattern
                value:
                  name: main
                  type: branch
              example-single-tag:
                summary: Example of a single tag name pattern
                value:
                  name: v1
                  type: tag
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-branch-policy'
              examples:
                example-wildcard:
                  $ref: '#/components/examples/deployment-branch-policy-wildcard'
                example-single-branch:
                  $ref: '#/components/examples/deployment-branch-policy-single-branch'
                example-single-tag:
                  $ref: '#/components/examples/deployment-branch-policy-single-tag'
        '404':
          description: Not Found or `deployment_branch_policy.custom_branch_policies` property for the environment is set to false
        '303':
          description: Response if the same branch name pattern already exists
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
  /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}:
    get:
      summary: Get a deployment branch policy
      description: 'Gets a deployment branch or tag policy for an environment.


        Anyone with read access to the repository can use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/get-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#get-a-deployment-branch-policy
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/branch-policy-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-branch-policy'
              examples:
                default:
                  $ref: '#/components/examples/deployment-branch-policy-wildcard'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    put:
      summary: Update a deployment branch policy
      description: 'Updates a deployment branch or tag policy for an environment.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/update-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#update-a-deployment-branch-policy
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/branch-policy-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deployment-branch-policy-name-pattern'
            examples:
              default:
                value:
                  name: release/*
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-branch-policy'
              examples:
                default:
                  $ref: '#/components/examples/deployment-branch-policy-wildcard'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
    delete:
      summary: Delete a deployment branch policy
      description: 'Deletes a deployment branch or tag policy for an environment.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/delete-deployment-branch-policy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/branch-policies#delete-a-deployment-branch-policy
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/branch-policy-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: branch-policies
  /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules:
    get:
      summary: Get all deployment protection rules for an environment
      description: 'Gets all custom deployment protection rules that are enabled for an environment. Anyone with read access to the repository can use this endpoint. For more information about environments, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment)."


        For more information about the app that is providing this custom deployment rule, see the [documentation for the `GET /apps/{app_slug}` endpoint](https://docs.github.com/rest/apps/apps#get-an-app).


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/get-all-deployment-protection-rules
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#get-all-deployment-protection-rules-for-an-environment
      parameters:
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/owner'
      responses:
        '200':
          description: List of deployment protection rules
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The number of enabled custom deployment protection rules for this environment
                    type: integer
                    example: 10
                  custom_deployment_protection_rules:
                    type: array
                    items:
                      $ref: '#/components/schemas/deployment-protection-rule'
                example:
                  $ref: '#/components/examples/deployment-protection-rules'
              examples:
                default:
                  value:
                    total_count: 2
                    custom_deployment_protection_rules:
                    - id: 3
                      node_id: IEH37kRlcGxveW1lbnRTdGF0ddiv
                      enabled: true
                      app:
                        id: 1
                        node_id: GHT58kRlcGxveW1lbnRTdTY!bbcy
                        slug: a-custom-app
                        integration_url: https://api.github.com/apps/a-custom-app
                    - id: 4
                      node_id: MDE2OkRlcGxveW1lbnRTdHJ41128
                      enabled: true
                      app:
                        id: 1
                        node_id: UHVE67RlcGxveW1lbnRTdTY!jfeuy
                        slug: another-custom-app
                        integration_url: https://api.github.com/apps/another-custom-app
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
    post:
      summary: Create a custom deployment protection rule on an environment
      description: 'Enable a custom deployment protection rule for an environment.


        The authenticated user must have admin or owner permissions to the repository to use this endpoint.


        For more information about the app that is providing this custom deployment rule, see the [documentation for the `GET /apps/{app_slug}` endpoint](https://docs.github.com/rest/apps/apps#get-an-app), as well as the [guide to creating custom deployment protection rules](https://docs.github.com/actions/managing-workflow-runs-and-deployments/managing-deployments/creating-custom-deployment-protection-rules).


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#create-a-custom-deployment-protection-rule-on-an-environment
      parameters:
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/owner'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                integration_id:
                  type: integer
                  description: The ID of the custom app that will be enabled on the environment.
            examples:
              default:
                value:
                  integration_id: 5
        required: true
      responses:
        '201':
          description: The enabled custom deployment protection rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-protection-rule'
              examples:
                default:
                  $ref: '#/components/examples/deployment-protection-rule'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps:
    get:
      summary: List custom deployment rule integrations available for an environment
      description: 'Gets all custom deployment protection rule integrations that are available for an environment.


        The authenticated user must have admin or owner permissions to the repository to use this endpoint.


        For more information about environments, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment)."


        For more information about the app that is providing this custom deployment rule, see "[GET an app](https://docs.github.com/rest/apps/apps#get-an-app)".


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/list-custom-deployment-rule-integrations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#list-custom-deployment-rule-integrations-available-for-an-environment
      parameters:
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: A list of custom deployment rule integrations available for this environment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    description: The total number of custom deployment protection rule integrations available for this environment.
                    type: integer
                    example: 35
                  available_custom_deployment_protection_rule_integrations:
                    type: array
                    items:
                      $ref: '#/components/schemas/custom-deployment-rule-app'
              examples:
                default:
                  $ref: '#/components/examples/custom-deployment-protection-rule-apps'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}:
    get:
      summary: Get a custom deployment protection rule
      description: 'Gets an enabled custom deployment protection rule for an environment. Anyone with read access to the repository can use this endpoint. For more information about environments, see "[Using environments for deployment](https://docs.github.com/actions/deployment/targeting-different-environments/using-environments-for-deployment)."


        For more information about the app that is providing this custom deployment rule, see [`GET /apps/{app_slug}`](https://docs.github.com/rest/apps/apps#get-an-app).


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/get-custom-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#get-a-custom-deployment-protection-rule
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/protection-rule-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deployment-protection-rule'
              examples:
                default:
                  $ref: '#/components/examples/deployment-protection-rule'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
    delete:
      summary: Disable a custom protection rule for an environment
      description: 'Disables a custom deployment protection rule for an environment.


        The authenticated user must have admin or owner permissions to the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/disable-deployment-protection-rule
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deployments/protection-rules#disable-a-custom-protection-rule-for-an-environment
      parameters:
      - $ref: '#/components/parameters/environment-name'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/protection-rule-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deployments
        subcategory: protection-rules
  /repos/{owner}/{repo}/forks:
    get:
      summary: List forks
      description: ''
      tags:
      - repos
      operationId: repos/list-forks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/forks#list-forks
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: sort
        description: The sort order. `stargazers` will sort by star count.
        in: query
        required: false
        schema:
          type: string
          enum:
          - newest
          - oldest
          - stargazers
          - watchers
          default: newest
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items-2'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '400':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
    post:
      summary: Create a fork
      description: 'Create a fork for the authenticated user.


        > [!NOTE]

        > Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).


        > [!NOTE]

        > Although this endpoint works with GitHub Apps, the GitHub App must be installed on the destination account with access to all repositories and on the source account with access to the source repository.'
      tags:
      - repos
      operationId: repos/create-fork
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/forks#create-a-fork
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                organization:
                  type: string
                  description: Optional parameter to specify the organization name if forking into an organization.
                name:
                  type: string
                  description: When forking from an existing repository, a new name for the fork.
                default_branch_only:
                  type: boolean
                  description: When forking from an existing repository, fork with only the default branch.
            examples:
              default:
                value:
                  organization: octocat
                  name: Hello-World
                  default_branch_only: true
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: forks
  /repos/{owner}/{repo}/hooks:
    get:
      summary: List repository webhooks
      description: Lists webhooks for a repository. `last response` may return null if there have not been any deliveries within 30 days.
      tags:
      - repos
      operationId: repos/list-webhooks
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#list-repository-webhooks
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    post:
      summary: Create a repository webhook
      description: 'Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can

        share the same `config` as long as those webhooks do not have any `events` that overlap.'
      tags:
      - repos
      operationId: repos/create-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#create-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                name:
                  type: string
                  description: 'Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.'
                config:
                  type: object
                  description: Key/value pairs to provide settings for this webhook.
                  properties:
                    url:
                      $ref: '#/components/schemas/webhook-config-url'
                    content_type:
                      $ref: '#/components/schemas/webhook-config-content-type'
                    secret:
                      $ref: '#/components/schemas/webhook-config-secret'
                    insecure_ssl:
                      $ref: '#/components/schemas/webhook-config-insecure-ssl'
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.
                  default:
                  - push
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
              additionalProperties: false
            examples:
              default:
                value:
                  name: web
                  active: true
                  events:
                  - push
                  - pull_request
                  config:
                    url: https://example.com/webhook
                    content_type: json
                    insecure_ssl: '0'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/hooks/12345678
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}:
    get:
      summary: Get a repository webhook
      description: Returns a webhook configured in a repository. To get only the webhook `config` properties, see "[Get a webhook configuration for a repository](/rest/webhooks/repo-config#get-a-webhook-configuration-for-a-repository)."
      tags:
      - repos
      operationId: repos/get-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#get-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    patch:
      summary: Update a repository webhook
      description: Updates a webhook configured in a repository. If you previously had a `secret` set, you must provide the same `secret` or set a new `secret` or the secret will be removed. If you are only updating individual webhook `config` properties, use "[Update a webhook configuration for a repository](/rest/webhooks/repo-config#update-a-webhook-configuration-for-a-repository)."
      tags:
      - repos
      operationId: repos/update-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#update-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                config:
                  $ref: '#/components/schemas/webhook-config'
                events:
                  type: array
                  description: Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.
                  default:
                  - push
                  items:
                    type: string
                add_events:
                  type: array
                  description: Determines a list of events to be added to the list of events that the Hook triggers for.
                  items:
                    type: string
                remove_events:
                  type: array
                  description: Determines a list of events to be removed from the list of events that the Hook triggers for.
                  items:
                    type: string
                active:
                  type: boolean
                  description: Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
                  default: true
            examples:
              default:
                value:
                  active: true
                  add_events:
                  - pull_request
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook'
              examples:
                default:
                  $ref: '#/components/examples/hook'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    delete:
      summary: Delete a repository webhook
      description: 'Delete a webhook for an organization.


        The authenticated user must be a repository owner, or have admin access in the repository, to delete the webhook.'
      tags:
      - repos
      operationId: repos/delete-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#delete-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/config:
    get:
      summary: Get a webhook configuration for a repository
      description: 'Returns the webhook configuration for a repository. To get more information about the webhook, including the `active` state and `events`, use "[Get a repository webhook](/rest/webhooks/repos#get-a-repository-webhook)."


        OAuth app tokens and personal access tokens (classic) need the `read:repo_hook` or `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/get-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#get-a-webhook-configuration-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
    patch:
      summary: Update a webhook configuration for a repository
      description: 'Updates the webhook configuration for a repository. To update more information about the webhook, including the `active` state and `events`, use "[Update a repository webhook](/rest/webhooks/repos#update-a-repository-webhook)."


        OAuth app tokens and personal access tokens (classic) need the `write:repo_hook` or `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/update-webhook-config-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#update-a-webhook-configuration-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                url:
                  $ref: '#/components/schemas/webhook-config-url'
                content_type:
                  $ref: '#/components/schemas/webhook-config-content-type'
                secret:
                  $ref: '#/components/schemas/webhook-config-secret'
                insecure_ssl:
                  $ref: '#/components/schemas/webhook-config-insecure-ssl'
            examples:
              default:
                summary: Example of updating content type and URL
                value:
                  content_type: json
                  url: https://example.com/webhook
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-config'
              examples:
                default:
                  $ref: '#/components/examples/webhook-config'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries:
    get:
      summary: List deliveries for a repository webhook
      description: Returns a list of webhook deliveries for a webhook configured in a repository.
      tags:
      - repos
      operationId: repos/list-webhook-deliveries
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#list-deliveries-for-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/cursor'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/hook-delivery-item'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery-items'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}:
    get:
      summary: Get a delivery for a repository webhook
      description: Returns a delivery for a webhook configured in a repository.
      tags:
      - repos
      operationId: repos/get-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#get-a-delivery-for-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/delivery-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hook-delivery'
              examples:
                default:
                  $ref: '#/components/examples/hook-delivery'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts:
    post:
      summary: Redeliver a delivery for a repository webhook
      description: Redeliver a webhook delivery for a webhook configured in a repository.
      tags:
      - repos
      operationId: repos/redeliver-webhook-delivery
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#redeliver-a-delivery-for-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      - $ref: '#/components/parameters/delivery-id'
      responses:
        '202':
          $ref: '#/components/responses/accepted'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/pings:
    post:
      summary: Ping a repository webhook
      description: This will trigger a [ping event](https://docs.github.com/webhooks/#ping-event) to be sent to the hook.
      tags:
      - repos
      operationId: repos/ping-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#ping-a-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/hooks/{hook_id}/tests:
    post:
      summary: Test the push repository webhook
      description: 'This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.


        > [!NOTE]

        > Previously `/repos/:owner/:repo/hooks/:hook_id/test`'
      tags:
      - repos
      operationId: repos/test-push-webhook
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/webhooks#test-the-push-repository-webhook
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/hook-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: webhooks
  /repos/{owner}/{repo}/invitations:
    get:
      summary: List repository invitations
      description: When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations.
      tags:
      - repos
      operationId: repos/list-invitations
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#list-repository-invitations
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
  /repos/{owner}/{repo}/invitations/{invitation_id}:
    patch:
      summary: Update a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/update-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#update-a-repository-invitation
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/invitation-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permissions:
                  type: string
                  description: The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
                  enum:
                  - read
                  - write
                  - maintain
                  - triage
                  - admin
            examples:
              default:
                summary: Example request body
                value:
                  permissions: write
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
    delete:
      summary: Delete a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/delete-invitation
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#delete-a-repository-invitation
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: collaborators
        subcategory: invitations
  /repos/{owner}/{repo}/keys:
    get:
      summary: List deploy keys
      description: ''
      tags:
      - repos
      operationId: repos/list-deploy-keys
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#list-deploy-keys
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
    post:
      summary: Create a deploy key
      description: You can create a read-only deploy key.
      tags:
      - repos
      operationId: repos/create-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#create-a-deploy-key
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: A name for the key.
                key:
                  type: string
                  description: The contents of the key.
                read_only:
                  type: boolean
                  description: "If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  \n  \nDeploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\""
              required:
              - key
            examples:
              default:
                value:
                  title: octocat@octomac
                  key: ssh-rsa AAA...
                  read_only: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/keys/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
  /repos/{owner}/{repo}/keys/{key_id}:
    get:
      summary: Get a deploy key
      description: ''
      tags:
      - repos
      operationId: repos/get-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#get-a-deploy-key
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/key-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy-key'
              examples:
                default:
                  $ref: '#/components/examples/deploy-key'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
    delete:
      summary: Delete a deploy key
      description: Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead.
      tags:
      - repos
      operationId: repos/delete-deploy-key
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/deploy-keys/deploy-keys#delete-a-deploy-key
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/key-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: deploy-keys
        subcategory: deploy-keys
  /repos/{owner}/{repo}/languages:
    get:
      summary: List repository languages
      description: Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language.
      tags:
      - repos
      operationId: repos/list-languages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-languages
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/language'
              examples:
                default:
                  $ref: '#/components/examples/language'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/merge-upstream:
    post:
      summary: Sync a fork branch with the upstream repository
      description: Sync a branch of a forked repository to keep it up-to-date with the upstream repository.
      tags:
      - repos
      operationId: repos/merge-upstream
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#sync-a-fork-branch-with-the-upstream-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: string
                  description: The name of the branch which should be updated to match upstream.
              required:
              - branch
            examples:
              default:
                value:
                  branch: main
      responses:
        '200':
          description: The branch has been successfully synced with the upstream repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/merged-upstream'
              examples:
                default:
                  $ref: '#/components/examples/merged-upstream'
        '409':
          description: The branch could not be synced because of a merge conflict
        '422':
          description: The branch could not be synced for some other reason
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  /repos/{owner}/{repo}/merges:
    post:
      summary: Merge a branch
      description: ''
      tags:
      - repos
      operationId: repos/merge
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/branches/branches#merge-a-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base:
                  type: string
                  description: The name of the base branch that the head will be merged into.
                head:
                  type: string
                  description: The head to merge. This can be a branch name or a commit SHA1.
                commit_message:
                  type: string
                  description: Commit message to use for the merge commit. If omitted, a default message will be used.
              required:
              - base
              - head
            examples:
              default:
                value:
                  base: master
                  head: cool_feature
                  commit_message: Shipped cool_feature!
      responses:
        '201':
          description: Successful Response (The resulting merge commit)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit'
        '204':
          description: Response when already merged
        '404':
          description: Not Found when the base or head does not exist
        '409':
          description: Conflict when there is a merge conflict
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: branches
        subcategory: branches
  /repos/{owner}/{repo}/pages:
    get:
      summary: Get a GitHub Pages site
      description: 'Gets information about a GitHub Pages site.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/get-pages
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-a-apiname-pages-site
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page'
              examples:
                default:
                  $ref: '#/components/examples/page'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    post:
      summary: Create a GitHub Pages site
      description: 'Configures a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages)."


        The authenticated user must be a repository administrator, maintainer, or have the ''manage GitHub Pages settings'' permission.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/create-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#create-a-apiname-pages-site
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The source branch and directory used to publish your Pages site.
              nullable: true
              properties:
                build_type:
                  type: string
                  description: The process in which the Page will be built. Possible values are `"legacy"` and `"workflow"`.
                  enum:
                  - legacy
                  - workflow
                source:
                  type: object
                  description: The source branch and directory used to publish your Pages site.
                  properties:
                    branch:
                      type: string
                      description: The repository branch used to publish your site's source files.
                    path:
                      type: string
                      description: 'The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`'
                      enum:
                      - /
                      - /docs
                      default: /
                  required:
                  - branch
              anyOf:
              - required:
                - source
              - required:
                - build_type
            examples:
              default:
                value:
                  source:
                    branch: main
                    path: /docs
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page'
              examples:
                default:
                  $ref: '#/components/examples/page'
        '422':
          $ref: '#/components/responses/validation_failed'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    put:
      summary: Update information about a GitHub Pages site
      description: 'Updates information for a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).


        The authenticated user must be a repository administrator, maintainer, or have the ''manage GitHub Pages settings'' permission.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/update-information-about-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#update-information-about-a-apiname-pages-site
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                cname:
                  type: string
                  description: Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see "[Using a custom domain with GitHub Pages](https://docs.github.com/pages/configuring-a-custom-domain-for-your-github-pages-site)."
                  nullable: true
                https_enforced:
                  type: boolean
                  description: Specify whether HTTPS should be enforced for the repository.
                build_type:
                  type: string
                  description: The process by which the GitHub Pages site will be built. `workflow` means that the site is built by a custom GitHub Actions workflow. `legacy` means that the site is built by GitHub when changes are pushed to a specific branch.
                  enum:
                  - legacy
                  - workflow
                source:
                  anyOf:
                  - type: string
                    description: Update the source for the repository. Must include the branch name, and may optionally specify the subdirectory `/docs`. Possible values are `"gh-pages"`, `"master"`, and `"master /docs"`.
                    enum:
                    - gh-pages
                    - master
                    - master /docs
                  - type: object
                    description: Update the source for the repository. Must include the branch name and path.
                    properties:
                      branch:
                        type: string
                        description: The repository branch used to publish your site's source files.
                      path:
                        type: string
                        description: The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`.
                        enum:
                        - /
                        - /docs
                    required:
                    - branch
                    - path
              anyOf:
              - required:
                - build_type
              - required:
                - source
              - required:
                - cname
              - required:
                - public
              - required:
                - https_enforced
            examples:
              default:
                value:
                  cname: octocatblog.com
                  source:
                    branch: main
                    path: /
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
        '400':
          $ref: '#/components/responses/bad_request'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    delete:
      summary: Delete a GitHub Pages site
      description: 'Deletes a GitHub Pages site. For more information, see "[About GitHub Pages](/github/working-with-github-pages/about-github-pages).


        The authenticated user must be a repository administrator, maintainer, or have the ''manage GitHub Pages settings'' permission.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/delete-pages-site
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#delete-a-apiname-pages-site
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds:
    get:
      summary: List GitHub Pages builds
      description: 'Lists builts of a GitHub Pages site.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/list-pages-builds
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#list-apiname-pages-builds
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
    post:
      summary: Request a GitHub Pages build
      description: 'You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.


        Build requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes.'
      tags:
      - repos
      operationId: repos/request-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#request-a-apiname-pages-build
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build-status'
              examples:
                default:
                  $ref: '#/components/examples/page-build-status'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds/latest:
    get:
      summary: Get latest Pages build
      description: 'Gets information about the single most recent build of a GitHub Pages site.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/get-latest-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-latest-pages-build
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/builds/{build_id}:
    get:
      summary: Get GitHub Pages build
      description: 'Gets information about a GitHub Pages build.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/get-pages-build
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-apiname-pages-build
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: build_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-build'
              examples:
                default:
                  $ref: '#/components/examples/page-build'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/deployments:
    post:
      summary: Create a GitHub Pages deployment
      description: 'Create a GitHub Pages deployment for a repository.


        The authenticated user must have write permission to the repository.'
      tags:
      - repos
      operationId: repos/create-pages-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#create-a-github-pages-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: The object used to create GitHub Pages deployment
              properties:
                artifact_id:
                  type: number
                  description: The ID of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository. Either `artifact_id` or `artifact_url` are required.
                artifact_url:
                  type: string
                  description: The URL of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository. Either `artifact_id` or `artifact_url` are required.
                environment:
                  type: string
                  description: The target environment for this GitHub Pages deployment.
                  default: github-pages
                pages_build_version:
                  type: string
                  description: A unique string that represents the version of the build for this deployment.
                  default: GITHUB_SHA
                oidc_token:
                  type: string
                  description: The OIDC token issued by GitHub Actions certifying the origin of the deployment.
              required:
              - pages_build_version
              - oidc_token
            examples:
              default:
                value:
                  artifact_url: https://downloadcontent/
                  environment: github-pages
                  pages_build_version: 4fd754f7e594640989b406850d0bc8f06a121251
                  oidc_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6IlV2R1h4SUhlY0JFc1JCdEttemUxUEhfUERiVSIsImtpZCI6IjUyRjE5N0M0ODFERTcwMTEyQzQ0MUI0QTlCMzdCNTNDN0ZDRjBEQjUifQ.eyJqdGkiOiJhMWIwNGNjNy0zNzZiLTQ1N2QtOTMzNS05NTY5YmVjZDExYTIiLCJzdWIiOiJyZXBvOnBhcGVyLXNwYS9taW55aTplbnZpcm9ubWVudDpQcm9kdWN0aW9uIiwiYXVkIjoiaHR0cHM6Ly9naXRodWIuY29tL3BhcGVyLXNwYSIsInJlZiI6InJlZnMvaGVhZHMvbWFpbiIsInNoYSI6ImEyODU1MWJmODdiZDk3NTFiMzdiMmM0YjM3M2MxZjU3NjFmYWM2MjYiLCJyZXBvc2l0b3J5IjoicGFwZXItc3BhL21pbnlpIiwicmVwb3NpdG9yeV9vd25lciI6InBhcGVyLXNwYSIsInJ1bl9pZCI6IjE1NDY0NTkzNjQiLCJydW5fbnVtYmVyIjoiMzQiLCJydW5fYXR0ZW1wdCI6IjYiLCJhY3RvciI6IllpTXlzdHkiLCJ3b3JrZmxvdyI6IkNJIiwiaGVhZF9yZWYiOiIiLCJiYXNlX3JlZiI6IiIsImV2ZW50X25hbWUiOiJwdXNoIiwicmVmX3R5cGUiOiJicmFuY2giLCJlbnZpcm9ubWVudCI6IlByb2R1Y3Rpb24iLCJqb2Jfd29ya2Zsb3dfcmVmIjoicGFwZXItc3BhL21pbnlpLy5naXRodWIvd29ya2Zsb3dzL2JsYW5rLnltbEByZWZzL2hlYWRzL21haW4iLCJpc3MiOiJodHRwczovL3Rva2VuLmFjdGlvbnMuZ2l0aHVidXNlcmNvbnRlbnQuY29tIiwibmJmIjoxNjM5MDAwODU2LCJleHAiOjE2MzkwMDE3NTYsImlhdCI6MTYzOTAwMTQ1Nn0.VP8WictbQECKozE2SgvKb2FqJ9hisWsoMkYRTqfBrQfZTCXi5IcFEdgDMB2X7a99C2DeUuTvHh9RMKXLL2a0zg3-Sd7YrO7a2ll2kNlnvyIypcN6AeIc7BxHsTTnZN9Ud_xmEsTrSRGOEKmzCFkULQ6N4zlVD0sidypmXlMemmWEcv_ZHqhioEI_VMp5vwXQurketWH7qX4oDgG4okyYtPrv5RQHbfQcVo9izaPJ_jnsDd0CBA0QOx9InjPidtIkMYQLyUgJy33HLJy86EFNUnAf8UhBQuQi5mAsEpEzBBuKpG3PDiPtYCHOk64JZkZGd5mR888a5sbHRiaF8hm8YA
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/page-deployment'
              examples:
                default:
                  $ref: '#/components/examples/page-deployment'
        '400':
          $ref: '#/components/responses/bad_request'
        '422':
          $ref: '#/components/responses/validation_failed'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}:
    get:
      summary: Get the status of a GitHub Pages deployment
      description: 'Gets the current status of a GitHub Pages deployment.


        The authenticated user must have read permission for the GitHub Pages site.'
      tags:
      - repos
      operationId: repos/get-pages-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-the-status-of-a-github-pages-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pages-deployment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages-deployment-status'
              examples:
                default:
                  $ref: '#/components/examples/pages-deployment-status'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel:
    post:
      summary: Cancel a GitHub Pages deployment
      description: 'Cancels a GitHub Pages deployment.


        The authenticated user must have write permissions for the GitHub Pages site.'
      tags:
      - repos
      operationId: repos/cancel-pages-deployment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#cancel-a-github-pages-deployment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pages-deployment-id'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/pages/health:
    get:
      summary: Get a DNS health check for GitHub Pages
      description: 'Gets a health check of the DNS settings for the `CNAME` record configured for a repository''s GitHub Pages.


        The first request to this endpoint returns a `202 Accepted` status and starts an asynchronous background task to get the results for the domain. After the background task completes, subsequent requests to this endpoint return a `200 OK` status with the health check results in the response.


        The authenticated user must be a repository administrator, maintainer, or have the ''manage GitHub Pages settings'' permission to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      tags:
      - repos
      operationId: repos/get-pages-health-check
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pages/pages#get-a-dns-health-check-for-github-pages
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pages-health-check'
              examples:
                default:
                  $ref: '#/components/examples/pages-health-check'
        '202':
          description: Empty response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/empty-object'
              examples:
                default:
                  value: null
        '400':
          description: Custom domains are not available for GitHub Pages
        '422':
          description: There isn't a CNAME for this page
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pages
        subcategory: pages
  /repos/{owner}/{repo}/private-vulnerability-reporting:
    get:
      summary: Check if private vulnerability reporting is enabled for a repository
      description: Returns a boolean indicating whether or not private vulnerability reporting is enabled for the repository. For more information, see "[Evaluating the security settings of a repository](https://docs.github.com/code-security/security-advisories/working-with-repository-security-advisories/evaluating-the-security-settings-of-a-repository)".
      tags:
      - repos
      operationId: repos/check-private-vulnerability-reporting
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#check-if-private-vulnerability-reporting-is-enabled-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Private vulnerability reporting status
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                    description: Whether or not private vulnerability reporting is enabled for the repository.
                required:
                - enabled
              examples:
                default:
                  value:
                    enabled: true
        '422':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Enable private vulnerability reporting for a repository
      description: Enables private vulnerability reporting for a repository. The authenticated user must have admin access to the repository. For more information, see "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)."
      tags:
      - repos
      operationId: repos/enable-private-vulnerability-reporting
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-private-vulnerability-reporting-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '422':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable private vulnerability reporting for a repository
      description: Disables private vulnerability reporting for a repository. The authenticated user must have admin access to the repository. For more information, see "[Privately reporting a security vulnerability](https://docs.github.com/code-security/security-advisories/guidance-on-reporting-and-writing/privately-reporting-a-security-vulnerability)".
      tags:
      - repos
      operationId: repos/disable-private-vulnerability-reporting
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-private-vulnerability-reporting-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          $ref: '#/components/responses/no_content'
        '422':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/properties/values:
    get:
      summary: Get all custom property values for a repository
      description: 'Gets all custom property values that are set for a repository.

        Users with read access to the repository can use this endpoint.'
      tags:
      - repos
      operationId: repos/get-custom-properties-values
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/custom-properties#get-all-custom-property-values-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/custom-property-value'
              examples:
                default:
                  $ref: '#/components/examples/custom-property-values'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: custom-properties
    patch:
      summary: Create or update custom property values for a repository
      description: 'Create new or update existing custom property values for a repository.

        Using a value of `null` for a custom property will remove or ''unset'' the property value from the repository.


        Repository admins and other users with the repository-level "edit custom property values" fine-grained permission can use this endpoint.'
      tags:
      - repos
      operationId: repos/create-or-update-custom-properties-values
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/custom-properties#create-or-update-custom-property-values-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                properties:
                  type: array
                  description: A list of custom property names and associated values to apply to the repositories.
                  items:
                    $ref: '#/components/schemas/custom-property-value'
              required:
              - properties
            examples:
              default:
                $ref: '#/components/examples/create-or-update-custom-properties-values'
      responses:
        '204':
          description: No Content when custom property values are successfully created or updated
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: custom-properties
  /repos/{owner}/{repo}/readme:
    get:
      summary: Get a repository README
      description: 'Gets the preferred README for a repository.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw file contents. This is the default if you do not specify a media type.

        - **`application/vnd.github.html+json`**: Returns the README in HTML. Markup languages are rendered to HTML using GitHub''s open-source [Markup library](https://github.com/github/markup).'
      tags:
      - repos
      operationId: repos/get-readme
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-a-repository-readme
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/content-file'
              examples:
                default:
                  $ref: '#/components/examples/content-file'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/readme/{dir}:
    get:
      summary: Get a repository README for a directory
      description: 'Gets the README from a repository directory.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw file contents. This is the default if you do not specify a media type.

        - **`application/vnd.github.html+json`**: Returns the README in HTML. Markup languages are rendered to HTML using GitHub''s open-source [Markup library](https://github.com/github/markup).'
      tags:
      - repos
      operationId: repos/get-readme-in-directory
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#get-a-repository-readme-for-a-directory
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: dir
        description: The alternate path to look for a README file
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      - name: ref
        description: 'The name of the commit/branch/tag. Default: the repository’s default branch.'
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/content-file'
              examples:
                default:
                  $ref: '#/components/examples/content-file'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/releases:
    get:
      summary: List releases
      description: 'This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://docs.github.com/rest/repos/repos#list-repository-tags).


        Information about published releases are available to everyone. Only users with push access will receive listings for draft releases.'
      tags:
      - repos
      operationId: repos/list-releases
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#list-releases
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    post:
      summary: Create a release
      description: 'Users with push access to the repository can create a release.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."'
      tags:
      - repos
      operationId: repos/create-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#create-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch.'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: '`true` to create a draft (unpublished) release, `false` to create a published one.'
                  default: false
                prerelease:
                  type: boolean
                  description: '`true` to identify the release as a prerelease. `false` to identify the release as a full release.'
                  default: false
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
                generate_release_notes:
                  type: boolean
                  description: Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be used; otherwise, a name will be automatically generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.
                  default: false
                make_latest:
                  type: string
                  description: Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.
                  enum:
                  - 'true'
                  - 'false'
                  - legacy
                  default: 'true'
              required:
              - tag_name
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: master
                  name: v1.0.0
                  body: Description of the release
                  draft: false
                  prerelease: false
                  generate_release_notes: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/releases/1
              schema:
                type: string
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  /repos/{owner}/{repo}/releases/assets/{asset_id}:
    get:
      summary: Get a release asset
      description: "To download the asset's binary content:\n\n- If within a browser, fetch the location specified in the `browser_download_url` key provided in the response.\n- Alternatively, set the `Accept` header of the request to \n  [`application/octet-stream`](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types). \n  The API will either redirect the client to the location, or stream it directly if possible.\n  API clients should handle both a `200` or `302` response."
      tags:
      - repos
      operationId: repos/get-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#get-a-release-asset
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/asset-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset'
        '404':
          $ref: '#/components/responses/not_found'
        '302':
          $ref: '#/components/responses/found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    patch:
      summary: Update a release asset
      description: Users with push access to the repository can edit a release asset.
      tags:
      - repos
      operationId: repos/update-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#update-a-release-asset
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/asset-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The file name of the asset.
                label:
                  type: string
                  description: An alternate short description of the asset. Used in place of the filename.
                state:
                  type: string
                  example: '"uploaded"'
            examples:
              default:
                value:
                  name: foo-1.0.0-osx.zip
                  label: Mac binary
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    delete:
      summary: Delete a release asset
      description: ''
      tags:
      - repos
      operationId: repos/delete-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#delete-a-release-asset
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/asset-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
  /repos/{owner}/{repo}/releases/generate-notes:
    post:
      summary: Generate release notes content for a release
      description: Generate a name and body describing a [release](https://docs.github.com/rest/releases/releases#get-a-release). The body content will be markdown formatted and contain information like the changes since last release and users who contributed. The generated release notes are not saved anywhere. They are intended to be generated and used when creating a new release.
      tags:
      - repos
      operationId: repos/generate-release-notes
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#generate-release-notes-content-for-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The tag name for the release. This can be an existing tag or a new one.
                target_commitish:
                  type: string
                  description: Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not reference an existing tag. Ignored if the tag_name already exists.
                previous_tag_name:
                  type: string
                  description: The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for the set of changes considered as part this release.
                configuration_file_path:
                  type: string
                  description: Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or '.github/release.yaml' will be used. If that is not present, the default configuration will be used.
              required:
              - tag_name
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: main
                  previous_tag_name: v0.9.2
                  configuration_file_path: .github/custom_release_config.yml
      responses:
        '200':
          description: Name and body of generated release notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-notes-content'
              examples:
                default:
                  $ref: '#/components/examples/release-notes-content'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  /repos/{owner}/{repo}/releases/latest:
    get:
      summary: Get the latest release
      description: 'View the latest published full release for the repository.


        The latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published.'
      tags:
      - repos
      operationId: repos/get-latest-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-the-latest-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  /repos/{owner}/{repo}/releases/tags/{tag}:
    get:
      summary: Get a release by tag name
      description: Get a published release with the specified tag.
      tags:
      - repos
      operationId: repos/get-release-by-tag
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-a-release-by-tag-name
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: tag
        description: tag parameter
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  /repos/{owner}/{repo}/releases/{release_id}:
    get:
      summary: Get a release
      description: 'Gets a public release with the specified release ID.


        > [!NOTE]

        > This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a hypermedia resource. For more information, see "[Getting started with the REST API](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#hypermedia)."'
      tags:
      - repos
      operationId: repos/get-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#get-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      responses:
        '200':
          description: '**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a hypermedia resource. For more information, see "[Getting started with the REST API](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#hypermedia)."'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '401':
          description: Unauthorized
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    patch:
      summary: Update a release
      description: Users with push access to the repository can edit a release.
      tags:
      - repos
      operationId: repos/update-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#update-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                tag_name:
                  type: string
                  description: The name of the tag.
                target_commitish:
                  type: string
                  description: 'Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository''s default branch.'
                name:
                  type: string
                  description: The name of the release.
                body:
                  type: string
                  description: Text describing the contents of the tag.
                draft:
                  type: boolean
                  description: '`true` makes the release a draft, and `false` publishes the release.'
                prerelease:
                  type: boolean
                  description: '`true` to identify the release as a prerelease, `false` to identify the release as a full release.'
                make_latest:
                  type: string
                  description: Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.
                  enum:
                  - 'true'
                  - 'false'
                  - legacy
                  default: true
                discussion_category_name:
                  type: string
                  description: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository)."
            examples:
              default:
                value:
                  tag_name: v1.0.0
                  target_commitish: master
                  name: v1.0.0
                  body: Description of the release
                  draft: false
                  prerelease: false
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release'
              examples:
                default:
                  $ref: '#/components/examples/release'
        '404':
          description: Not Found if the discussion category name is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basic-error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
    delete:
      summary: Delete a release
      description: Users with push access to the repository can delete a release.
      tags:
      - repos
      operationId: repos/delete-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/releases#delete-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: releases
  /repos/{owner}/{repo}/releases/{release_id}/assets:
    get:
      summary: List release assets
      description: ''
      tags:
      - repos
      operationId: repos/list-release-assets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#list-release-assets
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/release-asset'
              examples:
                default:
                  $ref: '#/components/examples/release-asset-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
    post:
      summary: Upload a release asset
      description: "This endpoint makes use of a [Hypermedia relation](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://docs.github.com/rest/releases/releases#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content\
        \ of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List release assets](https://docs.github.com/rest/releases/assets#list-release-assets)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://support.github.com/contact?tags=dotcom-rest-api).\n*   To find the `release_id` query the [`GET /repos/{owner}/{repo}/releases/latest` endpoint](https://docs.github.com/rest/releases/releases#get-the-latest-release). \n*   If you upload an asset with the same filename as another uploaded asset,\
        \ you'll receive an error and must delete the old file before you can re-upload the new asset."
      tags:
      - repos
      operationId: repos/upload-release-asset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/releases/assets#upload-a-release-asset
      servers:
      - url: https://uploads.github.com
        description: The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the "Create a release" endpoint
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: label
        in: query
        schema:
          type: string
      requestBody:
        required: false
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
              description: The raw file data
            examples:
              default:
                value: '@example.zip'
      responses:
        '201':
          description: Response for successful upload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/release-asset'
              examples:
                response-for-successful-upload:
                  $ref: '#/components/examples/release-asset-response-for-successful-upload'
        '422':
          description: Response if you upload an asset with the same filename as another uploaded asset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: releases
        subcategory: assets
  /repos/{owner}/{repo}/rules/branches/{branch}:
    get:
      summary: Get rules for a branch
      description: 'Returns all active rules that apply to the specified branch. The branch does not need to exist; rules that would apply

        to a branch with that name will be returned. All active rules that apply will be returned, regardless of the level

        at which they are configured (e.g. repository or organization). Rules in rulesets with "evaluate" or "disabled"

        enforcement statuses are not returned.'
      tags:
      - repos
      operationId: repos/get-branch-rules
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-rules-for-a-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/branch'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-rule-detailed'
              examples:
                default:
                  $ref: '#/components/examples/repository-rule-items'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
  /repos/{owner}/{repo}/rulesets:
    get:
      summary: Get all repository rulesets
      description: Get all the rulesets for a repository.
      tags:
      - repos
      operationId: repos/get-repo-rulesets
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-all-repository-rulesets
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: includes_parents
        description: Include rulesets configured at higher levels that apply to this repository
        in: query
        required: false
        schema:
          type: boolean
          default: true
      - $ref: '#/components/parameters/ruleset-targets'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/repository-ruleset-items'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    post:
      summary: Create a repository ruleset
      description: Create a ruleset for a repository.
      tags:
      - repos
      operationId: repos/create-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#create-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        description: Request body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset
                  enum:
                  - branch
                  - tag
                  - push
                  default: branch
                enforcement:
                  $ref: '#/components/schemas/repository-rule-enforcement'
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    $ref: '#/components/schemas/repository-ruleset-bypass-actor'
                conditions:
                  $ref: '#/components/schemas/repository-ruleset-conditions'
                rules:
                  type: array
                  description: An array of rules within the ruleset.
                  items:
                    $ref: '#/components/schemas/repository-rule'
              required:
              - name
              - enforcement
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/repository-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
  /repos/{owner}/{repo}/rulesets/rule-suites:
    get:
      summary: List repository rule suites
      description: 'Lists suites of rule evaluations at the repository level.

        For more information, see "[Managing rulesets for a repository](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/managing-rulesets-for-a-repository#viewing-insights-for-rulesets)."'
      tags:
      - repos
      operationId: repos/get-repo-rule-suites
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rule-suites#list-repository-rule-suites
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/ref-in-query'
      - $ref: '#/components/parameters/time-period'
      - $ref: '#/components/parameters/actor-name-in-query'
      - $ref: '#/components/parameters/rule-suite-result'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule-suites'
              examples:
                default:
                  $ref: '#/components/examples/rule-suite-items'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rule-suites
  /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}:
    get:
      summary: Get a repository rule suite
      description: 'Gets information about a suite of rule evaluations from within a repository.

        For more information, see "[Managing rulesets for a repository](https://docs.github.com/repositories/configuring-branches-and-merges-in-your-repository/managing-rulesets/managing-rulesets-for-a-repository#viewing-insights-for-rulesets)."'
      tags:
      - repos
      operationId: repos/get-repo-rule-suite
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rule-suites#get-a-repository-rule-suite
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/rule-suite-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule-suite'
              examples:
                default:
                  $ref: '#/components/examples/rule-suite'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rule-suites
  /repos/{owner}/{repo}/rulesets/{ruleset_id}:
    get:
      summary: Get a repository ruleset
      description: 'Get a ruleset for a repository.


        **Note:** To prevent leaking sensitive information, the `bypass_actors` property is only returned if the user

        making the API request has write access to the ruleset.'
      tags:
      - repos
      operationId: repos/get-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      - name: includes_parents
        description: Include rulesets configured at higher levels that apply to this repository
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/repository-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    put:
      summary: Update a repository ruleset
      description: Update a ruleset for a repository.
      tags:
      - repos
      operationId: repos/update-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#update-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        description: Request body
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the ruleset.
                target:
                  type: string
                  description: The target of the ruleset
                  enum:
                  - branch
                  - tag
                  - push
                enforcement:
                  $ref: '#/components/schemas/repository-rule-enforcement'
                bypass_actors:
                  type: array
                  description: The actors that can bypass the rules in this ruleset
                  items:
                    $ref: '#/components/schemas/repository-ruleset-bypass-actor'
                conditions:
                  $ref: '#/components/schemas/repository-ruleset-conditions'
                rules:
                  description: An array of rules within the ruleset.
                  type: array
                  items:
                    $ref: '#/components/schemas/repository-rule'
            examples:
              default:
                value:
                  name: super cool ruleset
                  target: branch
                  enforcement: active
                  bypass_actors:
                  - actor_id: 234
                    actor_type: Team
                    bypass_mode: always
                  conditions:
                    ref_name:
                      include:
                      - refs/heads/main
                      - refs/heads/master
                      exclude:
                      - refs/heads/dev*
                  rules:
                  - type: commit_author_email_pattern
                    parameters:
                      operator: contains
                      pattern: github
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/repository-ruleset'
              examples:
                default:
                  $ref: '#/components/examples/repository-ruleset'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
    delete:
      summary: Delete a repository ruleset
      description: Delete a ruleset for a repository.
      tags:
      - repos
      operationId: repos/delete-repo-ruleset
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#delete-a-repository-ruleset
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
  /repos/{owner}/{repo}/rulesets/{ruleset_id}/history:
    get:
      summary: Get repository ruleset history
      description: Get the history of a repository ruleset.
      tags:
      - repos
      operationId: repos/get-repo-ruleset-history
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-repository-ruleset-history
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ruleset-version'
              examples:
                default:
                  $ref: '#/components/examples/ruleset-history'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
  /repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}:
    get:
      summary: Get repository ruleset version
      description: Get a version of a repository ruleset.
      tags:
      - repos
      operationId: repos/get-repo-ruleset-version
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/rules#get-repository-ruleset-version
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ruleset_id
        description: The ID of the ruleset.
        in: path
        required: true
        schema:
          type: integer
      - name: version_id
        description: The ID of the version
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ruleset-version-with-state'
              examples:
                default:
                  $ref: '#/components/examples/repository-ruleset-version-with-state'
        '404':
          $ref: '#/components/responses/not_found'
        '500':
          $ref: '#/components/responses/internal_error'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: rules
  /repos/{owner}/{repo}/stats/code_frequency:
    get:
      summary: Get the weekly commit activity
      description: 'Returns a weekly aggregate of the number of additions and deletions pushed to a repository.


        > [!NOTE]

        > This endpoint can only be used for repositories with fewer than 10,000 commits. If the repository contains 10,000 or more commits, a 422 status code will be returned.'
      tags:
      - repos
      operationId: repos/get-code-frequency-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-weekly-commit-activity
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Returns a weekly aggregate of the number of additions and deletions pushed to a repository.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code-frequency-stat'
              examples:
                default:
                  $ref: '#/components/examples/code-frequency-stat-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
        '422':
          description: Repository contains more than 10,000 commits
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  /repos/{owner}/{repo}/stats/commit_activity:
    get:
      summary: Get the last year of commit activity
      description: Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`.
      tags:
      - repos
      operationId: repos/get-commit-activity-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-last-year-of-commit-activity
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit-activity'
              examples:
                default:
                  $ref: '#/components/examples/commit-activity-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  /repos/{owner}/{repo}/stats/contributors:
    get:
      summary: Get all contributor commit activity
      description: '

        Returns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:


        *   `w` - Start of the week, given as a [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).

        *   `a` - Number of additions

        *   `d` - Number of deletions

        *   `c` - Number of commits


        > [!NOTE]

        > This endpoint will return `0` values for all addition and deletion counts in repositories with 10,000 or more commits.'
      tags:
      - repos
      operationId: repos/get-contributors-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-all-contributor-commit-activity
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/contributor-activity'
              examples:
                default:
                  $ref: '#/components/examples/contributor-activity-items'
        '202':
          $ref: '#/components/responses/accepted'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  /repos/{owner}/{repo}/stats/participation:
    get:
      summary: Get the weekly commit count
      description: 'Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you''d like to get the commit counts for non-owners, you can subtract `owner` from `all`.


        The array order is oldest week (index 0) to most recent week.


        The most recent week is seven days ago at UTC midnight to today at UTC midnight.'
      tags:
      - repos
      operationId: repos/get-participation-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-weekly-commit-count
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: The array order is oldest week (index 0) to most recent week.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participation-stats'
              examples:
                default:
                  $ref: '#/components/examples/participation-stats'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  /repos/{owner}/{repo}/stats/punch_card:
    get:
      summary: Get the hourly commit count for each day
      description: 'Each array contains the day number, hour number, and number of commits:


        *   `0-6`: Sunday - Saturday

        *   `0-23`: Hour of day

        *   Number of commits


        For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.'
      tags:
      - repos
      operationId: repos/get-punch-card-stats
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/statistics#get-the-hourly-commit-count-for-each-day
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/code-frequency-stat'
              examples:
                default:
                  $ref: '#/components/examples/code-frequency-stat-items-2'
        '204':
          $ref: '#/components/responses/no_content'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: statistics
  /repos/{owner}/{repo}/statuses/{sha}:
    post:
      summary: Create a commit status
      description: 'Users with push access in a repository can create commit statuses for a given SHA.


        Note: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error.'
      tags:
      - repos
      operationId: repos/create-commit-status
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/commits/statuses#create-a-commit-status
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: sha
        in: path
        required: true
        schema:
          type: string
        x-multi-segment: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: The state of the status.
                  enum:
                  - error
                  - failure
                  - pending
                  - success
                target_url:
                  type: string
                  nullable: true
                  description: "The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  \nFor example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  \n`http://ci.example.com/user/repo/build/sha`"
                description:
                  type: string
                  nullable: true
                  description: A short description of the status.
                context:
                  type: string
                  description: A string label to differentiate this status from the status of other systems. This field is case-insensitive.
                  default: default
              required:
              - state
            examples:
              default:
                value:
                  state: success
                  target_url: https://example.com/build/status
                  description: The build succeeded!
                  context: continuous-integration/jenkins
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/status'
              examples:
                default:
                  $ref: '#/components/examples/status'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: commits
        subcategory: statuses
  /repos/{owner}/{repo}/tags:
    get:
      summary: List repository tags
      description: ''
      tags:
      - repos
      operationId: repos/list-tags
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-tags
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag'
              examples:
                default:
                  $ref: '#/components/examples/tag-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/tags/protection:
    get:
      summary: Closing down - List tag protection states for a repository
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed after August 30, 2024. Use the "[Repository Rulesets](https://docs.github.com/rest/repos/rules#get-all-repository-rulesets)" endpoint instead.


        This returns the tag protection states of a repository.


        This information is only available to repository administrators.'
      tags:
      - repos
      operationId: repos/list-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#closing-down---list-tag-protection-states-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tag-protection'
              examples:
                default:
                  $ref: '#/components/examples/tag-protection-items'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
        deprecationDate: '2024-05-29'
        removalDate: '2024-08-30'
      deprecated: true
    post:
      summary: Closing down - Create a tag protection state for a repository
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed after August 30, 2024. Use the "[Repository Rulesets](https://docs.github.com/rest/repos/rules#create-a-repository-ruleset)" endpoint instead.


        This creates a tag protection state for a repository.

        This endpoint is only available to repository administrators.'
      tags:
      - repos
      operationId: repos/create-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#closing-down---create-a-tag-protection-state-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pattern:
                  type: string
                  description: An optional glob pattern to match against when enforcing tag protection.
              required:
              - pattern
            examples:
              default:
                value:
                  pattern: v1.*
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tag-protection'
              examples:
                default:
                  $ref: '#/components/examples/tag-protection'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
        deprecationDate: '2024-05-29'
        removalDate: '2024-08-30'
      deprecated: true
  /repos/{owner}/{repo}/tags/protection/{tag_protection_id}:
    delete:
      summary: Closing down - Delete a tag protection state for a repository
      description: '> [!WARNING]

        > **Closing down notice:** This operation is closing down and will be removed after August 30, 2024. Use the "[Repository Rulesets](https://docs.github.com/rest/repos/rules#delete-a-repository-ruleset)" endpoint instead.


        This deletes a tag protection state for a repository.

        This endpoint is only available to repository administrators.'
      tags:
      - repos
      operationId: repos/delete-tag-protection
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/tags#closing-down---delete-a-tag-protection-state-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/tag-protection-id'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: tags
        deprecationDate: '2024-05-29'
        removalDate: '2024-08-30'
      deprecated: true
  /repos/{owner}/{repo}/tarball/{ref}:
    get:
      summary: Download a repository archive (tar)
      description: 'Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually

        `main`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.


        > [!NOTE]

        > For private repositories, these links are temporary and expire after five minutes.'
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#download-a-repository-archive-tar
      operationId: repos/download-tarball-archive
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ref
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{owner}/{repo}/teams:
    get:
      summary: List repository teams
      description: 'Lists the teams that have access to the specified repository and that are also visible to the authenticated user.


        For a public repository, a team is listed only if that team added the public repository explicitly.


        OAuth app tokens and personal access tokens (classic) need the `public_repo` or `repo` scope to use this endpoint with a public repository, and `repo` scope to use this endpoint with a private repository.'
      tags:
      - repos
      operationId: repos/list-teams
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repository-teams
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/topics:
    get:
      summary: Get all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/get-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#get-all-repository-topics
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topic'
              examples:
                default:
                  $ref: '#/components/examples/topic'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Replace all repository topics
      description: ''
      tags:
      - repos
      operationId: repos/replace-all-topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#replace-all-repository-topics
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                names:
                  type: array
                  description: An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` will be saved as lowercase.
                  items:
                    type: string
              required:
              - names
            examples:
              default:
                value:
                  names:
                  - octocat
                  - atom
                  - electron
                  - api
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topic'
              examples:
                default:
                  $ref: '#/components/examples/topic'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/traffic/clones:
    get:
      summary: Get repository clones
      description: Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.
      tags:
      - repos
      operationId: repos/get-clones
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-repository-clones
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clone-traffic'
              examples:
                default:
                  $ref: '#/components/examples/clone-traffic'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/popular/paths:
    get:
      summary: Get top referral paths
      description: Get the top 10 popular contents over the last 14 days.
      tags:
      - repos
      operationId: repos/get-top-paths
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-top-referral-paths
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/content-traffic'
              examples:
                default:
                  $ref: '#/components/examples/content-traffic-items'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/popular/referrers:
    get:
      summary: Get top referral sources
      description: Get the top 10 referrers over the last 14 days.
      tags:
      - repos
      operationId: repos/get-top-referrers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-top-referral-sources
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/referrer-traffic'
              examples:
                default:
                  $ref: '#/components/examples/referrer-traffic-items'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  /repos/{owner}/{repo}/traffic/views:
    get:
      summary: Get page views
      description: Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday.
      tags:
      - repos
      operationId: repos/get-views
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/metrics/traffic#get-page-views
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/per'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/view-traffic'
              examples:
                default:
                  $ref: '#/components/examples/view-traffic'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: metrics
        subcategory: traffic
  /repos/{owner}/{repo}/transfer:
    post:
      summary: Transfer a repository
      description: A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://docs.github.com/articles/about-repository-transfers/).
      tags:
      - repos
      operationId: repos/transfer
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#transfer-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                new_owner:
                  type: string
                  description: The username or organization name the repository will be transferred to.
                new_name:
                  type: string
                  description: The new name to be given to the repository.
                team_ids:
                  type: array
                  description: ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.
                  items:
                    type: integer
              required:
              - new_owner
            examples:
              default:
                value:
                  new_owner: github
                  team_ids:
                  - 12
                  - 345
                  new_name: octorepo
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/vulnerability-alerts:
    get:
      summary: Check if vulnerability alerts are enabled for a repository
      description: Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin read access to the repository. For more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/check-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#check-if-vulnerability-alerts-are-enabled-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response if repository is enabled with vulnerability alerts
        '404':
          description: Not Found if repository is not enabled with vulnerability alerts
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    put:
      summary: Enable vulnerability alerts
      description: Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".
      tags:
      - repos
      operationId: repos/enable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#enable-vulnerability-alerts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
    delete:
      summary: Disable vulnerability alerts
      description: 'Disables dependency alerts and the dependency graph for a repository.

        The authenticated user must have admin access to the repository. For more information,

        see "[About security alerts for vulnerable dependencies](https://docs.github.com/articles/about-security-alerts-for-vulnerable-dependencies)".'
      tags:
      - repos
      operationId: repos/disable-vulnerability-alerts
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#disable-vulnerability-alerts
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repos/{owner}/{repo}/zipball/{ref}:
    get:
      summary: Download a repository archive (zip)
      description: 'Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually

        `main`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use

        the `Location` header to make a second `GET` request.


        > [!NOTE]

        > For private repositories, these links are temporary and expire after five minutes. If the repository is empty, you will receive a 404 when you follow the redirect.'
      tags:
      - repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/contents#download-a-repository-archive-zip
      operationId: repos/download-zipball-archive
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: ref
        in: path
        required: true
        x-multi-segment: true
        schema:
          type: string
      responses:
        '302':
          description: Response
          headers:
            Location:
              example: https://codeload.github.com/me/myprivate/legacy.zip/master?login=me&token=thistokenexpires
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: contents
  /repos/{template_owner}/{template_repo}/generate:
    post:
      summary: Create a repository using a template
      description: 'Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. If the repository is not public, the authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository''s information using the [Get a repository](https://docs.github.com/rest/repos/repos#get-a-repository) endpoint and check that the `is_template` key is `true`.


        OAuth app tokens and personal access tokens (classic) need the `public_repo` or `repo` scope to create a public repository, and `repo` scope to create a private repository.'
      tags:
      - repos
      operationId: repos/create-using-template
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-using-a-template
      parameters:
      - name: template_owner
        description: The account owner of the template repository. The name is not case sensitive.
        in: path
        required: true
        schema:
          type: string
      - name: template_repo
        description: The name of the template repository without the `.git` extension. The name is not case sensitive.
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner:
                  type: string
                  description: The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.
                name:
                  type: string
                  description: The name of the new repository.
                description:
                  type: string
                  description: A short description of the new repository.
                include_all_branches:
                  type: boolean
                  description: 'Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.'
                  default: false
                private:
                  type: boolean
                  description: Either `true` to create a new private repository or `false` to create a new public one.
                  default: false
              required:
              - name
            examples:
              default:
                value:
                  owner: octocat
                  name: Hello-World
                  description: This is your first repository
                  include_all_branches: false
                  private: false
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /repositories:
    get:
      summary: List public repositories
      description: 'Lists all public repositories in the order that they were created.


        Note:

        - For GitHub Enterprise Server, this endpoint will only list repositories available to all users on the enterprise.

        - Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers) to get the URL for the next page of repositories.'
      tags:
      - repos
      operationId: repos/list-public
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-public-repositories
      parameters:
      - $ref: '#/components/parameters/since-repo'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/public-repository-items'
          headers:
            Link:
              example: <https://api.github.com/repositories?since=364>; rel="next"
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
  /user/repos:
    get:
      summary: List repositories for the authenticated user
      description: 'Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.


        The authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.'
      tags:
      - repos
      operationId: repos/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repositories-for-the-authenticated-user
      parameters:
      - name: visibility
        description: Limit results to repositories with the specified visibility.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - public
          - private
          default: all
      - name: affiliation
        description: "Comma-separated list of values. Can include:  \n * `owner`: Repositories that are owned by the authenticated user.  \n * `collaborator`: Repositories that the user has been added to as a collaborator.  \n * `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."
        in: query
        required: false
        schema:
          type: string
          default: owner,collaborator,organization_member
      - name: type
        description: Limit results to repositories of the specified type. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - public
          - private
          - member
          default: all
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/since-repo-date'
      - $ref: '#/components/parameters/before-repo-date'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository'
              examples:
                default:
                  $ref: '#/components/examples/repository-items-default-response'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
    post:
      summary: Create a repository for the authenticated user
      description: 'Creates a new repository for the authenticated user.


        OAuth app tokens and personal access tokens (classic) need the `public_repo` or `repo` scope to create a public repository, and `repo` scope to create a private repository.'
      tags:
      - repos
      operationId: repos/create-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#create-a-repository-for-the-authenticated-user
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: The name of the repository.
                  type: string
                  example: Team Environment
                description:
                  description: A short description of the repository.
                  type: string
                homepage:
                  description: A URL with more information about the repository.
                  type: string
                private:
                  description: Whether the repository is private.
                  default: false
                  type: boolean
                has_issues:
                  description: Whether issues are enabled.
                  default: true
                  type: boolean
                  example: true
                has_projects:
                  description: Whether projects are enabled.
                  default: true
                  type: boolean
                  example: true
                has_wiki:
                  description: Whether the wiki is enabled.
                  default: true
                  type: boolean
                  example: true
                has_discussions:
                  description: Whether discussions are enabled.
                  default: false
                  type: boolean
                  example: true
                team_id:
                  description: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.
                  type: integer
                auto_init:
                  description: Whether the repository is initialized with a minimal README.
                  default: false
                  type: boolean
                gitignore_template:
                  description: The desired language or platform to apply to the .gitignore.
                  example: Haskell
                  type: string
                license_template:
                  description: The license keyword of the open source license for this repository.
                  example: mit
                  type: string
                allow_squash_merge:
                  description: Whether to allow squash merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_merge_commit:
                  description: Whether to allow merge commits for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_rebase_merge:
                  description: Whether to allow rebase merges for pull requests.
                  default: true
                  type: boolean
                  example: true
                allow_auto_merge:
                  description: Whether to allow Auto-merge to be used on pull requests.
                  default: false
                  type: boolean
                  example: false
                delete_branch_on_merge:
                  description: Whether to delete head branches when pull requests are merged
                  default: false
                  type: boolean
                  example: false
                squash_merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - COMMIT_OR_PR_TITLE
                  description: 'Required when using `squash_merge_commit_message`.


                    The default value for a squash merge commit title:


                    - `PR_TITLE` - default to the pull request''s title.

                    - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
                squash_merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - COMMIT_MESSAGES
                  - BLANK
                  description: 'The default value for a squash merge commit message:


                    - `PR_BODY` - default to the pull request''s body.

                    - `COMMIT_MESSAGES` - default to the branch''s commit messages.

                    - `BLANK` - default to a blank commit message.'
                merge_commit_title:
                  type: string
                  enum:
                  - PR_TITLE
                  - MERGE_MESSAGE
                  description: 'Required when using `merge_commit_message`.


                    The default value for a merge commit title.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
                merge_commit_message:
                  type: string
                  enum:
                  - PR_BODY
                  - PR_TITLE
                  - BLANK
                  description: 'The default value for a merge commit message.


                    - `PR_TITLE` - default to the pull request''s title.

                    - `PR_BODY` - default to the pull request''s body.

                    - `BLANK` - default to a blank commit message.'
                has_downloads:
                  description: Whether downloads are enabled.
                  default: true
                  type: boolean
                  example: true
                is_template:
                  description: Whether this repository acts as a template that can be used to generate new repositories.
                  default: false
                  type: boolean
                  example: true
              required:
              - name
              type: object
            examples:
              default:
                value:
                  name: Hello-World
                  description: This is your first repo!
                  homepage: https://github.com
                  private: false
                  is_template: true
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/full-repository'
              examples:
                default:
                  $ref: '#/components/examples/full-repository'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World
              schema:
                type: string
        '401':
          $ref: '#/components/responses/requires_authentication'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
        '400':
          $ref: '#/components/responses/bad_request'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: repos
        subcategory: repos
  /user/repository_invitations:
    get:
      summary: List repository invitations for the authenticated user
      description: When authenticating as a user, this endpoint will list all currently open repository invitations for that user.
      tags:
      - repos
      operationId: repos/list-invitations-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#list-repository-invitations-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/repository-invitation'
              examples:
                default:
                  $ref: '#/components/examples/repository-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '401':
          $ref: '#/components/responses/requires_authentication'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  /user/repository_invitations/{invitation_id}:
    patch:
      summary: Accept a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/accept-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#accept-a-repository-invitation
      parameters:
      - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '409':
          $ref: '#/components/responses/conflict'
        '404':
          $ref: '#/components/responses/not_found'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
    delete:
      summary: Decline a repository invitation
      description: ''
      tags:
      - repos
      operationId: repos/decline-invitation-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/collaborators/invitations#decline-a-repository-invitation
      parameters:
      - $ref: '#/components/parameters/invitation-id'
      responses:
        '204':
          description: Response
        '409':
          $ref: '#/components/responses/conflict'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: collaborators
        subcategory: invitations
  /users/{username}/repos:
    get:
      summary: List repositories for a user
      description: Lists public repositories for the specified user.
      tags:
      - repos
      operationId: repos/list-for-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/repos/repos#list-repositories-for-a-user
      parameters:
      - $ref: '#/components/parameters/username'
      - name: type
        description: Limit results to repositories of the specified type.
        in: query
        required: false
        schema:
          type: string
          enum:
          - all
          - owner
          - member
          default: owner
      - name: sort
        description: The property to sort the results by.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - pushed
          - full_name
          default: full_name
      - name: direction
        description: 'The order to sort by. Default: `asc` when using `full_name`, otherwise `desc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: repos
        subcategory: repos
