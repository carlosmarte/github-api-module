openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    reaction:
      title: Reaction
      description: Reactions to conversations provide a way to help people express their feelings more simply and effectively.
      type: object
      properties:
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDg6UmVhY3Rpb24x
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        content:
          description: The reaction to use
          example: heart
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
        created_at:
          type: string
          format: date-time
          example: '2016-05-20T20:09:31Z'
      required:
      - id
      - node_id
      - user
      - content
      - created_at
  examples:
    reaction-items:
      value:
      - id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
    reaction:
      value:
        id: 1
        node_id: MDg6UmVhY3Rpb24x
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        content: heart
        created_at: '2016-05-20T20:09:31Z'
  parameters:
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    comment-id:
      name: comment_id
      description: The unique identifier of the comment.
      in: path
      required: true
      schema:
        type: integer
        format: int64
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    team-slug:
      name: team_slug
      description: The slug of the team name.
      in: path
      required: true
      schema:
        type: string
    discussion-number:
      name: discussion_number
      description: The number that identifies the discussion.
      in: path
      required: true
      schema:
        type: integer
    comment-number:
      name: comment_number
      description: The number that identifies the comment.
      in: path
      required: true
      schema:
        type: integer
    reaction-id:
      name: reaction_id
      description: The unique identifier of the reaction.
      in: path
      required: true
      schema:
        type: integer
    issue-number:
      name: issue_number
      description: The number that identifies the issue.
      in: path
      required: true
      schema:
        type: integer
    release-id:
      name: release_id
      description: The unique identifier of the release.
      in: path
      required: true
      schema:
        type: integer
    team-id:
      name: team_id
      description: The unique identifier of the team.
      in: path
      required: true
      schema:
        type: integer
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    gone:
      description: Gone
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: reactions
  description: Interact with reactions to various GitHub entities.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions:
    get:
      summary: List reactions for a team discussion comment
      description: 'List the reactions to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment).


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion comment
      description: 'Create a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment).


        A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion comment.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response when the reaction type has already been added to this team discussion comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}:
    delete:
      summary: Delete team discussion comment reaction
      description: '> [!NOTE]

        > You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment).


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-team-discussion-comment-reaction
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions:
    get:
      summary: List reactions for a team discussion
      description: 'List the reactions to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion).


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a team discussion
      description: 'Create a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion).


        A response with an HTTP `200` status means that you already added the reaction type to this team discussion.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: reactions
        subcategory: reactions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}:
    delete:
      summary: Delete team discussion reaction
      description: '> [!NOTE]

        > You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.


        Delete a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion).


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/delete-for-team-discussion
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-team-discussion-reaction
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/comments/{comment_id}/reactions:
    get:
      summary: List reactions for a commit comment
      description: List the reactions to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment).
      tags:
      - reactions
      operationId: reactions/list-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a commit comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a commit comment
      description: Create a reaction to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment). A response with an HTTP `200` status means that you already added the reaction type to this commit comment.
      tags:
      - reactions
      operationId: reactions/create-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-commit-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the commit comment.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      summary: Delete a commit comment reaction
      description: '> [!NOTE]

        > You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to a [commit comment](https://docs.github.com/rest/commits/comments#get-a-commit-comment).'
      tags:
      - reactions
      operationId: reactions/delete-for-commit-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-commit-comment-reaction
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions:
    get:
      summary: List reactions for an issue comment
      description: List the reactions to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment).
      tags:
      - reactions
      operationId: reactions/list-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-an-issue-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to an issue comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for an issue comment
      description: Create a reaction to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment). A response with an HTTP `200` status means that you already added the reaction type to this issue comment.
      tags:
      - reactions
      operationId: reactions/create-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-an-issue-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the issue comment.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      summary: Delete an issue comment reaction
      description: '> [!NOTE]

        > You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.


        Delete a reaction to an [issue comment](https://docs.github.com/rest/issues/comments#get-an-issue-comment).'
      tags:
      - reactions
      operationId: reactions/delete-for-issue-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-an-issue-comment-reaction
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/issues/{issue_number}/reactions:
    get:
      summary: List reactions for an issue
      description: List the reactions to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue).
      tags:
      - reactions
      operationId: reactions/list-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-an-issue
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/issue-number'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to an issue.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '410':
          $ref: '#/components/responses/gone'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for an issue
      description: Create a reaction to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue). A response with an HTTP `200` status means that you already added the reaction type to this issue.
      tags:
      - reactions
      operationId: reactions/create-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-an-issue
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/issue-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the issue.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}:
    delete:
      summary: Delete an issue reaction
      description: '> [!NOTE]

        > You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.


        Delete a reaction to an [issue](https://docs.github.com/rest/issues/issues#get-an-issue).'
      tags:
      - reactions
      operationId: reactions/delete-for-issue
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-an-issue-reaction
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/issue-number'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions:
    get:
      summary: List reactions for a pull request review comment
      description: List the reactions to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request).
      tags:
      - reactions
      operationId: reactions/list-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-pull-request-review-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a pull request review comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a pull request review comment
      description: Create a reaction to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request). A response with an HTTP `200` status means that you already added the reaction type to this pull request review comment.
      tags:
      - reactions
      operationId: reactions/create-for-pull-request-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-pull-request-review-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the pull request review comment.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}:
    delete:
      summary: Delete a pull request comment reaction
      description: '> [!NOTE]

        > You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`


        Delete a reaction to a [pull request review comment](https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request).'
      tags:
      - reactions
      operationId: reactions/delete-for-pull-request-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-pull-request-comment-reaction
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/releases/{release_id}/reactions:
    get:
      summary: List reactions for a release
      description: List the reactions to a [release](https://docs.github.com/rest/releases/releases#get-a-release).
      tags:
      - reactions
      operationId: reactions/list-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a release.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - laugh
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
    post:
      summary: Create reaction for a release
      description: 'Create a reaction to a [release](https://docs.github.com/rest/releases/releases#get-a-release). A response with a `Status: 200 OK` means that you already added the reaction type to this release.'
      tags:
      - reactions
      operationId: reactions/create-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-release
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the release.
                  enum:
                  - '+1'
                  - laugh
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '200':
          description: Reaction exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '201':
          description: Reaction created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}:
    delete:
      summary: Delete a release reaction
      description: '> [!NOTE]

        > You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/releases/:release_id/reactions/:reaction_id`.


        Delete a reaction to a [release](https://docs.github.com/rest/releases/releases#get-a-release).'
      tags:
      - reactions
      operationId: reactions/delete-for-release
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#delete-a-release-reaction
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/release-id'
      - $ref: '#/components/parameters/reaction-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: reactions
        subcategory: reactions
  /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions:
    get:
      summary: List reactions for a team discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment) endpoint.


        List the reactions to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment).


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a team discussion comment.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
    post:
      summary: Create reaction for a team discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new "[Create reaction for a team discussion comment](https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment)" endpoint.


        Create a reaction to a [team discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment).


        A response with an HTTP `200` status means that you already added the reaction type to this team discussion comment.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion comment.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
  /teams/{team_id}/discussions/{discussion_number}/reactions:
    get:
      summary: List reactions for a team discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion) endpoint.


        List the reactions to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion).


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/list-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#list-reactions-for-a-team-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - name: content
        description: Returns a single [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions). Omit this parameter to list all reactions to a team discussion.
        in: query
        required: false
        schema:
          type: string
          enum:
          - '+1'
          - '-1'
          - laugh
          - confused
          - heart
          - hooray
          - rocket
          - eyes
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
    post:
      summary: Create reaction for a team discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion`](https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion) endpoint.


        Create a reaction to a [team discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion).


        A response with an HTTP `200` status means that you already added the reaction type to this team discussion.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - reactions
      operationId: reactions/create-for-team-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/reactions/reactions#create-reaction-for-a-team-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion.
                  enum:
                  - '+1'
                  - '-1'
                  - laugh
                  - confused
                  - heart
                  - hooray
                  - rocket
                  - eyes
              required:
              - content
            examples:
              default:
                value:
                  content: heart
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reaction'
              examples:
                default:
                  $ref: '#/components/examples/reaction'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        removalDate: '2021-02-21'
        deprecationDate: '2020-02-26'
        category: reactions
        subcategory: reactions
      deprecated: true
