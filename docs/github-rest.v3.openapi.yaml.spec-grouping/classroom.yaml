openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    simple-classroom-repository:
      title: Simple Classroom Repository
      description: A GitHub repository view for Classroom
      type: object
      properties:
        id:
          type: integer
          example: 1296269
          description: A unique identifier of the repository.
        full_name:
          type: string
          example: octocat/Hello-World
          description: The full, globally unique name of the repository.
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
          description: The URL to view the repository on GitHub.com.
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          description: The GraphQL identifier of the repository.
        private:
          type: boolean
          description: Whether the repository is private.
        default_branch:
          type: string
          example: main
          description: The default branch for the repository.
      required:
      - id
      - full_name
      - html_url
      - node_id
      - private
      - default_branch
    simple-classroom-organization:
      title: Organization Simple for Classroom
      description: A GitHub organization.
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: github
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        html_url:
          type: string
          format: uri
          example: https://github.com/github
        name:
          type: string
          example: Github - Code thigns happen here
          nullable: true
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
      required:
      - id
      - login
      - node_id
      - html_url
      - name
      - avatar_url
    classroom:
      title: Classroom
      description: A GitHub Classroom classroom
      type: object
      properties:
        id:
          description: Unique identifier of the classroom.
          example: 42
          type: integer
        name:
          description: The name of the classroom.
          type: string
          example: Programming Elixir
        archived:
          description: Whether classroom is archived.
          type: boolean
          example: false
        organization:
          $ref: '#/components/schemas/simple-classroom-organization'
        url:
          description: The URL of the classroom on GitHub Classroom.
          type: string
          example: https://classroom.github.com/classrooms/1-programming-elixir
      required:
      - id
      - name
      - archived
      - organization
      - url
    classroom-assignment:
      title: Classroom Assignment
      description: A GitHub Classroom assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        public_repo:
          description: Whether an accepted assignment creates a public repository.
          type: boolean
          example: true
        title:
          description: Assignment title.
          type: string
          example: Intro to Binaries
        type:
          description: Whether it's a group assignment or individual assignment.
          type: string
          example: individual
          enum:
          - individual
          - group
        invite_link:
          description: The link that a student can use to accept the assignment.
          type: string
          example: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled:
          description: Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
          type: boolean
          example: true
        slug:
          description: Sluggified name of the assignment.
          type: string
          example: intro-to-binaries
        students_are_repo_admins:
          description: Whether students are admins on created repository when a student accepts the assignment.
          type: boolean
          example: true
        feedback_pull_requests_enabled:
          description: Whether feedback pull request will be created when a student accepts the assignment.
          type: boolean
          example: true
        max_teams:
          description: The maximum allowable teams for the assignment.
          nullable: true
          type: integer
          example: 0
        max_members:
          description: The maximum allowable members per team.
          nullable: true
          type: integer
          example: 0
        editor:
          description: The selected editor for the assignment.
          type: string
          example: codespaces
        accepted:
          description: The number of students that have accepted the assignment.
          type: integer
          example: 25
        submitted:
          description: The number of students that have submitted the assignment.
          type: integer
          example: 10
        passing:
          description: The number of students that have passed the assignment.
          type: integer
          example: 10
        language:
          description: The programming language used in the assignment.
          type: string
          example: elixir
        deadline:
          description: The time at which the assignment is due.
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        starter_code_repository:
          $ref: '#/components/schemas/simple-classroom-repository'
        classroom:
          $ref: '#/components/schemas/classroom'
      required:
      - id
      - public_repo
      - title
      - type
      - invite_link
      - invitations_enabled
      - slug
      - students_are_repo_admins
      - feedback_pull_requests_enabled
      - max_teams
      - max_members
      - editor
      - accepted
      - submitted
      - passing
      - language
      - deadline
      - starter_code_repository
      - classroom
    simple-classroom-user:
      title: Simple Classroom User
      description: A GitHub user simplified for Classroom.
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: octocat
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
      required:
      - id
      - login
      - avatar_url
      - html_url
    simple-classroom:
      title: Simple Classroom
      description: A GitHub Classroom classroom
      type: object
      properties:
        id:
          description: Unique identifier of the classroom.
          example: 42
          type: integer
        name:
          description: The name of the classroom.
          type: string
          example: Programming Elixir
        archived:
          description: Returns whether classroom is archived or not.
          type: boolean
          example: false
        url:
          description: The url of the classroom on GitHub Classroom.
          type: string
          example: https://classroom.github.com/classrooms/1-programming-elixir
      required:
      - id
      - name
      - archived
      - url
    simple-classroom-assignment:
      title: Simple Classroom Assignment
      description: A GitHub Classroom assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        public_repo:
          description: Whether an accepted assignment creates a public repository.
          type: boolean
          example: true
        title:
          description: Assignment title.
          type: string
          example: Intro to Binaries
        type:
          description: Whether it's a Group Assignment or Individual Assignment.
          type: string
          example: individual
          enum:
          - individual
          - group
        invite_link:
          description: The link that a student can use to accept the assignment.
          type: string
          example: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled:
          description: Whether the invitation link is enabled. Visiting an enabled invitation link will accept the assignment.
          type: boolean
          example: true
        slug:
          description: Sluggified name of the assignment.
          type: string
          example: intro-to-binaries
        students_are_repo_admins:
          description: Whether students are admins on created repository on accepted assignment.
          type: boolean
          example: true
        feedback_pull_requests_enabled:
          description: Whether feedback pull request will be created on assignment acceptance.
          type: boolean
          example: true
        max_teams:
          description: The maximum allowable teams for the assignment.
          nullable: true
          type: integer
          example: 0
        max_members:
          description: The maximum allowable members per team.
          nullable: true
          type: integer
          example: 0
        editor:
          description: The selected editor for the assignment.
          type: string
          example: codespaces
        accepted:
          description: The number of students that have accepted the assignment.
          type: integer
          example: 25
        submitted:
          description: The number of students that have submitted the assignment.
          type: integer
          example: 10
        passing:
          description: The number of students that have passed the assignment.
          type: integer
          example: 10
        language:
          description: The programming language used in the assignment.
          type: string
          example: elixir
        deadline:
          description: The time at which the assignment is due.
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        classroom:
          $ref: '#/components/schemas/simple-classroom'
      required:
      - id
      - public_repo
      - title
      - type
      - invite_link
      - invitations_enabled
      - slug
      - students_are_repo_admins
      - feedback_pull_requests_enabled
      - editor
      - accepted
      - submitted
      - passing
      - language
      - deadline
      - classroom
    classroom-accepted-assignment:
      title: Classroom Accepted Assignment
      description: A GitHub Classroom accepted assignment
      type: object
      properties:
        id:
          description: Unique identifier of the repository.
          type: integer
          example: 42
        submitted:
          description: Whether an accepted assignment has been submitted.
          type: boolean
          example: true
        passing:
          description: Whether a submission passed.
          type: boolean
          example: true
        commit_count:
          description: Count of student commits.
          type: integer
          example: 5
        grade:
          description: Most recent grade.
          type: string
          example: 10/10
        students:
          type: array
          items:
            $ref: '#/components/schemas/simple-classroom-user'
        repository:
          $ref: '#/components/schemas/simple-classroom-repository'
        assignment:
          $ref: '#/components/schemas/simple-classroom-assignment'
      required:
      - id
      - submitted
      - passing
      - commit_count
      - grade
      - students
      - repository
      - assignment
    classroom-assignment-grade:
      title: Classroom Assignment Grade
      description: Grade for a student or groups GitHub Classroom assignment
      type: object
      properties:
        assignment_name:
          description: Name of the assignment
          type: string
        assignment_url:
          description: URL of the assignment
          type: string
        starter_code_url:
          description: URL of the starter code for the assignment
          type: string
        github_username:
          description: GitHub username of the student
          type: string
        roster_identifier:
          description: Roster identifier of the student
          type: string
        student_repository_name:
          description: Name of the student's assignment repository
          type: string
        student_repository_url:
          description: URL of the student's assignment repository
          type: string
        submission_timestamp:
          description: Timestamp of the student's assignment submission
          type: string
        points_awarded:
          description: Number of points awarded to the student
          type: integer
        points_available:
          description: Number of points available for the assignment
          type: integer
        group_name:
          description: If a group assignment, name of the group the student is in
          type: string
      required:
      - assignment_name
      - assignment_url
      - starter_code_url
      - github_username
      - roster_identifier
      - student_repository_name
      - student_repository_url
      - submission_timestamp
      - points_awarded
      - points_available
  examples:
    classroom-assignment:
      value:
        id: 12,
        public_repo: false,
        title: Intro to Binaries
        type: individual
        invite_link: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled: true,
        slug: intro-to-binaries
        students_are_repo_admins: false
        feedback_pull_requests_enabled: true
        max_teams: 0
        max_members: 0
        editor: codespaces
        accepted: 100
        submitted: 40
        passing: 10
        language: ruby
        deadline: '2011-01-26T19:06:43Z'
        stater_code_repository:
          id: 1296269
          full_name: octocat/Hello-World
          html_url: https://github.com/octocat/Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          private: false
          default_branch: main
        classroom:
          id: 1296269
          name: Programming Elixir
          archived: false,
          url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom-accepted-assignment:
      value:
        id: 12,
        submitted: false,
        passing: false,
        commit_count: 5
        grade: 5/10
        students:
        - id: 1
          login: octocat
          avatar_url: https://github.com/images/error/octocat_happy.gif
          html_url: https://github.com/octocat
        repository:
          id: 1296269
          full_name: octocat/Hello-World
          html_url: https://github.com/octocat/Hello-World
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          private: false
          default_branch: main
        assignment:
          id: 12,
          public_repo: false,
          title: Intro to Binaries
          type: individual
          invite_link: https://classroom.github.com/a/Lx7jiUgx
          invitations_enabled: true,
          slug: intro-to-binaries
          students_are_repo_admins: false
          feedback_pull_requests_enabled: true
          max_teams: 0
          max_members: 0
          editor: codespaces
          accepted: 100
          submitted: 40
          passing: 10
          language: ruby
          classroom:
            id: 1296269
            name: Programming Elixir
            archived: false,
            url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom-assignment-grades:
      value:
      - assignment_name: Introduction to Strings
        assignment_url: https://classroom.github.com/classrooms/1337/assignments/1337
        starter_code_url: ''
        github_username: octocat
        roster_identifier: octocat@github.com
        student_repository_name: intro-to-strings-1337-octocat
        student_repository_url: https://github.com/timeforschool/intro-to-strings-1337-octocat
        submission_timestamp: 2018-11-12 01:02
        points_awarded: 10
        points_available: 15
        group_name: octocat-and-friends
      - assignment_name: Introduction to Strings
        assignment_url: https://classroom.github.com/classrooms/1337/assignments/1337
        starter_code_url: ''
        github_username: monalisa
        roster_identifier: monalisa@github.com
        student_repository_name: intro-to-strings-1337-monalisa
        student_repository_url: https://github.com/timeforschool/intro-to-strings-1337-monalisa
        submission_timestamp: 2018-11-12 01:11
        points_awarded: 15
        points_available: 15
        group_name: monalisa-and-friends
    simple-classroom:
      value:
        id: 1296269
        name: Programming Elixir
        archived: false,
        url: https://classroom.github.com/classrooms/1-programming-elixir
    classroom:
      value:
        id: 1296269
        name: Programming Elixir
        archived: false,
        organization:
          id: 1
          login: programming-elixir
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          html_url: https://github.com/programming-elixir
          name: Learn how to build fault tolerant applications
          avatar_url: https://avatars.githubusercontent.com/u/9919?v=4
        url: https://classroom.github.com/classrooms/1-programming-elixir
    simple-classroom-assignment:
      value:
        id: 12,
        public_repo: false,
        title: Intro to Binaries
        type: individual
        invite_link: https://classroom.github.com/a/Lx7jiUgx
        invitations_enabled: true,
        slug: intro-to-binaries
        students_are_repo_admins: false
        feedback_pull_requests_enabled: true
        max_teams: 0
        max_members: 0
        editor: codespaces
        accepted: 100
        submitted: 40
        passing: 10
        language: ruby
        deadline: '2020-01-11T11:59:22Z'
        classroom:
          id: 1296269
          name: Programming Elixir
          archived: false,
          url: https://classroom.github.com/classrooms/1-programming-elixir
  parameters:
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    assignment-id:
      name: assignment_id
      description: The unique identifier of the classroom assignment.
      in: path
      required: true
      schema:
        type: integer
    classroom-id:
      name: classroom_id
      description: The unique identifier of the classroom.
      in: path
      required: true
      schema:
        type: integer
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
security: []
tags:
- name: classroom
  description: Interact with GitHub Classroom.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /assignments/{assignment_id}:
    get:
      summary: Get an assignment
      description: Gets a GitHub Classroom assignment. Assignment will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
      tags:
      - classroom
      operationId: classroom/get-an-assignment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-an-assignment
      parameters:
      - $ref: '#/components/parameters/assignment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classroom-assignment'
              examples:
                default:
                  $ref: '#/components/examples/classroom-assignment'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  /assignments/{assignment_id}/accepted_assignments:
    get:
      summary: List accepted assignments for an assignment
      description: Lists any assignment repositories that have been created by students accepting a GitHub Classroom assignment. Accepted assignments will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
      tags:
      - classroom
      operationId: classroom/list-accepted-assignments-for-an-assignment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-accepted-assignments-for-an-assignment
      parameters:
      - $ref: '#/components/parameters/assignment-id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/classroom-accepted-assignment'
              examples:
                default:
                  $ref: '#/components/examples/classroom-accepted-assignment'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  /assignments/{assignment_id}/grades:
    get:
      summary: Get assignment grades
      description: Gets grades for a GitHub Classroom assignment. Grades will only be returned if the current user is an administrator of the GitHub Classroom for the assignment.
      tags:
      - classroom
      operationId: classroom/get-assignment-grades
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-assignment-grades
      parameters:
      - $ref: '#/components/parameters/assignment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/classroom-assignment-grade'
              examples:
                default:
                  $ref: '#/components/examples/classroom-assignment-grades'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  /classrooms:
    get:
      summary: List classrooms
      description: Lists GitHub Classroom classrooms for the current user. Classrooms will only be returned if the current user is an administrator of one or more GitHub Classrooms.
      tags:
      - classroom
      operationId: classroom/list-classrooms
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-classrooms
      parameters:
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-classroom'
              examples:
                default:
                  $ref: '#/components/examples/simple-classroom'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  /classrooms/{classroom_id}:
    get:
      summary: Get a classroom
      description: Gets a GitHub Classroom classroom for the current user. Classroom will only be returned if the current user is an administrator of the GitHub Classroom.
      tags:
      - classroom
      operationId: classroom/get-a-classroom
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#get-a-classroom
      parameters:
      - $ref: '#/components/parameters/classroom-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classroom'
              examples:
                default:
                  $ref: '#/components/examples/classroom'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
  /classrooms/{classroom_id}/assignments:
    get:
      summary: List assignments for a classroom
      description: Lists GitHub Classroom assignments for a classroom. Assignments will only be returned if the current user is an administrator of the GitHub Classroom.
      tags:
      - classroom
      operationId: classroom/list-assignments-for-a-classroom
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/classroom/classroom#list-assignments-for-a-classroom
      parameters:
      - $ref: '#/components/parameters/classroom-id'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-classroom-assignment'
              examples:
                default:
                  $ref: '#/components/examples/simple-classroom-assignment'
      x-github:
        enabledForGitHubApps: true
        category: classroom
        subcategory: classroom
