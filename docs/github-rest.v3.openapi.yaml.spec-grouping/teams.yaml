openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory\
            \ comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual\
            \ is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members\
            \ of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - '+1'
      - '-1'
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          description: 'Enable or disable GitHub Advanced Security for the repository.


            For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

            '
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    organization-invitation:
      title: Organization Invitation
      description: Organization Invitation
      type: object
      properties:
        id:
          type: integer
          format: int64
        login:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        role:
          type: string
        created_at:
          type: string
        failed_at:
          type: string
          nullable: true
        failed_reason:
          type: string
          nullable: true
        inviter:
          $ref: '#/components/schemas/simple-user'
        team_count:
          type: integer
        node_id:
          type: string
          example: '"MDIyOk9yZ2FuaXphdGlvbkludml0YXRpb24x"'
        invitation_teams_url:
          type: string
          example: '"https://api.github.com/organizations/16/invitations/1/teams"'
        invitation_source:
          type: string
          example: '"member"'
      required:
      - id
      - login
      - email
      - role
      - created_at
      - inviter
      - team_count
      - invitation_teams_url
      - node_id
    team-organization:
      title: Team Organization
      description: Team Organization
      type: object
      properties:
        login:
          type: string
          example: github
        id:
          type: integer
          example: 1
        node_id:
          type: string
          example: MDEyOk9yZ2FuaXphdGlvbjE=
        url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/repos
        events_url:
          type: string
          format: uri
          example: https://api.github.com/orgs/github/events
        hooks_url:
          type: string
          example: https://api.github.com/orgs/github/hooks
        issues_url:
          type: string
          example: https://api.github.com/orgs/github/issues
        members_url:
          type: string
          example: https://api.github.com/orgs/github/members{/member}
        public_members_url:
          type: string
          example: https://api.github.com/orgs/github/public_members{/member}
        avatar_url:
          type: string
          example: https://github.com/images/error/octocat_happy.gif
        description:
          type: string
          example: A great organization
          nullable: true
        name:
          type: string
          example: github
        company:
          type: string
          example: GitHub
        blog:
          type: string
          format: uri
          example: https://github.com/blog
        location:
          type: string
          example: San Francisco
        email:
          type: string
          format: email
          example: octocat@github.com
        twitter_username:
          type: string
          example: github
          nullable: true
        is_verified:
          type: boolean
          example: true
        has_organization_projects:
          type: boolean
          example: true
        has_repository_projects:
          type: boolean
          example: true
        public_repos:
          type: integer
          example: 2
        public_gists:
          type: integer
          example: 1
        followers:
          type: integer
          example: 20
        following:
          type: integer
          example: 0
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        created_at:
          type: string
          format: date-time
          example: '2008-01-14T04:33:35Z'
        type:
          type: string
          example: Organization
        total_private_repos:
          type: integer
          example: 100
        owned_private_repos:
          type: integer
          example: 100
        private_gists:
          type: integer
          example: 81
          nullable: true
        disk_usage:
          type: integer
          example: 10000
          nullable: true
        collaborators:
          type: integer
          example: 8
          nullable: true
        billing_email:
          type: string
          format: email
          example: org@example.com
          nullable: true
        plan:
          type: object
          properties:
            name:
              type: string
            space:
              type: integer
            private_repos:
              type: integer
            filled_seats:
              type: integer
            seats:
              type: integer
          required:
          - name
          - space
          - private_repos
        default_repository_permission:
          type: string
          nullable: true
        members_can_create_repositories:
          type: boolean
          example: true
          nullable: true
        two_factor_requirement_enabled:
          type: boolean
          example: true
          nullable: true
        members_allowed_repository_creation_type:
          type: string
          example: all
        members_can_create_public_repositories:
          type: boolean
          example: true
        members_can_create_private_repositories:
          type: boolean
          example: true
        members_can_create_internal_repositories:
          type: boolean
          example: true
        members_can_create_pages:
          type: boolean
          example: true
        members_can_create_public_pages:
          type: boolean
          example: true
        members_can_create_private_pages:
          type: boolean
          example: true
        members_can_fork_private_repositories:
          type: boolean
          example: false
          nullable: true
        web_commit_signoff_required:
          type: boolean
          example: false
        updated_at:
          type: string
          format: date-time
        archived_at:
          type: string
          format: date-time
          nullable: true
      required:
      - login
      - url
      - id
      - node_id
      - repos_url
      - events_url
      - hooks_url
      - issues_url
      - members_url
      - public_members_url
      - avatar_url
      - description
      - html_url
      - has_organization_projects
      - has_repository_projects
      - public_repos
      - public_gists
      - followers
      - following
      - type
      - created_at
      - updated_at
      - archived_at
    team-full:
      title: Full Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          example: 42
          type: integer
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          example: https://api.github.com/organizations/1/team/1
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        name:
          description: Name of the team
          example: Developers
          type: string
        slug:
          type: string
          example: justice-league
        description:
          type: string
          example: A great team.
          nullable: true
        privacy:
          description: The level of privacy this team should have
          type: string
          enum:
          - closed
          - secret
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          enum:
          - notifications_enabled
          - notifications_disabled
          example: notifications_enabled
        permission:
          description: Permission that the team will have for its repositories
          example: push
          type: string
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
        members_count:
          type: integer
          example: 3
        repos_count:
          type: integer
          example: 10
        created_at:
          type: string
          format: date-time
          example: '2017-07-14T16:53:42Z'
        updated_at:
          type: string
          format: date-time
          example: '2017-08-17T12:37:15Z'
        organization:
          $ref: '#/components/schemas/team-organization'
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - created_at
      - updated_at
      - members_count
      - repos_count
      - organization
    team-discussion:
      title: Team Discussion
      description: A team discussion is a persistent record of a free-form conversation within a team.
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          description: The main text of the discussion.
          example: Please suggest improvements to our workflow in comments.
          type: string
        body_html:
          type: string
          example: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version:
          description: The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        comments_count:
          type: integer
          example: 0
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1/comments
        created_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id:
          type: string
          example: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number:
          description: The unique sequence number of a team discussion.
          example: 42
          type: integer
        pinned:
          description: Whether or not this discussion should be pinned for easy retrieval.
          example: true
          type: boolean
        private:
          description: Whether or not this discussion should be restricted to team members and organization owners.
          example: true
          type: boolean
        team_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027
        title:
          description: The title of the discussion.
          example: How can we improve our workflow?
          type: string
        updated_at:
          type: string
          format: date-time
          example: '2018-01-25T18:56:31Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2343027/discussions/1
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
      - author
      - body
      - body_html
      - body_version
      - comments_count
      - comments_url
      - created_at
      - last_edited_at
      - html_url
      - pinned
      - private
      - node_id
      - number
      - team_url
      - title
      - updated_at
      - url
    team-discussion-comment:
      title: Team Discussion Comment
      description: A reply to a discussion within a team.
      type: object
      properties:
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          description: The main text of the comment.
          example: I agree with this suggestion.
          type: string
        body_html:
          type: string
          example: <p>Do you like apples?</p>
        body_version:
          description: The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
          example: 0307116bbf7ced493b8d8a346c650b71
          type: string
        created_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        last_edited_at:
          type: string
          format: date-time
          nullable: true
        discussion_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id:
          type: string
          example: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number:
          description: The unique sequence number of a team discussion comment.
          example: 42
          type: integer
        updated_at:
          type: string
          format: date-time
          example: '2018-01-15T23:53:58Z'
        url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/2403582/discussions/1/comments/1
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
      - author
      - body
      - body_html
      - body_version
      - created_at
      - last_edited_at
      - discussion_url
      - html_url
      - node_id
      - number
      - updated_at
      - url
    team-membership:
      title: Team Membership
      description: Team Membership
      type: object
      properties:
        url:
          type: string
          format: uri
        role:
          description: The role of the user in the team.
          enum:
          - member
          - maintainer
          default: member
          example: member
          type: string
        state:
          description: The state of the user's membership in the team.
          type: string
          enum:
          - active
          - pending
      required:
      - role
      - state
      - url
    team-project:
      title: Team Project
      description: A team's access to a project.
      type: object
      properties:
        owner_url:
          type: string
        url:
          type: string
        html_url:
          type: string
        columns_url:
          type: string
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        body:
          type: string
          nullable: true
        number:
          type: integer
        state:
          type: string
        creator:
          $ref: '#/components/schemas/simple-user'
        created_at:
          type: string
        updated_at:
          type: string
        organization_permission:
          description: The organization permission for this project. Only present when owner is an organization.
          type: string
        private:
          description: Whether the project is private or not. Only present when owner is an organization.
          type: boolean
        permissions:
          type: object
          properties:
            read:
              type: boolean
            write:
              type: boolean
            admin:
              type: boolean
          required:
          - read
          - write
          - admin
      required:
      - owner_url
      - url
      - html_url
      - columns_url
      - id
      - node_id
      - name
      - body
      - number
      - state
      - creator
      - created_at
      - updated_at
      - permissions
    team-repository:
      title: Team Repository
      description: A team's access to a repository.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        role_name:
          type: string
          example: admin
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          default: false
          type: boolean
          example: false
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
          example: false
        subscribers_count:
          type: integer
        network_count:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
  examples:
    simple-user-items:
      value:
      - login: octocat
        id: 1
        node_id: MDQ6VXNlcjE=
        avatar_url: https://github.com/images/error/octocat_happy.gif
        gravatar_id: ''
        url: https://api.github.com/users/octocat
        html_url: https://github.com/octocat
        followers_url: https://api.github.com/users/octocat/followers
        following_url: https://api.github.com/users/octocat/following{/other_user}
        gists_url: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url: https://api.github.com/users/octocat/subscriptions
        organizations_url: https://api.github.com/users/octocat/orgs
        repos_url: https://api.github.com/users/octocat/repos
        events_url: https://api.github.com/users/octocat/events{/privacy}
        received_events_url: https://api.github.com/users/octocat/received_events
        type: User
        site_admin: false
    organization-invitation-items:
      value:
      - id: 1
        login: monalisa
        node_id: MDQ6VXNlcjE=
        email: octocat@github.com
        role: direct_member
        created_at: '2016-11-30T06:46:10-08:00'
        failed_at: ''
        failed_reason: ''
        inviter:
          login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        team_count: 2
        invitation_teams_url: https://api.github.com/organizations/2/invitations/1/teams
        invitation_source: member
    team-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: null
    minimal-repository-items:
      value:
      - id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        has_discussions: false
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          push: false
          pull: true
        security_and_analysis:
          advanced_security:
            status: enabled
          secret_scanning:
            status: enabled
          secret_scanning_push_protection:
            status: disabled
          secret_scanning_non_provider_patterns:
            status: disabled
    team-full:
      value:
        id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: null
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          is_verified: true
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          updated_at: '2017-08-17T12:37:15Z'
          type: Organization
    team-discussion-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: null
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 0
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: null
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Our first team post
        updated_at: '2018-01-25T18:56:31Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Hi! This is an area for us to collaborate as a team.
        body_html: <p>Hi! This is an area for us to collaborate as a team</p>
        body_version: 0d495416a700fb06133c612575d92bfb
        comments_count: 1
        comments_url: https://api.github.com/teams/2343027/discussions/1/comments
        created_at: '2018-01-25T18:56:31Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1
        node_id: MDE0OlRlYW1EaXNjdXNzaW9uMQ==
        number: 1
        pinned: false
        private: false
        team_url: https://api.github.com/teams/2343027
        title: Welcome to our first team post
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2343027/discussions/1
        reactions:
          url: https://api.github.com/teams/2343027/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-items:
      value:
      - author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: <p>Do you like apples?</p>
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: null
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like apples?
        body_html: <p>Do you like apples?</p>
        body_version: 5eb32b219cdc6a5a9b29ba5d6caa9c51
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: null
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-15T23:53:58Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-discussion-comment-2:
      value:
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Do you like pineapples?
        body_html: <p>Do you like pineapples?</p>
        body_version: e6907b24d9c93cc0c5024a7af5888116
        created_at: '2018-01-15T23:53:58Z'
        last_edited_at: '2018-01-26T18:22:20Z'
        discussion_url: https://api.github.com/teams/2403582/discussions/1
        html_url: https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1
        node_id: MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=
        number: 1
        updated_at: '2018-01-26T18:22:20Z'
        url: https://api.github.com/teams/2403582/discussions/1/comments/1
        reactions:
          url: https://api.github.com/teams/2403582/discussions/1/reactions
          total_count: 5
          '+1': 3
          '-1': 1
          laugh: 0
          confused: 0
          heart: 1
          hooray: 0
          eyes: 1
          rocket: 1
    team-membership-response-if-user-is-a-team-maintainer:
      summary: Response if user is a team maintainer
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: maintainer
        state: active
    team-membership-response-if-users-membership-with-team-is-now-pending:
      summary: Response if user's membership with team is now pending
      value:
        url: https://api.github.com/teams/1/memberships/octocat
        role: member
        state: pending
    team-project-items:
      value:
      - owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-project:
      value:
        owner_url: https://api.github.com/orgs/octocat
        url: https://api.github.com/projects/1002605
        html_url: https://github.com/orgs/api-playground/projects/1
        columns_url: https://api.github.com/projects/1002605/columns
        id: 1002605
        node_id: MDc6UHJvamVjdDEwMDI2MDU=
        name: Organization Roadmap
        body: High-level roadmap for the upcoming year.
        number: 1
        state: open
        creator:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        created_at: '2011-04-11T20:09:31Z'
        updated_at: '2014-03-04T18:58:10Z'
        organization_permission: write
        private: false
        permissions:
          read: true
          write: true
          admin: false
    team-repository-alternative-response-with-repository-permissions:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          maintain: false
          push: false
          triage: false
          pull: true
        role_name: read
        allow_rebase_merge: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
    team-items-response-if-child-teams-exist:
      value:
      - id: 2
        node_id: MDQ6VGVhbTI=
        url: https://api.github.com/teams/2
        name: Original Roster
        slug: original-roster
        description: Started it all.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/2/members{/member}
        repositories_url: https://api.github.com/teams/2/repos
        parent:
          id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        html_url: https://github.com/orgs/rails/teams/core
    team-repository-alternative-response-with-extra-repository-information:
      value:
        id: 1296269
        node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name: Hello-World
        full_name: octocat/Hello-World
        owner:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        private: false
        html_url: https://github.com/octocat/Hello-World
        description: This your first repo!
        fork: false
        url: https://api.github.com/repos/octocat/Hello-World
        archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
        events_url: https://api.github.com/repos/octocat/Hello-World/events
        forks_url: https://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url: git:github.com/octocat/Hello-World.git
        issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url: https://api.github.com/repos/octocat/Hello-World/languages
        merges_url: https://api.github.com/repos/octocat/Hello-World/merges
        milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url: git@github.com:octocat/Hello-World.git
        stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
        tags_url: https://api.github.com/repos/octocat/Hello-World/tags
        teams_url: https://api.github.com/repos/octocat/Hello-World/teams
        trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url: https://github.com/octocat/Hello-World.git
        mirror_url: git:git.example.com/octocat/Hello-World
        hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        svn_url: https://svn.github.com/octocat/Hello-World
        homepage: https://github.com
        language: null
        forks_count: 9
        stargazers_count: 80
        watchers_count: 80
        size: 108
        default_branch: master
        open_issues_count: 0
        is_template: false
        topics:
        - octocat
        - atom
        - electron
        - api
        has_issues: true
        has_projects: true
        has_wiki: true
        has_pages: false
        has_downloads: true
        archived: false
        disabled: false
        visibility: public
        pushed_at: '2011-01-26T19:06:43Z'
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:14:43Z'
        permissions:
          admin: false
          maintain: false
          push: false
          triage: false
          pull: true
        role_name: read
        allow_rebase_merge: true
        temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
        allow_squash_merge: true
        allow_auto_merge: false
        delete_branch_on_merge: true
        allow_merge_commit: true
        subscribers_count: 42
        network_count: 0
        license:
          key: mit
          name: MIT License
          url: https://api.github.com/licenses/mit
          spdx_id: MIT
          node_id: MDc6TGljZW5zZW1pdA==
          html_url: https://api.github.com/licenses/mit
        forks: 1
        open_issues: 1
        watchers: 1
    team-full-items:
      value:
      - id: 1
        node_id: MDQ6VGVhbTE=
        url: https://api.github.com/teams/1
        html_url: https://github.com/orgs/github/teams/justice-league
        name: Justice League
        slug: justice-league
        description: A great team.
        privacy: closed
        notification_setting: notifications_enabled
        permission: admin
        members_url: https://api.github.com/teams/1/members{/member}
        repositories_url: https://api.github.com/teams/1/repos
        parent: null
        members_count: 3
        repos_count: 10
        created_at: '2017-07-14T16:53:42Z'
        updated_at: '2017-08-17T12:37:15Z'
        organization:
          login: github
          id: 1
          node_id: MDEyOk9yZ2FuaXphdGlvbjE=
          url: https://api.github.com/orgs/github
          repos_url: https://api.github.com/orgs/github/repos
          events_url: https://api.github.com/orgs/github/events
          hooks_url: https://api.github.com/orgs/github/hooks
          issues_url: https://api.github.com/orgs/github/issues
          members_url: https://api.github.com/orgs/github/members{/member}
          public_members_url: https://api.github.com/orgs/github/public_members{/member}
          avatar_url: https://github.com/images/error/octocat_happy.gif
          description: A great organization
          name: github
          company: GitHub
          blog: https://github.com/blog
          location: San Francisco
          email: octocat@github.com
          is_verified: true
          has_organization_projects: true
          has_repository_projects: true
          public_repos: 2
          public_gists: 1
          followers: 20
          following: 0
          html_url: https://github.com/octocat
          created_at: '2008-01-14T04:33:35Z'
          updated_at: '2017-08-17T12:37:15Z'
          type: Organization
  parameters:
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    username:
      name: username
      description: The handle for the GitHub user account.
      in: path
      required: true
      schema:
        type: string
    team-slug:
      name: team_slug
      description: The slug of the team name.
      in: path
      required: true
      schema:
        type: string
    discussion-number:
      name: discussion_number
      description: The number that identifies the discussion.
      in: path
      required: true
      schema:
        type: integer
    comment-number:
      name: comment_number
      description: The number that identifies the comment.
      in: path
      required: true
      schema:
        type: integer
    project-id:
      name: project_id
      description: The unique identifier of the project.
      in: path
      required: true
      schema:
        type: integer
    team-id:
      name: team_id
      description: The unique identifier of the team.
      in: path
      required: true
      schema:
        type: integer
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    not_modified:
      description: Not modified
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: teams
  description: Interact with GitHub Teams.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /orgs/{org}/teams:
    get:
      summary: List teams
      description: Lists all teams in an organization that are visible to the authenticated user.
      tags:
      - teams
      operationId: teams/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-teams
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                default:
                  $ref: '#/components/examples/team-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    post:
      summary: Create a team
      description: 'To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see "[Setting team creation permissions](https://docs.github.com/articles/setting-team-creation-permissions-in-your-organization)."


        When you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see "[About teams](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/about-teams)".'
      tags:
      - teams
      operationId: teams/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#create-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                maintainers:
                  type: array
                  description: List GitHub usernames for organization members who will become team maintainers.
                  items:
                    type: string
                repo_names:
                  type: array
                  description: The full name (e.g., "organization-name/repository-name") of repositories to add the team to.
                  items:
                    type: string
                privacy:
                  type: string
                  description: "The level of privacy this team should have. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \nDefault: `secret`  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization.  \nDefault for child team: `closed`"
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. The options are:  \n * `notifications_enabled` - team members receive notifications when the team is @mentioned.  \n * `notifications_disabled` - no one receives notifications.  \nDefault: `notifications_enabled`"
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: '**Closing down notice**. The permission that new repositories will be added to the team with when none is specified.'
                  enum:
                  - pull
                  - push
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
              required:
              - name
            examples:
              default:
                value:
                  name: Justice League
                  description: A great team
                  permission: push
                  notification_setting: notifications_enabled
                  privacy: closed
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}:
    get:
      summary: Get a team by name
      description: 'Gets a team using the team''s `slug`. To create the `slug`, GitHub replaces special characters in the `name` string, changes all words to lowercase, and replaces spaces with a `-` separator. For example, `"My TEam Näme"` would become `my-team-name`.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`.'
      tags:
      - teams
      operationId: teams/get-by-name
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#get-a-team-by-name
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    patch:
      summary: Update a team
      description: 'To edit a team, the authenticated user must either be an organization owner or a team maintainer.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`.'
      tags:
      - teams
      operationId: teams/update-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#update-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization."
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are: \n * `notifications_enabled` - team members receive notifications when the team is @mentioned.  \n * `notifications_disabled` - no one receives notifications."
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: '**Closing down notice**. The permission that new repositories will be added to the team with when none is specified.'
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
            examples:
              default:
                value:
                  name: new team name
                  description: new team description
                  privacy: closed
                  notification_setting: notifications_enabled
      responses:
        '200':
          description: Response when the updated information already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Delete a team
      description: 'To delete a team, the authenticated user must be an organization owner or team maintainer.


        If you are an organization owner, deleting a parent team will delete all of its child teams as well.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`.'
      tags:
      - teams
      operationId: teams/delete-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#delete-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/discussions:
    get:
      summary: List discussions
      description: 'List all discussions on a team''s page.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/list-discussions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#list-discussions
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - name: pinned
        in: query
        required: false
        description: Pinned discussions only filter
        schema:
          type: string
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    post:
      summary: Create a discussion
      description: 'Creates a new discussion post on a team''s page.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/create-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#create-a-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.
                  default: false
              required:
              - title
              - body
            examples:
              default:
                value:
                  title: Our first team post
                  body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}:
    get:
      summary: Get a discussion
      description: 'Get a specific discussion on a team''s page.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/get-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#get-a-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    patch:
      summary: Update a discussion
      description: 'Edits the title and body text of a discussion post. Only the parameters you provide are updated.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/update-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#update-a-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            examples:
              default:
                value:
                  title: Welcome to our first team post
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
    delete:
      summary: Delete a discussion
      description: 'Delete a discussion from a team''s page.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/delete-discussion-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#delete-a-discussion
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussions
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments:
    get:
      summary: List discussion comments
      description: 'List all comments on a team discussion.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/list-discussion-comments-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    post:
      summary: Create a discussion comment
      description: 'Creates a new comment on a team discussion.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/create-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like apples?
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}:
    get:
      summary: Get a discussion comment
      description: 'Get a specific comment on a team discussion.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/get-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    patch:
      summary: Update a discussion comment
      description: 'Edits the body text of a discussion comment.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/update-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like pineapples?
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
    delete:
      summary: Delete a discussion comment
      description: 'Deletes a comment on a team discussion.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/delete-discussion-comment-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: discussion-comments
  /orgs/{org}/teams/{team_slug}/invitations:
    get:
      summary: List pending team invitations
      description: 'The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`.'
      tags:
      - teams
      operationId: teams/list-pending-invitations-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-pending-team-invitations
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-invitation'
              examples:
                default:
                  $ref: '#/components/examples/organization-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  /orgs/{org}/teams/{team_slug}/members:
    get:
      summary: List team members
      description: 'Team members will include the members of child teams.


        To list members in a team, the team must be visible to the authenticated user.'
      tags:
      - teams
      operationId: teams/list-members-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-team-members
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - name: role
        description: Filters members returned by their role in the team.
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  /orgs/{org}/teams/{team_slug}/memberships/{username}:
    get:
      summary: Get team membership for a user
      description: 'Team members will include the members of child teams.


        To get a user''s membership with a team, the team must be visible to the authenticated user.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.


        > [!NOTE]

        > The response contains the `state` of the membership and the member''s `role`.


        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/teams/teams#create-a-team).'
      tags:
      - teams
      operationId: teams/get-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-user-is-a-team-maintainer:
                  $ref: '#/components/examples/team-membership-response-if-user-is-a-team-maintainer'
        '404':
          description: if user has no team membership
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    put:
      summary: Add or update team membership for a user
      description: 'Adds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        An organization owner can add someone who is not part of the team''s organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the "pending" state until the person accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team.


        If the user is already a member of the team, this endpoint will update the role of the team member''s role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`.'
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: The role that this user should have in the team.
                  enum:
                  - member
                  - maintainer
                  default: member
            examples:
              default:
                summary: Add or update team membership for an organization member
                value:
                  role: maintainer
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  $ref: '#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending'
        '403':
          description: Forbidden if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization to a team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
    delete:
      summary: Remove team membership for a user
      description: 'To remove a membership between a user and a team, the authenticated user must have ''admin'' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`.'
      tags:
      - teams
      operationId: teams/remove-membership-for-user-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: members
  /orgs/{org}/teams/{team_slug}/projects:
    get:
      summary: List team projects
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/list-projects-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-projects
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
        deprecationDate: '2024-05-23'
        removalDate: '2025-04-01'
      deprecated: true
  /orgs/{org}/teams/{team_slug}/projects/{project_id}:
    get:
      summary: Check team permissions for a project
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/check-permissions-for-project-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/project-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project'
        '404':
          description: Not Found if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
        deprecationDate: '2024-05-23'
        removalDate: '2025-04-01'
      deprecated: true
    put:
      summary: Add or update team project permissions
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/project-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant to the team for this project. Default: the team''s `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you''ll need to set `Content-Length` to zero when calling this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."'
                  enum:
                  - read
                  - write
                  - admin
              nullable: true
            examples:
              default:
                summary: Updates the permissions for the team to write for the project
                value:
                  permission: write
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
        deprecationDate: '2024-05-23'
        removalDate: '2025-04-01'
      deprecated: true
    delete:
      summary: Remove a project from a team
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/remove-project-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/project-id'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
        deprecationDate: '2024-05-23'
        removalDate: '2025-04-01'
      deprecated: true
  /orgs/{org}/teams/{team_slug}/repos:
    get:
      summary: List team repositories
      description: 'Lists a team''s repositories visible to the authenticated user.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`.'
      tags:
      - teams
      operationId: teams/list-repos-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-repositories
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}:
    get:
      summary: Check team permissions for a repository
      description: 'Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.


        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types/) via the `application/vnd.github.v3.repository+json` accept header.


        If a team doesn''t have permission for the repository, you will receive a `404 Not Found` response status.


        If the repository is private, you must have at least `read` permission for that repository, and your token must have the `repo` or `admin:org` scope. Otherwise, you will receive a `404 Not Found` response status.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.'
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Alternative response with repository permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-repository'
              examples:
                alternative-response-with-repository-permissions:
                  $ref: '#/components/examples/team-repository-alternative-response-with-repository-permissions'
        '204':
          description: Response if team has permission for the repository. This is the response when the repository media type hasn't been provded in the Accept header.
        '404':
          description: Not Found if team does not have permission for the repository
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    put:
      summary: Add or update team repository permissions
      description: 'To add a repository to a team or update the team''s permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you''ll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.


        For more information about the permission levels, see "[Repository permission levels for an organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)".'
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant the team on this repository. We accept the following permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin` and you can also specify a custom repository role name, if the owning organization has defined any. If no permission is specified, the team''s `permission` attribute will be used to determine what permission to grant the team on this repository.'
            examples:
              default:
                summary: Adding a team to an organization repository with the write role
                value:
                  permission: push
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
    delete:
      summary: Remove a repository from a team
      description: 'If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.'
      tags:
      - teams
      operationId: teams/remove-repo-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /orgs/{org}/teams/{team_slug}/teams:
    get:
      summary: List child teams
      description: 'Lists the child teams of the team specified by `{team_slug}`.


        > [!NOTE]

        > You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`.'
      tags:
      - teams
      operationId: teams/list-child-in-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-child-teams
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/team-slug'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                response-if-child-teams-exist:
                  $ref: '#/components/examples/team-items-response-if-child-teams-exist'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: teams
        subcategory: teams
  /teams/{team_id}:
    get:
      summary: Get a team (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://docs.github.com/rest/teams/teams#get-a-team-by-name) endpoint.'
      tags:
      - teams
      operationId: teams/get-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#get-a-team-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    patch:
      summary: Update a team (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://docs.github.com/rest/teams/teams#update-a-team) endpoint.


        To edit a team, the authenticated user must either be an organization owner or a team maintainer.


        > [!NOTE]

        > With nested teams, the `privacy` for parent teams cannot be `secret`.'
      tags:
      - teams
      operationId: teams/update-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#update-a-team-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team.
                description:
                  type: string
                  description: The description of the team.
                privacy:
                  type: string
                  description: "The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  \n**For a non-nested team:**  \n * `secret` - only visible to organization owners and members of this team.  \n * `closed` - visible to all members of this organization.  \n**For a parent or child team:**  \n * `closed` - visible to all members of this organization."
                  enum:
                  - secret
                  - closed
                notification_setting:
                  type: string
                  description: "The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are: \n * `notifications_enabled` - team members receive notifications when the team is @mentioned.  \n * `notifications_disabled` - no one receives notifications."
                  enum:
                  - notifications_enabled
                  - notifications_disabled
                permission:
                  type: string
                  description: '**Closing down notice**. The permission that new repositories will be added to the team with when none is specified.'
                  enum:
                  - pull
                  - push
                  - admin
                  default: pull
                parent_team_id:
                  type: integer
                  description: The ID of a team to set as the parent team.
                  nullable: true
              required:
              - name
            examples:
              default:
                value:
                  name: new team name
                  description: new team description
                  privacy: closed
                  notification_setting: notifications_enabled
      responses:
        '200':
          description: Response when the updated information already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Delete a team (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://docs.github.com/rest/teams/teams#delete-a-team) endpoint.


        To delete a team, the authenticated user must be an organization owner or team maintainer.


        If you are an organization owner, deleting a parent team will delete all of its child teams as well.'
      tags:
      - teams
      operationId: teams/delete-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#delete-a-team-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  /teams/{team_id}/discussions:
    get:
      summary: List discussions (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://docs.github.com/rest/teams/discussions#list-discussions) endpoint.


        List all discussions on a team''s page.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/list-discussions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#list-discussions-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    post:
      summary: Create a discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://docs.github.com/rest/teams/discussions#create-a-discussion) endpoint.


        Creates a new discussion post on a team''s page.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/create-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#create-a-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
                private:
                  type: boolean
                  description: Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.
                  default: false
              required:
              - title
              - body
            examples:
              default:
                value:
                  title: Our first team post
                  body: Hi! This is an area for us to collaborate as a team.
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  /teams/{team_id}/discussions/{discussion_number}:
    get:
      summary: Get a discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://docs.github.com/rest/teams/discussions#get-a-discussion) endpoint.


        Get a specific discussion on a team''s page.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/get-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#get-a-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    patch:
      summary: Update a discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://docs.github.com/rest/teams/discussions#update-a-discussion) endpoint.


        Edits the title and body text of a discussion post. Only the parameters you provide are updated.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/update-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#update-a-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The discussion post's title.
                body:
                  type: string
                  description: The discussion post's body text.
            examples:
              default:
                value:
                  title: Welcome to our first team post
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
    delete:
      summary: Delete a discussion (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://docs.github.com/rest/teams/discussions#delete-a-discussion) endpoint.


        Delete a discussion from a team''s page.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/delete-discussion-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussions#delete-a-discussion-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussions
      deprecated: true
  /teams/{team_id}/discussions/{discussion_number}/comments:
    get:
      summary: List discussion comments (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments) endpoint.


        List all comments on a team discussion.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/list-discussion-comments-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#list-discussion-comments-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    post:
      summary: Create a discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment) endpoint.


        Creates a new comment on a team discussion.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/create-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#create-a-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like apples?
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}:
    get:
      summary: Get a discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment) endpoint.


        Get a specific comment on a team discussion.


        OAuth app tokens and personal access tokens (classic) need the `read:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/get-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#get-a-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    patch:
      summary: Update a discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment) endpoint.


        Edits the body text of a discussion comment.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/update-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#update-a-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The discussion comment's body text.
              required:
              - body
            examples:
              default:
                value:
                  body: Do you like pineapples?
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-discussion-comment'
              examples:
                default:
                  $ref: '#/components/examples/team-discussion-comment-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
    delete:
      summary: Delete a discussion comment (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment) endpoint.


        Deletes a comment on a team discussion.


        OAuth app tokens and personal access tokens (classic) need the `write:discussion` scope to use this endpoint.'
      tags:
      - teams
      operationId: teams/delete-discussion-comment-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/discussion-comments#delete-a-discussion-comment-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/discussion-number'
      - $ref: '#/components/parameters/comment-number'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: discussion-comments
      deprecated: true
  /teams/{team_id}/invitations:
    get:
      summary: List pending team invitations (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://docs.github.com/rest/teams/members#list-pending-team-invitations) endpoint.


        The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.'
      tags:
      - teams
      operationId: teams/list-pending-invitations-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-pending-team-invitations-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-invitation'
              examples:
                default:
                  $ref: '#/components/examples/organization-invitation-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  /teams/{team_id}/members:
    get:
      summary: List team members (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://docs.github.com/rest/teams/members#list-team-members) endpoint.


        Team members will include the members of child teams.'
      tags:
      - teams
      operationId: teams/list-members-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#list-team-members-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - name: role
        description: Filters members returned by their role in the team.
        in: query
        required: false
        schema:
          type: string
          enum:
          - member
          - maintainer
          - all
          default: all
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/simple-user'
              examples:
                default:
                  $ref: '#/components/examples/simple-user-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  /teams/{team_id}/members/{username}:
    get:
      summary: Get team member (Legacy)
      description: 'The "Get team member" endpoint (described below) is closing down.


        We recommend using the [Get team membership for a user](https://docs.github.com/rest/teams/members#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.


        To list members in a team, the team must be visible to the authenticated user.'
      tags:
      - teams
      operationId: teams/get-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-member-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: if user is a member
        '404':
          description: if user is not a member
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add team member (Legacy)
      description: 'The "Add team member" endpoint (described below) is closing down.


        We recommend using the [Add or update team membership for a user](https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they''re changing. The person being added to the team must be a member of the team''s organization.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        Note that you''ll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."'
      tags:
      - teams
      operationId: teams/add-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-team-member-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '404':
          description: Not Found if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization to a team or you attempt to add a user to a team when they are not a member of at least one other team in the same organization
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team member (Legacy)
      description: 'The "Remove team member" endpoint (described below) is closing down.


        We recommend using the [Remove team membership for a user](https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To remove a team member, the authenticated user must have ''admin'' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."'
      tags:
      - teams
      operationId: teams/remove-member-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-member-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '404':
          description: Not Found if team synchronization is setup
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  /teams/{team_id}/memberships/{username}:
    get:
      summary: Get team membership for a user (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://docs.github.com/rest/teams/members#get-team-membership-for-a-user) endpoint.


        Team members will include the members of child teams.


        To get a user''s membership with a team, the team must be visible to the authenticated user.


        **Note:**

        The response contains the `state` of the membership and the member''s `role`.


        The `role` for organization owners is set to `maintainer`. For more information about `maintainer` roles, see [Create a team](https://docs.github.com/rest/teams/teams#create-a-team).'
      tags:
      - teams
      operationId: teams/get-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#get-team-membership-for-a-user-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-user-is-a-team-maintainer:
                  $ref: '#/components/examples/team-membership-response-if-user-is-a-team-maintainer'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    put:
      summary: Add or update team membership for a user (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user) endpoint.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        If the user is already a member of the team''s organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."


        If the user is unaffiliated with the team''s organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the "pending" state until the user accepts the invitation, at which point the membership will transition to the "active" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.


        If the user is already a member of the team, this endpoint will update the role of the team member''s role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.'
      tags:
      - teams
      operationId: teams/add-or-update-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#add-or-update-team-membership-for-a-user-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  description: The role that this user should have in the team.
                  enum:
                  - member
                  - maintainer
                  default: member
            examples:
              default:
                summary: Assign the member role for a user in a team
                value:
                  role: member
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-membership'
              examples:
                response-if-users-membership-with-team-is-now-pending:
                  $ref: '#/components/examples/team-membership-response-if-users-membership-with-team-is-now-pending'
        '403':
          description: Forbidden if team synchronization is set up
        '422':
          description: Unprocessable Entity if you attempt to add an organization to a team
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
    delete:
      summary: Remove team membership for a user (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user) endpoint.


        Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To remove a membership between a user and a team, the authenticated user must have ''admin'' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.


        > [!NOTE]

        > When you have team synchronization set up for a team with your organization''s identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team''s membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see "[Synchronizing teams between your identity provider and GitHub](https://docs.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/)."'
      tags:
      - teams
      operationId: teams/remove-membership-for-user-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/members#remove-team-membership-for-a-user-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/username'
      responses:
        '204':
          description: Response
        '403':
          description: if team synchronization is set up
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: members
      deprecated: true
  /teams/{team_id}/projects:
    get:
      summary: List team projects (Legacy)
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/list-projects-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-projects-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2025-04-01'
        deprecationDate: '2024-05-23'
        category: teams
        subcategory: teams
      deprecated: true
  /teams/{team_id}/projects/{project_id}:
    get:
      summary: Check team permissions for a project (Legacy)
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/check-permissions-for-project-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-project-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/project-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-project'
              examples:
                default:
                  $ref: '#/components/examples/team-project'
        '404':
          description: Not Found if project is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2025-04-01'
        deprecationDate: '2024-05-23'
        category: teams
        subcategory: teams
      deprecated: true
    put:
      summary: Add or update team project permissions (Legacy)
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/add-or-update-project-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/project-id'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: 'The permission to grant to the team for this project. Default: the team''s `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you''ll need to set `Content-Length` to zero when calling this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."'
                  enum:
                  - read
                  - write
                  - admin
            examples:
              default:
                summary: Example of setting permission to read
                value:
                  permission: read
      responses:
        '204':
          description: Response
        '403':
          description: Forbidden if the project is not owned by the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-the-project-is-not-owned-by-the-organization:
                  value:
                    message: Must have admin rights to Repository.
                    documentation_url: https://docs.github.com/rest/teams/teams#add-or-update-team-project-permissions
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2025-04-01'
        deprecationDate: '2024-05-23'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Remove a project from a team (Legacy)
      description: '> [!WARNING]

        > **Closing down notice:** Projects (classic) is being deprecated in favor of the new Projects experience.

        > See the [changelog](https://github.blog/changelog/2024-05-23-sunset-notice-projects-classic/) for more information.'
      tags:
      - teams
      operationId: teams/remove-project-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-project-from-a-team-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/project-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2025-04-01'
        deprecationDate: '2024-05-23'
        category: teams
        subcategory: teams
      deprecated: true
  /teams/{team_id}/repos:
    get:
      summary: List team repositories (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://docs.github.com/rest/teams/teams#list-team-repositories) endpoint.'
      tags:
      - teams
      operationId: teams/list-repos-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-team-repositories-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/minimal-repository'
              examples:
                default:
                  $ref: '#/components/examples/minimal-repository-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  /teams/{team_id}/repos/{owner}/{repo}:
    get:
      summary: Check team permissions for a repository (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository) endpoint.


        > [!NOTE]

        > Repositories inherited through a parent team will also be checked.


        You can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types/) via the `Accept` header:'
      tags:
      - teams
      operationId: teams/check-permissions-for-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#check-team-permissions-for-a-repository-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '200':
          description: Alternative response with extra repository information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team-repository'
              examples:
                alternative-response-with-extra-repository-information:
                  $ref: '#/components/examples/team-repository-alternative-response-with-extra-repository-information'
        '204':
          description: Response if repository is managed by this team
        '404':
          description: Not Found if repository is not managed by this team
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    put:
      summary: Add or update team repository permissions (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new "[Add or update team repository permissions](https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions)" endpoint.


        To add a repository to a team or update the team''s permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.


        Note that, if you choose not to pass any parameters, you''ll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method)."'
      tags:
      - teams
      operationId: teams/add-or-update-repo-permissions-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#add-or-update-team-repository-permissions-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  description: The permission to grant the team on this repository. If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
                  enum:
                  - pull
                  - push
                  - admin
            examples:
              default:
                summary: Example of setting permission to pull
                value:
                  permission: push
      responses:
        '204':
          description: Response
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
    delete:
      summary: Remove a repository from a team (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team) endpoint.


        If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team.'
      tags:
      - teams
      operationId: teams/remove-repo-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#remove-a-repository-from-a-team-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '204':
          description: Response
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  /teams/{team_id}/teams:
    get:
      summary: List child teams (Legacy)
      description: '> [!WARNING]

        > **Endpoint closing down notice:** This endpoint route is closing down and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://docs.github.com/rest/teams/teams#list-child-teams) endpoint.'
      tags:
      - teams
      operationId: teams/list-child-legacy
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-child-teams-legacy
      parameters:
      - $ref: '#/components/parameters/team-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: if child teams exist
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
              examples:
                response-if-child-teams-exist:
                  $ref: '#/components/examples/team-items-response-if-child-teams-exist'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        removalDate: '2021-02-01'
        deprecationDate: '2020-01-21'
        category: teams
        subcategory: teams
      deprecated: true
  /user/teams:
    get:
      summary: List teams for the authenticated user
      description: 'List all of the teams across all of the organizations to which the authenticated

        user belongs.


        OAuth app tokens and personal access tokens (classic) need the `user`, `repo`, or `read:org` scope to use this endpoint.


        When using a fine-grained personal access token, the resource owner of the token must be a single organization, and the response will only include the teams from that organization.'
      tags:
      - teams
      operationId: teams/list-for-authenticated-user
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/teams/teams#list-teams-for-the-authenticated-user
      parameters:
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team-full'
              examples:
                default:
                  $ref: '#/components/examples/team-full-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: teams
        subcategory: teams
