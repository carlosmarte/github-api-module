openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    validation-error-simple:
      title: Validation Error Simple
      description: Validation Error Simple
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: 'The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request''s title.

            - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: 'The default value for a squash merge commit message:


            - `PR_BODY` - default to the pull request''s body.

            - `COMMIT_MESSAGES` - default to the branch''s commit messages.

            - `BLANK` - default to a blank commit message.'
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: 'The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request''s title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: 'The default value for a merge commit message.


            - `PR_TITLE` - default to the pull request''s title.

            - `PR_BODY` - default to the pull request''s body.

            - `BLANK` - default to a blank commit message.'
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
      nullable: true
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
      - COLLABORATOR
      - CONTRIBUTOR
      - FIRST_TIMER
      - FIRST_TIME_CONTRIBUTOR
      - MANNEQUIN
      - MEMBER
      - NONE
      - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - '+1'
      - '-1'
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    empty-object:
      title: Empty Object
      description: An object without any properties.
      type: object
      properties: {}
      additionalProperties: false
    nullable-team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      nullable: true
    team:
      title: Team
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
          nullable: true
        privacy:
          type: string
        notification_setting:
          type: string
        permission:
          type: string
        permissions:
          type: object
          properties:
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
            admin:
              type: boolean
          required:
          - pull
          - triage
          - push
          - maintain
          - admin
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        members_url:
          type: string
        repositories_url:
          type: string
          format: uri
        parent:
          $ref: '#/components/schemas/nullable-team-simple'
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
      - parent
    team-simple:
      title: Team Simple
      description: Groups of organization members that gives permissions on specified repositories.
      type: object
      properties:
        id:
          description: Unique identifier of the team
          type: integer
          example: 1
        node_id:
          type: string
          example: MDQ6VGVhbTE=
        url:
          description: URL for the team
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1
        members_url:
          type: string
          example: https://api.github.com/organizations/1/team/1/members{/member}
        name:
          description: Name of the team
          type: string
          example: Justice League
        description:
          description: Description of the team
          type: string
          nullable: true
          example: A great team.
        permission:
          description: Permission that the team will have for its repositories
          type: string
          example: admin
        privacy:
          description: The level of privacy this team should have
          type: string
          example: closed
        notification_setting:
          description: The notification setting the team has set
          type: string
          example: notifications_enabled
        html_url:
          type: string
          format: uri
          example: https://github.com/orgs/rails/teams/core
        repositories_url:
          type: string
          format: uri
          example: https://api.github.com/organizations/1/team/1/repos
        slug:
          type: string
          example: justice-league
        ldap_dn:
          description: Distinguished Name (DN) that team maps to within LDAP environment
          example: uid=example,ou=users,dc=github,dc=com
          type: string
      required:
      - id
      - node_id
      - url
      - members_url
      - name
      - description
      - permission
      - html_url
      - repositories_url
      - slug
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
        verified_at:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
      - verified_at
    diff-entry:
      title: Diff Entry
      description: Diff Entry
      type: object
      properties:
        sha:
          type: string
          example: bbcd538c8e72b8c175046e27cc8f907076331401
        filename:
          type: string
          example: file1.txt
        status:
          type: string
          enum:
          - added
          - removed
          - modified
          - renamed
          - copied
          - changed
          - unchanged
          example: added
        additions:
          type: integer
          example: 103
        deletions:
          type: integer
          example: 21
        changes:
          type: integer
          example: 124
        blob_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch:
          type: string
          example: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
        previous_filename:
          type: string
          example: file.txt
      required:
      - additions
      - blob_url
      - changes
      - contents_url
      - deletions
      - filename
      - raw_url
      - sha
      - status
    commit:
      title: Commit
      description: Commit
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id:
          type: string
          example: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          type: object
          properties:
            url:
              type: string
              format: uri
              example: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
            author:
              $ref: '#/components/schemas/nullable-git-user'
            committer:
              $ref: '#/components/schemas/nullable-git-user'
            message:
              type: string
              example: Fix all the bugs
            comment_count:
              type: integer
              example: 0
            tree:
              type: object
              properties:
                sha:
                  type: string
                  example: 827efc6d56897b048c772eb4087f854f46256132
                url:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/tree/827efc6d56897b048c772eb4087f854f46256132
              required:
              - sha
              - url
            verification:
              $ref: '#/components/schemas/verification'
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/empty-object'
        committer:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/empty-object'
        parents:
          type: array
          items:
            type: object
            properties:
              sha:
                type: string
                example: 7638417db6d59f3c431d3e1f261cc637155684cd
              url:
                type: string
                format: uri
                example: https://api.github.com/repos/octocat/Hello-World/commits/7638417db6d59f3c431d3e1f261cc637155684cd
              html_url:
                type: string
                format: uri
                example: https://github.com/octocat/Hello-World/commit/7638417db6d59f3c431d3e1f261cc637155684cd
            required:
            - sha
            - url
        stats:
          type: object
          properties:
            additions:
              type: integer
            deletions:
              type: integer
            total:
              type: integer
        files:
          type: array
          items:
            $ref: '#/components/schemas/diff-entry'
      required:
      - url
      - sha
      - node_id
      - html_url
      - comments_url
      - commit
      - author
      - committer
      - parents
    link:
      title: Link
      description: Hypermedia Link
      type: object
      properties:
        href:
          type: string
      required:
      - href
    auto-merge:
      title: Auto merge
      description: The status of auto merging a pull request.
      type: object
      properties:
        enabled_by:
          $ref: '#/components/schemas/simple-user'
        merge_method:
          type: string
          description: The merge method to use.
          enum:
          - merge
          - squash
          - rebase
        commit_title:
          type: string
          description: Title for the merge commit message.
        commit_message:
          type: string
          description: Commit message for the merge commit.
      required:
      - enabled_by
      - merge_method
      - commit_title
      - commit_message
      nullable: true
    pull-request-simple:
      title: Pull Request Simple
      description: Pull Request Simple
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          type: integer
          example: 1347
        state:
          type: string
          example: open
        locked:
          type: boolean
          example: true
        title:
          type: string
          example: new-feature
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_reviewers:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_teams:
          type: array
          items:
            $ref: '#/components/schemas/team'
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/nullable-simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              $ref: '#/components/schemas/link'
            commits:
              $ref: '#/components/schemas/link'
            statuses:
              $ref: '#/components/schemas/link'
            html:
              $ref: '#/components/schemas/link'
            issue:
              $ref: '#/components/schemas/link'
            review_comments:
              $ref: '#/components/schemas/link'
            review_comment:
              $ref: '#/components/schemas/link'
            self:
              $ref: '#/components/schemas/link'
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          $ref: '#/components/schemas/author-association'
        auto_merge:
          $ref: '#/components/schemas/auto-merge'
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
    pull-request-review-comment:
      title: Pull Request Review Comment
      description: Pull Request Review Comments are comments on a portion of the Pull Request's diff.
      type: object
      properties:
        url:
          description: URL for the pull request review comment
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          type: string
        pull_request_review_id:
          description: The ID of the pull request review to which the comment belongs.
          type: integer
          format: int64
          example: 42
          nullable: true
        id:
          description: The ID of the pull request review comment.
          type: integer
          format: int64
          example: 1
        node_id:
          description: The node ID of the pull request review comment.
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          description: The diff of the line that the comment refers to.
          type: string
          example: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path:
          description: The relative path of the file to which the comment applies.
          example: config/database.yaml
          type: string
        position:
          description: The line index in the diff to which the comment applies. This field is closing down; use `line` instead.
          example: 1
          type: integer
        original_position:
          description: The index of the original line in the diff to which the comment applies. This field is closing down; use `original_line` instead.
          example: 4
          type: integer
        commit_id:
          description: The SHA of the commit to which the comment applies.
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          type: string
        original_commit_id:
          description: The SHA of the original commit to which the comment applies.
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
          type: string
        in_reply_to_id:
          description: The comment ID to reply to.
          example: 8
          type: integer
        user:
          $ref: '#/components/schemas/simple-user'
        body:
          description: The text of the comment.
          example: We should probably include a check for null values here.
          type: string
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          description: HTML URL for the pull request review comment.
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          description: URL for the pull request that the review comment belongs to.
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          $ref: '#/components/schemas/author-association'
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              required:
              - href
            html:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.github.com/repos/octocat/Hello-World/pulls/1
              required:
              - href
          required:
          - self
          - html
          - pull_request
        start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        original_start_line:
          type: integer
          description: The first line of the range for a multi-line comment.
          example: 2
          nullable: true
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        side:
          description: The side of the diff to which the comment applies. The side of the last line of the range for a multi-line comment
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        subject_type:
          description: The level at which the comment is targeted, can be a diff line or a file.
          type: string
          enum:
          - line
          - file
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
        body_html:
          type: string
          example: '"<p>comment body</p>"'
        body_text:
          type: string
          example: '"comment body"'
      required:
      - url
      - id
      - node_id
      - pull_request_review_id
      - diff_hunk
      - path
      - commit_id
      - original_commit_id
      - user
      - body
      - created_at
      - updated_at
      - html_url
      - pull_request_url
      - author_association
      - _links
    pull-request:
      type: object
      title: Pull Request
      description: Pull requests let you tell others about changes you've pushed to a repository on GitHub. Once a pull request is sent, interested parties can review the set of changes, discuss potential modifications, and even push follow-up commits if necessary.
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347
        diff_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number:
          description: Number uniquely identifying the pull request within its repository.
          example: 42
          type: integer
        state:
          description: State of this Pull Request. Either `open` or `closed`.
          enum:
          - open
          - closed
          example: open
          type: string
        locked:
          type: boolean
          example: true
        title:
          description: The title of the pull request.
          example: Amazing new feature
          type: string
        user:
          $ref: '#/components/schemas/simple-user'
        body:
          type: string
          example: Please pull these awesome changes
          nullable: true
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              description:
                type: string
                nullable: true
              color:
                type: string
              default:
                type: boolean
            required:
            - id
            - node_id
            - url
            - name
            - description
            - color
            - default
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        active_lock_reason:
          type: string
          example: too heated
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
        closed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merged_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        merge_commit_sha:
          type: string
          example: e5bd3914e2e596debea16f433f57875b5b90bcd6
          nullable: true
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_reviewers:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        requested_teams:
          type: array
          items:
            $ref: '#/components/schemas/team-simple'
          nullable: true
        head:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        base:
          type: object
          properties:
            label:
              type: string
            ref:
              type: string
            repo:
              $ref: '#/components/schemas/repository'
            sha:
              type: string
            user:
              $ref: '#/components/schemas/simple-user'
          required:
          - label
          - ref
          - repo
          - sha
          - user
        _links:
          type: object
          properties:
            comments:
              $ref: '#/components/schemas/link'
            commits:
              $ref: '#/components/schemas/link'
            statuses:
              $ref: '#/components/schemas/link'
            html:
              $ref: '#/components/schemas/link'
            issue:
              $ref: '#/components/schemas/link'
            review_comments:
              $ref: '#/components/schemas/link'
            review_comment:
              $ref: '#/components/schemas/link'
            self:
              $ref: '#/components/schemas/link'
          required:
          - comments
          - commits
          - statuses
          - html
          - issue
          - review_comments
          - review_comment
          - self
        author_association:
          $ref: '#/components/schemas/author-association'
        auto_merge:
          $ref: '#/components/schemas/auto-merge'
        draft:
          description: Indicates whether or not the pull request is a draft.
          example: false
          type: boolean
        merged:
          type: boolean
        mergeable:
          type: boolean
          example: true
          nullable: true
        rebaseable:
          type: boolean
          example: true
          nullable: true
        mergeable_state:
          type: string
          example: clean
        merged_by:
          $ref: '#/components/schemas/nullable-simple-user'
        comments:
          type: integer
          example: 10
        review_comments:
          type: integer
          example: 0
        maintainer_can_modify:
          description: Indicates whether maintainers can modify the pull request.
          example: true
          type: boolean
        commits:
          type: integer
          example: 3
        additions:
          type: integer
          example: 100
        deletions:
          type: integer
          example: 3
        changed_files:
          type: integer
          example: 5
      required:
      - _links
      - assignee
      - labels
      - base
      - body
      - closed_at
      - comments_url
      - commits_url
      - created_at
      - diff_url
      - head
      - html_url
      - id
      - node_id
      - issue_url
      - merge_commit_sha
      - merged_at
      - milestone
      - number
      - patch_url
      - review_comment_url
      - review_comments_url
      - statuses_url
      - state
      - locked
      - title
      - updated_at
      - url
      - user
      - author_association
      - auto_merge
      - additions
      - changed_files
      - comments
      - commits
      - deletions
      - mergeable
      - mergeable_state
      - merged
      - maintainer_can_modify
      - merged_by
      - review_comments
    pull-request-merge-result:
      title: Pull Request Merge Result
      description: Pull Request Merge Result
      type: object
      properties:
        sha:
          type: string
        merged:
          type: boolean
        message:
          type: string
      required:
      - merged
      - message
      - sha
    pull-request-review-request:
      title: Pull Request Review Request
      description: Pull Request Review Request
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/team'
      required:
      - users
      - teams
    pull-request-review:
      title: Pull Request Review
      description: Pull Request Reviews are reviews on pull requests.
      type: object
      properties:
        id:
          description: Unique identifier of the review
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          description: The text of the review.
          example: This looks great.
          type: string
        state:
          type: string
          example: CHANGES_REQUESTED
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          type: object
          properties:
            html:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
            pull_request:
              type: object
              properties:
                href:
                  type: string
              required:
              - href
          required:
          - html
          - pull_request
        submitted_at:
          type: string
          format: date-time
        commit_id:
          description: A commit SHA for the review. If the commit object was garbage collected or forcibly deleted, then it no longer exists in Git and this value will be `null`.
          example: 54bb654c9e6025347f57900a4a5c2313a96b8035
          type: string
          nullable: true
        body_html:
          type: string
        body_text:
          type: string
        author_association:
          $ref: '#/components/schemas/author-association'
      required:
      - id
      - node_id
      - user
      - body
      - state
      - commit_id
      - html_url
      - pull_request_url
      - _links
      - author_association
    review-comment:
      title: Legacy Review Comment
      description: Legacy Review Comment
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id:
          type: integer
          format: int64
          example: 42
          nullable: true
        id:
          type: integer
          format: int64
          example: 10
        node_id:
          type: string
          example: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk:
          type: string
          example: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path:
          type: string
          example: file1.txt
        position:
          type: integer
          example: 1
          nullable: true
        original_position:
          type: integer
          example: 4
        commit_id:
          type: string
          example: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id:
          type: string
          example: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id:
          type: integer
          example: 8
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        body:
          type: string
          example: Great stuff
        created_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        updated_at:
          type: string
          format: date-time
          example: '2011-04-14T16:00:49Z'
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association:
          $ref: '#/components/schemas/author-association'
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/link'
            html:
              $ref: '#/components/schemas/link'
            pull_request:
              $ref: '#/components/schemas/link'
          required:
          - self
          - html
          - pull_request
        body_text:
          type: string
        body_html:
          type: string
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
        side:
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          type: string
        start_side:
          type: string
          description: The side of the first line of the range for a multi-line comment.
          enum:
          - LEFT
          - RIGHT
          default: RIGHT
          nullable: true
        line:
          description: The line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        original_line:
          description: The original line of the blob to which the comment applies. The last line of the range for a multi-line comment
          example: 2
          type: integer
        start_line:
          description: The first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
        original_start_line:
          description: The original first line of the range for a multi-line comment.
          example: 2
          type: integer
          nullable: true
        subject_type:
          description: The level at which the comment is targeted, can be a diff line or a file.
          type: string
          enum:
          - line
          - file
      required:
      - id
      - node_id
      - url
      - body
      - diff_hunk
      - path
      - position
      - original_position
      - commit_id
      - original_commit_id
      - user
      - pull_request_review_id
      - html_url
      - pull_request_url
      - _links
      - author_association
      - created_at
      - updated_at
  examples:
    commit-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        node_id: MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==
        html_url: https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e
        comments_url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments
        commit:
          url: https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          author:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          committer:
            name: Monalisa Octocat
            email: support@github.com
            date: '2011-04-14T16:00:49Z'
          message: Fix all the bugs
          tree:
            url: https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e
            sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          comment_count: 0
          verification:
            verified: false
            reason: unsigned
            signature: null
            payload: null
            verified_at: null
        author:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        committer:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        parents:
        - url: https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
    pull-request-simple-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          permission: admin
          notification_setting: notifications_enabled
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        auto_merge: null
        draft: false
    pull-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            has_discussions: false
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_merge_commit: true
            allow_forking: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            has_discussions: false
            archived: false
            disabled: false
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_merge_commit: true
            forks: 123
            open_issues: 123
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
            watchers: 123
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        auto_merge: null
        draft: false
        merged: false
        mergeable: true
        rebaseable: true
        mergeable_state: clean
        merged_by:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        comments: 10
        review_comments: 0
        maintainer_can_modify: true
        commits: 3
        additions: 100
        deletions: 3
        changed_files: 5
    pull-request-review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-2:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment-example-for-a-multi-line-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    pull-request-review-comment:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 426899381
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
        start_line: 1
        original_start_line: 1
        start_side: RIGHT
        line: 2
        original_line: 2
        side: RIGHT
    diff-entry-items:
      value:
      - sha: bbcd538c8e72b8c175046e27cc8f907076331401
        filename: file1.txt
        status: added
        additions: 103
        deletions: 21
        changes: 124
        blob_url: https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        raw_url: https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt
        contents_url: https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e
        patch: '@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test'
    pull-request-merge-result-response-if-merge-was-successful:
      value:
        sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        merged: true
        message: Pull Request successfully merged
    simple-pull-request-review-request:
      value:
        users:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
    pull-request-review-request:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://api.github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        auto_merge: null
        draft: false
    pull-request-simple:
      value:
        url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
        id: 1
        node_id: MDExOlB1bGxSZXF1ZXN0MQ==
        html_url: https://github.com/octocat/Hello-World/pull/1347
        diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
        patch_url: https://github.com/octocat/Hello-World/pull/1347.patch
        issue_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        commits_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
        review_comments_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
        review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
        comments_url: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
        statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        number: 1347
        state: open
        locked: true
        title: Amazing new feature
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Please pull these awesome changes in!
        labels:
        - id: 208045946
          node_id: MDU6TGFiZWwyMDgwNDU5NDY=
          url: https://api.github.com/repos/octocat/Hello-World/labels/bug
          name: bug
          description: Something isn't working
          color: f29513
          default: true
        milestone:
          url: https://api.github.com/repos/octocat/Hello-World/milestones/1
          html_url: https://github.com/octocat/Hello-World/milestones/v1.0
          labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
          id: 1002604
          node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
          number: 1
          state: open
          title: v1.0
          description: Tracking milestone for version 1.0
          creator:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          open_issues: 4
          closed_issues: 8
          created_at: '2011-04-10T20:09:31Z'
          updated_at: '2014-03-03T18:58:10Z'
          closed_at: '2013-02-12T13:22:01Z'
          due_on: '2012-10-09T23:39:01Z'
        active_lock_reason: too heated
        created_at: '2011-01-26T19:01:12Z'
        updated_at: '2011-01-26T19:01:12Z'
        closed_at: '2011-01-26T19:01:12Z'
        merged_at: '2011-01-26T19:01:12Z'
        merge_commit_sha: e5bd3914e2e596debea16f433f57875b5b90bcd6
        assignee:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        assignees:
        - login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        - login: hubot
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/hubot_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/hubot
          html_url: https://github.com/hubot
          followers_url: https://api.github.com/users/hubot/followers
          following_url: https://api.github.com/users/hubot/following{/other_user}
          gists_url: https://api.github.com/users/hubot/gists{/gist_id}
          starred_url: https://api.github.com/users/hubot/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/hubot/subscriptions
          organizations_url: https://api.github.com/users/hubot/orgs
          repos_url: https://api.github.com/users/hubot/repos
          events_url: https://api.github.com/users/hubot/events{/privacy}
          received_events_url: https://api.github.com/users/hubot/received_events
          type: User
          site_admin: true
        requested_reviewers:
        - login: other_user
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/other_user_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/other_user
          html_url: https://github.com/other_user
          followers_url: https://api.github.com/users/other_user/followers
          following_url: https://api.github.com/users/other_user/following{/other_user}
          gists_url: https://api.github.com/users/other_user/gists{/gist_id}
          starred_url: https://api.github.com/users/other_user/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/other_user/subscriptions
          organizations_url: https://api.github.com/users/other_user/orgs
          repos_url: https://api.github.com/users/other_user/repos
          events_url: https://api.github.com/users/other_user/events{/privacy}
          received_events_url: https://api.github.com/users/other_user/received_events
          type: User
          site_admin: false
        requested_teams:
        - id: 1
          node_id: MDQ6VGVhbTE=
          url: https://api.github.com/teams/1
          html_url: https://github.com/orgs/github/teams/justice-league
          name: Justice League
          slug: justice-league
          description: A great team.
          privacy: closed
          notification_setting: notifications_enabled
          permission: admin
          members_url: https://api.github.com/teams/1/members{/member}
          repositories_url: https://api.github.com/teams/1/repos
          parent: null
        head:
          label: octocat:new-topic
          ref: new-topic
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        base:
          label: octocat:master
          ref: master
          sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
          user:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          repo:
            id: 1296269
            node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
            name: Hello-World
            full_name: octocat/Hello-World
            owner:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Hello-World
            description: This your first repo!
            fork: false
            url: https://api.github.com/repos/octocat/Hello-World
            archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
            assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
            blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
            branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
            collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
            comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
            commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
            compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
            contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
            contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
            deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
            downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
            events_url: https://api.github.com/repos/octocat/Hello-World/events
            forks_url: https://api.github.com/repos/octocat/Hello-World/forks
            git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
            git_url: git:github.com/octocat/Hello-World.git
            issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
            issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
            issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
            keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
            labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
            languages_url: https://api.github.com/repos/octocat/Hello-World/languages
            merges_url: https://api.github.com/repos/octocat/Hello-World/merges
            milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
            pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
            releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
            ssh_url: git@github.com:octocat/Hello-World.git
            stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
            statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
            subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
            subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
            tags_url: https://api.github.com/repos/octocat/Hello-World/tags
            teams_url: https://api.github.com/repos/octocat/Hello-World/teams
            trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
            clone_url: https://github.com/octocat/Hello-World.git
            mirror_url: git:git.example.com/octocat/Hello-World
            hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
            svn_url: https://svn.github.com/octocat/Hello-World
            homepage: https://github.com
            language: null
            forks_count: 9
            stargazers_count: 80
            watchers_count: 80
            size: 108
            default_branch: master
            open_issues_count: 0
            is_template: true
            topics:
            - octocat
            - atom
            - electron
            - api
            has_issues: true
            has_projects: true
            has_wiki: true
            has_pages: false
            has_downloads: true
            archived: false
            disabled: false
            visibility: public
            pushed_at: '2011-01-26T19:06:43Z'
            created_at: '2011-01-26T19:01:12Z'
            updated_at: '2011-01-26T19:14:43Z'
            permissions:
              admin: false
              push: false
              pull: true
            allow_rebase_merge: true
            template_repository: null
            temp_clone_token: ABTLWHOULUVAXGTRYU7OC2876QJ2O
            allow_squash_merge: true
            allow_auto_merge: false
            delete_branch_on_merge: true
            allow_merge_commit: true
            subscribers_count: 42
            network_count: 0
            license:
              key: mit
              name: MIT License
              url: https://api.github.com/licenses/mit
              spdx_id: MIT
              node_id: MDc6TGljZW5zZW1pdA==
              html_url: https://github.com/licenses/mit
            forks: 1
            open_issues: 1
            watchers: 1
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          html:
            href: https://github.com/octocat/Hello-World/pull/1347
          issue:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347
          comments:
            href: https://api.github.com/repos/octocat/Hello-World/issues/1347/comments
          review_comments:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments
          review_comment:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}
          commits:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits
          statuses:
            href: https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e
        author_association: OWNER
        auto_merge: null
        draft: false
    pull-request-review-items:
      value:
      - id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review-4:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: APPROVED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    pull-request-review-5:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: This is close to perfect! Please address the suggested inline change. And add more about this.
        state: CHANGES_REQUESTED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
    review-comment-items:
      value:
      - url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
        pull_request_review_id: 42
        id: 10
        node_id: MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw
        diff_hunk: '@@ -16,33 +16,40 @@ public class Connection : IConnection...'
        path: file1.txt
        position: 1
        original_position: 4
        commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
        original_commit_id: 9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840
        in_reply_to_id: 8
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Great stuff!
        created_at: '2011-04-14T16:00:49Z'
        updated_at: '2011-04-14T16:00:49Z'
        html_url: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/1
        author_association: NONE
        _links:
          self:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
          html:
            href: https://github.com/octocat/Hello-World/pull/1#discussion-diff-1
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/1
    pull-request-review-3:
      value:
        id: 80
        node_id: MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=
        user:
          login: octocat
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://github.com/images/error/octocat_happy.gif
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: false
        body: Here is the body for the review.
        state: DISMISSED
        html_url: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
        pull_request_url: https://api.github.com/repos/octocat/Hello-World/pulls/12
        _links:
          html:
            href: https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80
          pull_request:
            href: https://api.github.com/repos/octocat/Hello-World/pulls/12
        submitted_at: '2019-11-17T17:43:43Z'
        commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
        author_association: COLLABORATOR
  parameters:
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    since:
      name: since
      description: 'Only show results that were last updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.'
      in: query
      required: false
      schema:
        type: string
        format: date-time
    comment-id:
      name: comment_id
      description: The unique identifier of the comment.
      in: path
      required: true
      schema:
        type: integer
        format: int64
    sort:
      name: sort
      description: The property to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    pull-number:
      name: pull_number
      description: The number that identifies the pull request.
      in: path
      required: true
      schema:
        type: integer
    review-id:
      name: review_id
      description: The unique identifier of the review.
      in: path
      required: true
      schema:
        type: integer
  responses:
    validation_failed_simple:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error-simple'
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    not_modified:
      description: Not modified
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    internal_error:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
    unacceptable:
      description: Unacceptable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: pulls
  description: Interact with GitHub Pull Requests.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /repos/{owner}/{repo}/pulls:
    get:
      summary: List pull requests
      description: 'Lists pull requests in a specified repository.


        Draft pull requests are available in public repositories with GitHub

        Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing

        plans, and in public and private repositories with GitHub Team and GitHub Enterprise

        Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products)

        in the GitHub Help documentation.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-pull-requests
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: state
        description: Either `open`, `closed`, or `all` to filter by state.
        in: query
        required: false
        schema:
          type: string
          enum:
          - open
          - closed
          - all
          default: open
      - name: head
        description: 'Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`.'
        in: query
        required: false
        schema:
          type: string
      - name: base
        description: 'Filter pulls by base branch name. Example: `gh-pages`.'
        in: query
        required: false
        schema:
          type: string
      - name: sort
        description: What to sort results by. `popularity` will sort by the number of comments. `long-running` will sort by date created and will limit the results to pull requests that have been open for more than a month and have had activity within the past month.
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - popularity
          - long-running
          default: created
      - name: direction
        description: 'The direction of the sort. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`.'
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-simple'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-simple-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '304':
          $ref: '#/components/responses/not_modified'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    post:
      summary: Create a pull request
      description: 'Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/create
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#create-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the new pull request. Required unless `issue` is specified.
                head:
                  type: string
                  description: 'The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.'
                head_repo:
                  type: string
                  description: The name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization.
                  format: repo.nwo
                  example: octo-org/octo-repo
                base:
                  type: string
                  description: The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.
                body:
                  type: string
                  description: The contents of the pull request.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
                draft:
                  type: boolean
                  description: Indicates whether the pull request is a draft. See "[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)" in the GitHub Help documentation to learn more.
                issue:
                  type: integer
                  format: int64
                  example: 1
                  description: An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified.
              required:
              - head
              - base
            examples:
              default:
                value:
                  title: Amazing new feature
                  body: Please pull these awesome changes in!
                  head: octocat:new-feature
                  base: master
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request'
              examples:
                default:
                  $ref: '#/components/examples/pull-request'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/1347
              schema:
                type: string
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  /repos/{owner}/{repo}/pulls/comments:
    get:
      summary: List review comments in a repository
      description: 'Lists review comments for all pull requests in a repository. By default,

        review comments are in ascending order by ID.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-review-comments-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#list-review-comments-in-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - name: sort
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
          - created_at
      - name: direction
        description: The direction to sort results. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  /repos/{owner}/{repo}/pulls/comments/{comment_id}:
    get:
      summary: Get a review comment for a pull request
      description: 'Provides details for a specified review comment.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/get-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#get-a-review-comment-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-comment-2'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    patch:
      summary: Update a review comment for a pull request
      description: 'Edits the content of a specified review comment.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/update-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#update-a-review-comment-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the reply to the review comment.
              required:
              - body
            examples:
              default:
                value:
                  body: I like this too!
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-comment-2'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    delete:
      summary: Delete a review comment for a pull request
      description: Deletes a review comment.
      tags:
      - pulls
      operationId: pulls/delete-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#delete-a-review-comment-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/comment-id'
      responses:
        '204':
          description: Response
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  /repos/{owner}/{repo}/pulls/{pull_number}:
    get:
      summary: Get a pull request
      description: 'Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        Lists details of a pull request by providing its number.


        When you get, [create](https://docs.github.com/rest/pulls/pulls/#create-a-pull-request), or [edit](https://docs.github.com/rest/pulls/pulls#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see "[Checking mergeability of pull requests](https://docs.github.com/rest/guides/getting-started-with-the-git-database-api#checking-mergeability-of-pull-requests)".


        The value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.


        The value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:


        *   If merged as a [merge commit](https://docs.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.

        *   If merged via a [squash](https://docs.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.

        *   If [rebased](https://docs.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.


        Pass the appropriate [media type](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types) to fetch diff and patch formats.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.

        - **`application/vnd.github.diff`**: For more information, see "[git-diff](https://git-scm.com/docs/git-diff)" in the Git documentation. If a diff is corrupt, contact us through the [GitHub Support portal](https://support.github.com/). Include the repository name and pull request ID in your message.'
      tags:
      - pulls
      operationId: pulls/get
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#get-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      responses:
        '200':
          description: Pass the appropriate [media type](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types) to fetch diff and patch formats.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request'
              examples:
                default:
                  $ref: '#/components/examples/pull-request'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '406':
          $ref: '#/components/responses/unacceptable'
        '500':
          $ref: '#/components/responses/internal_error'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    patch:
      summary: Update a pull request
      description: 'Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub''s products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.


        To open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/update
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#update-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the pull request.
                body:
                  type: string
                  description: The contents of the pull request.
                state:
                  type: string
                  description: State of this Pull Request. Either `open` or `closed`.
                  enum:
                  - open
                  - closed
                base:
                  type: string
                  description: The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.
                maintainer_can_modify:
                  type: boolean
                  description: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
            examples:
              default:
                value:
                  title: new title
                  body: updated body
                  state: open
                  base: master
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request'
              examples:
                default:
                  $ref: '#/components/examples/pull-request'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  /repos/{owner}/{repo}/pulls/{pull_number}/comments:
    get:
      summary: List review comments on a pull request
      description: 'Lists all review comments for a specified pull request. By default, review comments

        are in ascending order by ID.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-review-comments
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#list-review-comments-on-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/sort'
      - name: direction
        description: The direction to sort results. Ignored without `sort` parameter.
        in: query
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - $ref: '#/components/parameters/since'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
    post:
      summary: Create a review comment for a pull request
      description: 'Creates a review comment on the diff of a specified pull request. To add a regular comment to a pull request timeline, see "[Create an issue comment](https://docs.github.com/rest/issues/comments#create-an-issue-comment)."


        If your comment applies to more than one line in the pull request diff, you should use the parameters `line`, `side`, and optionally `start_line` and `start_side` in your request.


        The `position` parameter is closing down. If you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)"

        and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/create-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#create-a-review-comment-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
                commit_id:
                  type: string
                  description: The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`.
                path:
                  type: string
                  description: The relative path to the file that necessitates a comment.
                position:
                  type: integer
                  description: '**This parameter is closing down. Use `line` instead**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.'
                  deprecated: true
                  x-github:
                    deprecationDate: '2022-11-01'
                side:
                  type: string
                  description: In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that appear in red. Use `RIGHT` for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see "[Diff view options](https://docs.github.com/articles/about-comparing-branches-in-pull-requests#diff-view-options)" in the GitHub Help documentation.
                  enum:
                  - LEFT
                  - RIGHT
                line:
                  type: integer
                  description: '**Required unless using `subject_type:file`**. The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to.'
                start_line:
                  type: integer
                  description: '**Required when using multi-line comments unless using `in_reply_to`**. The `start_line` is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see "[Commenting on a pull request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)" in the GitHub Help documentation.'
                start_side:
                  type: string
                  description: '**Required when using multi-line comments unless using `in_reply_to`**. The `start_side` is the starting side of the diff that the comment applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line comments, see "[Commenting on a pull request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)" in the GitHub Help documentation. See `side` in this table for additional context.'
                  enum:
                  - LEFT
                  - RIGHT
                  - side
                in_reply_to:
                  type: integer
                  example: 2
                  description: The ID of the review comment to reply to. To find the ID of a review comment with ["List review comments on a pull request"](#list-review-comments-on-a-pull-request). When specified, all parameters other than `body` in the request body are ignored.
                subject_type:
                  type: string
                  description: The level at which the comment is targeted.
                  enum:
                  - line
                  - file
              required:
              - body
              - commit_id
              - path
            examples:
              example-for-a-multi-line-comment:
                summary: Example for a multi-line comment
                value:
                  body: Great stuff!
                  commit_id: 6dcb09b5b57875f334f61aebed695e2e4193db5e
                  path: file1.txt
                  start_line: 1
                  start_side: RIGHT
                  line: 2
                  side: RIGHT
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                example-for-a-multi-line-comment:
                  $ref: '#/components/examples/pull-request-review-comment-example-for-a-multi-line-comment'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: comments
  /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies:
    post:
      summary: Create a reply for a review comment
      description: 'Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)"

        and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/create-reply-for-review-comment
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/comments#create-a-reply-for-a-review-comment
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/comment-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The text of the review comment.
              required:
              - body
            examples:
              default:
                value:
                  body: Great stuff!
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review-comment'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-comment'
          headers:
            Location:
              example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/1
              schema:
                type: string
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: pulls
        subcategory: comments
  /repos/{owner}/{repo}/pulls/{pull_number}/commits:
    get:
      summary: List commits on a pull request
      description: 'Lists a maximum of 250 commits for a pull request. To receive a complete

        commit list for pull requests with more than 250 commits, use the [List commits](https://docs.github.com/rest/commits/commits#list-commits)

        endpoint.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-commits-on-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/commit'
              examples:
                default:
                  $ref: '#/components/examples/commit-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  /repos/{owner}/{repo}/pulls/{pull_number}/files:
    get:
      summary: List pull requests files
      description: 'Lists the files in a specified pull request.


        > [!NOTE]

        > Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-files
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#list-pull-requests-files
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/diff-entry'
              examples:
                default:
                  $ref: '#/components/examples/diff-entry-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '422':
          $ref: '#/components/responses/validation_failed'
        '500':
          $ref: '#/components/responses/internal_error'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  /repos/{owner}/{repo}/pulls/{pull_number}/merge:
    get:
      summary: Check if a pull request has been merged
      description: Checks if a pull request has been merged into the base branch. The HTTP status of the response indicates whether or not the pull request has been merged; the response body is empty.
      tags:
      - pulls
      operationId: pulls/check-if-merged
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#check-if-a-pull-request-has-been-merged
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      responses:
        '204':
          description: Response if pull request has been merged
        '404':
          description: Not Found if pull request has not been merged
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
    put:
      summary: Merge a pull request
      description: 'Merges a pull request into the base branch.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."'
      tags:
      - pulls
      operationId: pulls/merge
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#merge-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                commit_title:
                  type: string
                  description: Title for the automatic commit message.
                commit_message:
                  type: string
                  description: Extra detail to append to automatic commit message.
                sha:
                  type: string
                  description: SHA that pull request head must match to allow merge.
                merge_method:
                  type: string
                  description: The merge method to use.
                  enum:
                  - merge
                  - squash
                  - rebase
            examples:
              response-if-merge-was-successful:
                value:
                  commit_title: Expand enum
                  commit_message: Add a new value to the merge_method enum
      responses:
        '200':
          description: if merge was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-merge-result'
              examples:
                response-if-merge-was-successful:
                  $ref: '#/components/examples/pull-request-merge-result-response-if-merge-was-successful'
        '405':
          description: Method Not Allowed if merge cannot be performed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-merge-cannot-be-performed:
                  value:
                    message: Pull Request is not mergeable
        '409':
          description: Conflict if sha was provided and pull request head did not match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  documentation_url:
                    type: string
              examples:
                response-if-sha-was-provided-and-pull-request-head-did-not-match:
                  value:
                    message: Head branch was modified. Review and try the merge again.
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: pulls
  /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers:
    get:
      summary: Get all requested reviewers for a pull request
      description: Gets the users or teams whose review is requested for a pull request. Once a requested reviewer submits a review, they are no longer considered a requested reviewer. Their review will instead be returned by the [List reviews for a pull request](https://docs.github.com/rest/pulls/reviews#list-reviews-for-a-pull-request) operation.
      tags:
      - pulls
      operationId: pulls/list-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#get-all-requested-reviewers-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review-request'
              examples:
                default:
                  $ref: '#/components/examples/simple-pull-request-review-request'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
    post:
      summary: Request reviewers for a pull request
      description: 'Requests reviews for a pull request from a given set of users and/or teams.

        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."'
      tags:
      - pulls
      operationId: pulls/request-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#request-reviewers-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be requested.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be requested.
                  items:
                    type: string
              anyOf:
              - required:
                - reviewers
              - required:
                - team_reviewers
            examples:
              default:
                value:
                  reviewers:
                  - octocat
                  - hubot
                  - other_user
                  team_reviewers:
                  - justice-league
      responses:
        '201':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-simple'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-request'
        '422':
          description: Unprocessable Entity if user is not a collaborator
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
    delete:
      summary: Remove requested reviewers from a pull request
      description: Removes review requests from a pull request for a given set of users and/or teams.
      tags:
      - pulls
      operationId: pulls/remove-requested-reviewers
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/review-requests#remove-requested-reviewers-from-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reviewers:
                  type: array
                  description: An array of user `login`s that will be removed.
                  items:
                    type: string
                team_reviewers:
                  type: array
                  description: An array of team `slug`s that will be removed.
                  items:
                    type: string
              required:
              - reviewers
            examples:
              default:
                value:
                  reviewers:
                  - octocat
                  - hubot
                  - other_user
                  team_reviewers:
                  - justice-league
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-simple'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-simple'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: review-requests
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews:
    get:
      summary: List reviews for a pull request
      description: 'Lists all reviews for a specified pull request. The list of reviews returns in chronological order.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-reviews
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#list-reviews-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: The list of reviews returns in chronological order.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    post:
      summary: Create a review for a pull request
      description: 'Creates a review on a specified pull request.


        This endpoint triggers [notifications](https://docs.github.com/github/managing-subscriptions-and-notifications-on-github/about-notifications). Creating content too quickly using this endpoint may result in secondary rate limiting. For more information, see "[Rate limits for the API](https://docs.github.com/rest/using-the-rest-api/rate-limits-for-the-rest-api#about-secondary-rate-limits)" and "[Best practices for using the REST API](https://docs.github.com/rest/guides/best-practices-for-using-the-rest-api)."


        Pull request reviews created in the `PENDING` state are not submitted and therefore do not include the `submitted_at` property in the response. To create a pending review for a pull request, leave the `event` parameter blank. For more information about submitting a `PENDING` review, see "[Submit a review for a pull request](https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request)."


        > [!NOTE]

        > To comment on a specific line in a file, you need to first determine the position of that line in the diff. To see a pull request diff, add the `application/vnd.github.v3.diff` media type to the `Accept` header of a call to the [Get a pull request](https://docs.github.com/rest/pulls/pulls#get-a-pull-request) endpoint.


        The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/create-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#create-a-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                commit_id:
                  type: string
                  description: The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.
                body:
                  type: string
                  description: '**Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.'
                event:
                  type: string
                  description: 'The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request) when you are ready.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
                comments:
                  type: array
                  description: Use the following table to specify the location, destination, and contents of the draft review comment.
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                        description: The relative path to the file that necessitates a review comment.
                      position:
                        type: integer
                        description: The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. The `position` value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.
                      body:
                        type: string
                        description: Text of the review comment.
                      line:
                        type: integer
                        example: 28
                      side:
                        type: string
                        example: RIGHT
                      start_line:
                        type: integer
                        example: 26
                      start_side:
                        type: string
                        example: LEFT
                    required:
                    - path
                    - body
            examples:
              default:
                value:
                  commit_id: ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091
                  body: This is close to perfect! Please address the suggested inline change.
                  event: REQUEST_CHANGES
                  comments:
                  - path: file.md
                    position: 6
                    body: Please add more information here, and fix this typo.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        triggersNotification: true
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}:
    get:
      summary: Get a review for a pull request
      description: 'Retrieves a pull request review by its ID.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/get-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#get-a-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-4'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    put:
      summary: Update a review for a pull request
      description: 'Updates the contents of a specified review summary comment.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/update-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#update-a-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review.
              required:
              - body
            examples:
              default:
                value:
                  body: This is close to perfect! Please address the suggested inline change. And add more about this.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-5'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
    delete:
      summary: Delete a pending review for a pull request
      description: 'Deletes a pull request review that has not been submitted. Submitted reviews cannot be deleted.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/delete-pending-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#delete-a-pending-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments:
    get:
      summary: List comments for a pull request review
      description: 'Lists comments for a specific pull request review.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/list-comments-for-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#list-comments-for-a-pull-request-review
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/review-comment'
              examples:
                default:
                  $ref: '#/components/examples/review-comment-items'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals:
    put:
      summary: Dismiss a review for a pull request
      description: 'Dismisses a specified review on a pull request.


        > [!NOTE]

        > To dismiss a pull request review on a [protected branch](https://docs.github.com/rest/branches/branch-protection), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews.


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/dismiss-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#dismiss-a-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message for the pull request review dismissal
                event:
                  type: string
                  example: '"DISMISS"'
                  enum:
                  - DISMISS
              required:
              - message
            examples:
              default:
                value:
                  message: You are dismissed
                  event: DISMISS
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-3'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events:
    post:
      summary: Submit a review for a pull request
      description: 'Submits a pending review for a pull request. For more information about creating a pending review for a pull request, see "[Create a review for a pull request](https://docs.github.com/rest/pulls/reviews#create-a-review-for-a-pull-request)."


        This endpoint supports the following custom media types. For more information, see "[Media types](https://docs.github.com/rest/using-the-rest-api/getting-started-with-the-rest-api#media-types)."


        - **`application/vnd.github-commitcomment.raw+json`**: Returns the raw markdown body. Response will include `body`. This is the default if you do not pass any specific media type.

        - **`application/vnd.github-commitcomment.text+json`**: Returns a text only representation of the markdown body. Response will include `body_text`.

        - **`application/vnd.github-commitcomment.html+json`**: Returns HTML rendered from the body''s markdown. Response will include `body_html`.

        - **`application/vnd.github-commitcomment.full+json`**: Returns raw, text, and HTML representations. Response will include `body`, `body_text`, and `body_html`.'
      tags:
      - pulls
      operationId: pulls/submit-review
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      - $ref: '#/components/parameters/review-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                  description: The body text of the pull request review
                event:
                  type: string
                  description: 'The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.'
                  enum:
                  - APPROVE
                  - REQUEST_CHANGES
                  - COMMENT
              required:
              - event
            examples:
              default:
                value:
                  body: Here is the body for the review.
                  event: REQUEST_CHANGES
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pull-request-review'
              examples:
                default:
                  $ref: '#/components/examples/pull-request-review-4'
        '404':
          $ref: '#/components/responses/not_found'
        '422':
          $ref: '#/components/responses/validation_failed_simple'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: pulls
        subcategory: reviews
  /repos/{owner}/{repo}/pulls/{pull_number}/update-branch:
    put:
      summary: Update a pull request branch
      description: 'Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch.

        Note: If making a request on behalf of a GitHub App you must also have permissions to write the contents of the head repository.'
      tags:
      - pulls
      operationId: pulls/update-branch
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/pulls/pulls#update-a-pull-request-branch
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/pull-number'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              nullable: true
              properties:
                expected_head_sha:
                  type: string
                  description: 'The expected SHA of the pull request''s HEAD ref. This is the most recent commit on the pull request''s branch. If the expected SHA does not match the pull request''s HEAD, you will receive a `422 Unprocessable Entity` status. You can use the "[List commits](https://docs.github.com/rest/commits/commits#list-commits)" endpoint to find the most recent commit SHA. Default: SHA of the pull request''s current HEAD ref.'
            examples:
              default:
                value:
                  expected_head_sha: 6dcb09b5b57875f334f61aebed695e2e4193db5e
      responses:
        '202':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  url:
                    type: string
              examples:
                default:
                  value:
                    message: Updating pull request branch.
                    url: https://github.com/repos/octocat/Hello-World/pulls/53
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: pulls
        subcategory: pulls
