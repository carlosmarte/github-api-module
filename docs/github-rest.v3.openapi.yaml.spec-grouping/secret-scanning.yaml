openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    scim-error:
      title: Scim Error
      description: Scim Error
      type: object
      properties:
        message:
          type: string
          nullable: true
        documentation_url:
          type: string
          nullable: true
        detail:
          type: string
          nullable: true
        status:
          type: integer
        scimType:
          type: string
          nullable: true
        schemas:
          type: array
          items:
            type: string
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    simple-repository:
      title: Simple Repository
      description: A GitHub repository.
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
          description: A unique identifier of the repository.
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          description: The GraphQL identifier of the repository.
        name:
          type: string
          example: Hello-World
          description: The name of the repository.
        full_name:
          type: string
          example: octocat/Hello-World
          description: The full, globally unique, name of the repository.
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
          description: Whether the repository is private.
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
          description: The URL to view the repository on GitHub.com.
        description:
          type: string
          example: This your first repo!
          nullable: true
          description: The repository description.
        fork:
          type: boolean
          description: Whether the repository is a fork.
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
          description: The URL to get more information about the repository from the GitHub API.
        archive_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          description: A template for the API URL to download the repository as an archive.
        assignees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          description: A template for the API URL to list the available assignees for issues in the repository.
        blobs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          description: A template for the API URL to create or retrieve a raw Git blob in the repository.
        branches_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          description: A template for the API URL to get information about branches in the repository.
        collaborators_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          description: A template for the API URL to get information about collaborators of the repository.
        comments_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          description: A template for the API URL to get information about comments on the repository.
        commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          description: A template for the API URL to get information about commits on the repository.
        compare_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          description: A template for the API URL to compare two commits or refs.
        contents_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          description: A template for the API URL to get the contents of the repository.
        contributors_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/contributors
          description: A template for the API URL to list the contributors to the repository.
        deployments_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/deployments
          description: The API URL to list the deployments of the repository.
        downloads_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/downloads
          description: The API URL to list the downloads on the repository.
        events_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/events
          description: The API URL to list the events of the repository.
        forks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/forks
          description: The API URL to list the forks of the repository.
        git_commits_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          description: A template for the API URL to get information about Git commits of the repository.
        git_refs_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          description: A template for the API URL to get information about Git refs of the repository.
        git_tags_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          description: A template for the API URL to get information about Git tags of the repository.
        issue_comment_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          description: A template for the API URL to get information about issue comments on the repository.
        issue_events_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          description: A template for the API URL to get information about issue events on the repository.
        issues_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          description: A template for the API URL to get information about issues on the repository.
        keys_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          description: A template for the API URL to get information about deploy keys on the repository.
        labels_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          description: A template for the API URL to get information about labels of the repository.
        languages_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/languages
          description: The API URL to get information about the languages of the repository.
        merges_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/merges
          description: The API URL to merge branches in the repository.
        milestones_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          description: A template for the API URL to get information about milestones of the repository.
        notifications_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          description: A template for the API URL to get information about notifications on the repository.
        pulls_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          description: A template for the API URL to get information about pull requests on the repository.
        releases_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          description: A template for the API URL to get information about releases on the repository.
        stargazers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/stargazers
          description: The API URL to list the stargazers on the repository.
        statuses_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          description: A template for the API URL to get information about statuses of a commit.
        subscribers_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscribers
          description: The API URL to list the subscribers on the repository.
        subscription_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/subscription
          description: The API URL to subscribe to notifications for this repository.
        tags_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/tags
          description: The API URL to get information about tags on the repository.
        teams_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/teams
          description: The API URL to list the teams on the repository.
        trees_url:
          type: string
          example: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          description: A template for the API URL to create or retrieve a raw Git tree of the repository.
        hooks_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/hooks
          description: The API URL to list the hooks on the repository.
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    alert-number:
      type: integer
      description: The security alert number.
      readOnly: true
    alert-url:
      type: string
      description: The REST API URL of the alert resource.
      format: uri
      readOnly: true
    alert-html-url:
      type: string
      description: The GitHub URL of the alert resource.
      format: uri
      readOnly: true
    alert-created-at:
      type: string
      description: 'The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
    nullable-alert-updated-at:
      type: string
      description: 'The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
      format: date-time
      readOnly: true
      nullable: true
    secret-scanning-alert-state:
      description: Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.
      type: string
      enum:
      - open
      - resolved
    secret-scanning-alert-resolution:
      type: string
      description: '**Required when the `state` is `resolved`.** The reason for resolving the alert.'
      nullable: true
      enum:
      - false_positive
      - wont_fix
      - revoked
      - used_in_tests
    secret-scanning-location-commit:
      description: Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.
      type: object
      properties:
        path:
          type: string
          description: The file path in the repository
          example: /example/secrets.txt
        start_line:
          type: number
          description: Line number at which the secret starts in the file
        end_line:
          type: number
          description: Line number at which the secret ends in the file
        start_column:
          type: number
          description: The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII
        end_column:
          type: number
          description: The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII
        blob_sha:
          type: string
          description: SHA-1 hash ID of the associated blob
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        blob_url:
          type: string
          description: The API URL to get the associated blob resource
        commit_sha:
          type: string
          description: SHA-1 hash ID of the associated commit
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        commit_url:
          type: string
          description: The API URL to get the associated commit resource
      required:
      - path
      - start_line
      - end_line
      - start_column
      - end_column
      - blob_sha
      - blob_url
      - commit_sha
      - commit_url
    secret-scanning-location-wiki-commit:
      description: Represents a 'wiki_commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository wiki.
      type: object
      properties:
        path:
          type: string
          description: The file path of the wiki page
          example: /example/Home.md
        start_line:
          type: number
          description: Line number at which the secret starts in the file
        end_line:
          type: number
          description: Line number at which the secret ends in the file
        start_column:
          type: number
          description: The column at which the secret starts within the start line when the file is interpreted as 8-bit ASCII.
        end_column:
          type: number
          description: The column at which the secret ends within the end line when the file is interpreted as 8-bit ASCII.
        blob_sha:
          type: string
          description: SHA-1 hash ID of the associated blob
          example: af5626b4a114abcb82d63db7c8082c3c4756e51b
        page_url:
          type: string
          description: The GitHub URL to get the associated wiki page
          example: https://github.com/octocat/Hello-World/wiki/Home/302c0b7e200761c9dd9b57e57db540ee0b4293a5
        commit_sha:
          type: string
          description: SHA-1 hash ID of the associated commit
          example: 302c0b7e200761c9dd9b57e57db540ee0b4293a5
        commit_url:
          type: string
          description: The GitHub URL to get the associated wiki commit
          example: https://github.com/octocat/Hello-World/wiki/_compare/302c0b7e200761c9dd9b57e57db540ee0b4293a5
      required:
      - path
      - start_line
      - end_line
      - start_column
      - end_column
      - blob_sha
      - page_url
      - commit_sha
      - commit_url
    secret-scanning-location-issue-title:
      description: Represents an 'issue_title' secret scanning location type. This location type shows that a secret was detected in the title of an issue.
      type: object
      properties:
        issue_title_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_title_url
    secret-scanning-location-issue-body:
      description: Represents an 'issue_body' secret scanning location type. This location type shows that a secret was detected in the body of an issue.
      type: object
      properties:
        issue_body_url:
          type: string
          format: uri
          description: The API URL to get the issue where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/1347
      required:
      - issue_body_url
    secret-scanning-location-issue-comment:
      description: Represents an 'issue_comment' secret scanning location type. This location type shows that a secret was detected in a comment on an issue.
      type: object
      properties:
        issue_comment_url:
          type: string
          format: uri
          description: The API URL to get the issue comment where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
      required:
      - issue_comment_url
    secret-scanning-location-discussion-title:
      description: Represents a 'discussion_title' secret scanning location type. This location type shows that a secret was detected in the title of a discussion.
      type: object
      properties:
        discussion_title_url:
          type: string
          format: uri
          description: The URL to the discussion where the secret was detected.
          example: https://github.com/community/community/discussions/39082
      required:
      - discussion_title_url
    secret-scanning-location-discussion-body:
      description: Represents a 'discussion_body' secret scanning location type. This location type shows that a secret was detected in the body of a discussion.
      type: object
      properties:
        discussion_body_url:
          type: string
          format: uri
          description: The URL to the discussion where the secret was detected.
          example: https://github.com/community/community/discussions/39082#discussion-4566270
      required:
      - discussion_body_url
    secret-scanning-location-discussion-comment:
      description: Represents a 'discussion_comment' secret scanning location type. This location type shows that a secret was detected in a comment on a discussion.
      type: object
      properties:
        discussion_comment_url:
          type: string
          format: uri
          description: The API URL to get the discussion comment where the secret was detected.
          example: https://github.com/community/community/discussions/39082#discussioncomment-4158232
      required:
      - discussion_comment_url
    secret-scanning-location-pull-request-title:
      description: Represents a 'pull_request_title' secret scanning location type. This location type shows that a secret was detected in the title of a pull request.
      type: object
      properties:
        pull_request_title_url:
          type: string
          format: uri
          description: The API URL to get the pull request where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/pulls/2846
      required:
      - pull_request_title_url
    secret-scanning-location-pull-request-body:
      description: Represents a 'pull_request_body' secret scanning location type. This location type shows that a secret was detected in the body of a pull request.
      type: object
      properties:
        pull_request_body_url:
          type: string
          format: uri
          description: The API URL to get the pull request where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/pulls/2846
      required:
      - pull_request_body_url
    secret-scanning-location-pull-request-comment:
      description: Represents a 'pull_request_comment' secret scanning location type. This location type shows that a secret was detected in a comment on a pull request.
      type: object
      properties:
        pull_request_comment_url:
          type: string
          format: uri
          description: The API URL to get the pull request comment where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
      required:
      - pull_request_comment_url
    secret-scanning-location-pull-request-review:
      description: Represents a 'pull_request_review' secret scanning location type. This location type shows that a secret was detected in a review on a pull request.
      type: object
      properties:
        pull_request_review_url:
          type: string
          format: uri
          description: The API URL to get the pull request review where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/pulls/2846/reviews/80
      required:
      - pull_request_review_url
    secret-scanning-location-pull-request-review-comment:
      description: Represents a 'pull_request_review_comment' secret scanning location type. This location type shows that a secret was detected in a review comment on a pull request.
      type: object
      properties:
        pull_request_review_comment_url:
          type: string
          format: uri
          description: The API URL to get the pull request review comment where the secret was detected.
          example: https://api.github.com/repos/octocat/Hello-World/pulls/comments/12
      required:
      - pull_request_review_comment_url
    nullable-secret-scanning-first-detected-location:
      description: 'Details on the location where the token was initially detected. This can be a commit, wiki commit, issue, discussion, pull request.

        '
      oneOf:
      - $ref: '#/components/schemas/secret-scanning-location-commit'
      - $ref: '#/components/schemas/secret-scanning-location-wiki-commit'
      - $ref: '#/components/schemas/secret-scanning-location-issue-title'
      - $ref: '#/components/schemas/secret-scanning-location-issue-body'
      - $ref: '#/components/schemas/secret-scanning-location-issue-comment'
      - $ref: '#/components/schemas/secret-scanning-location-discussion-title'
      - $ref: '#/components/schemas/secret-scanning-location-discussion-body'
      - $ref: '#/components/schemas/secret-scanning-location-discussion-comment'
      - $ref: '#/components/schemas/secret-scanning-location-pull-request-title'
      - $ref: '#/components/schemas/secret-scanning-location-pull-request-body'
      - $ref: '#/components/schemas/secret-scanning-location-pull-request-comment'
      - $ref: '#/components/schemas/secret-scanning-location-pull-request-review'
      - $ref: '#/components/schemas/secret-scanning-location-pull-request-review-comment'
      nullable: true
    organization-secret-scanning-alert:
      type: object
      properties:
        number:
          $ref: '#/components/schemas/alert-number'
        created_at:
          $ref: '#/components/schemas/alert-created-at'
        updated_at:
          $ref: '#/components/schemas/nullable-alert-updated-at'
        url:
          $ref: '#/components/schemas/alert-url'
        html_url:
          $ref: '#/components/schemas/alert-html-url'
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          $ref: '#/components/schemas/secret-scanning-alert-state'
        resolution:
          $ref: '#/components/schemas/secret-scanning-alert-resolution'
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          $ref: '#/components/schemas/nullable-simple-user'
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: 'User-friendly name for the detected secret, matching the `secret_type`.

            For a list of built-in patterns, see "[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets)."'
        secret:
          type: string
          description: The secret that was detected.
        repository:
          $ref: '#/components/schemas/simple-repository'
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          $ref: '#/components/schemas/nullable-simple-user'
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        push_protection_bypass_request_reviewer:
          $ref: '#/components/schemas/nullable-simple-user'
        push_protection_bypass_request_reviewer_comment:
          type: string
          description: An optional comment when reviewing a push protection bypass.
          nullable: true
        push_protection_bypass_request_comment:
          type: string
          description: An optional comment when requesting a push protection bypass.
          nullable: true
        push_protection_bypass_request_html_url:
          type: string
          format: uri
          description: The URL to a push protection bypass request.
          nullable: true
        resolution_comment:
          type: string
          description: The comment that was optionally added when this alert was closed
          nullable: true
        validity:
          type: string
          description: The token status as of the latest validity check.
          enum:
          - active
          - inactive
          - unknown
        publicly_leaked:
          type: boolean
          description: Whether the secret was publicly leaked.
          nullable: true
        multi_repo:
          type: boolean
          description: Whether the detected secret was found in multiple repositories in the same organization or enterprise.
          nullable: true
        is_base64_encoded:
          type: boolean
          description: A boolean value representing whether or not alert is base64 encoded
          nullable: true
        first_location_detected:
          $ref: '#/components/schemas/nullable-secret-scanning-first-detected-location'
        has_more_locations:
          type: boolean
          description: A boolean value representing whether or not the token in the alert was detected in more than one location.
    secret-scanning-row-version:
      type: string
      description: The version of the entity. This is used to confirm you're updating the current version of the entity and mitigate unintentionally overriding someone else's update.
      nullable: true
    secret-scanning-pattern-override:
      type: object
      properties:
        token_type:
          type: string
          description: The ID of the pattern.
        custom_pattern_version:
          type: string
          description: The version of this pattern if it's a custom pattern.
          nullable: true
        slug:
          type: string
          description: The slug of the pattern.
        display_name:
          type: string
          description: The user-friendly name for the pattern.
        alert_total:
          type: integer
          description: The total number of alerts generated by this pattern.
        alert_total_percentage:
          type: integer
          description: The percentage of all alerts that this pattern represents, rounded to the nearest integer.
        false_positives:
          type: integer
          description: The number of false positive alerts generated by this pattern.
        false_positive_rate:
          type: integer
          description: The percentage of alerts from this pattern that are false positives, rounded to the nearest integer.
        bypass_rate:
          type: integer
          description: The percentage of blocks for this pattern that were bypassed, rounded to the nearest integer.
        default_setting:
          type: string
          description: The default push protection setting for this pattern.
          enum:
          - disabled
          - enabled
        enterprise_setting:
          type: string
          description: The push protection setting for this pattern set at the enterprise level. Only present for partner patterns when the organization has a parent enterprise.
          enum:
          - not-set
          - disabled
          - enabled
          nullable: true
        setting:
          type: string
          description: The current push protection setting for this pattern. If this is `not-set`, then it inherits either the enterprise setting if it exists or the default setting.
          enum:
          - not-set
          - disabled
          - enabled
    secret-scanning-pattern-configuration:
      title: Secret scanning pattern configuration
      description: A collection of secret scanning patterns and their settings related to push protection.
      type: object
      properties:
        pattern_config_version:
          $ref: '#/components/schemas/secret-scanning-row-version'
        provider_pattern_overrides:
          type: array
          description: Overrides for partner patterns.
          items:
            $ref: '#/components/schemas/secret-scanning-pattern-override'
        custom_pattern_overrides:
          type: array
          description: Overrides for custom patterns defined by the organization.
          items:
            $ref: '#/components/schemas/secret-scanning-pattern-override'
    secret-scanning-push-protection-bypass-placeholder-id:
      description: The ID of the push protection bypass placeholder. This value is returned on any push protected routes.
      type: string
    secret-scanning-alert:
      type: object
      properties:
        number:
          $ref: '#/components/schemas/alert-number'
        created_at:
          $ref: '#/components/schemas/alert-created-at'
        updated_at:
          $ref: '#/components/schemas/nullable-alert-updated-at'
        url:
          $ref: '#/components/schemas/alert-url'
        html_url:
          $ref: '#/components/schemas/alert-html-url'
        locations_url:
          type: string
          format: uri
          description: The REST API URL of the code locations for this alert.
        state:
          $ref: '#/components/schemas/secret-scanning-alert-state'
        resolution:
          $ref: '#/components/schemas/secret-scanning-alert-resolution'
        resolved_at:
          type: string
          format: date-time
          description: 'The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        resolved_by:
          $ref: '#/components/schemas/nullable-simple-user'
        resolution_comment:
          type: string
          description: An optional comment to resolve an alert.
          nullable: true
        secret_type:
          type: string
          description: The type of secret that secret scanning detected.
        secret_type_display_name:
          type: string
          description: 'User-friendly name for the detected secret, matching the `secret_type`.

            For a list of built-in patterns, see "[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets)."'
        secret:
          type: string
          description: The secret that was detected.
        push_protection_bypassed:
          type: boolean
          description: Whether push protection was bypassed for the detected secret.
          nullable: true
        push_protection_bypassed_by:
          $ref: '#/components/schemas/nullable-simple-user'
        push_protection_bypassed_at:
          type: string
          format: date-time
          description: 'The time that push protection was bypassed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        push_protection_bypass_request_reviewer:
          $ref: '#/components/schemas/nullable-simple-user'
        push_protection_bypass_request_reviewer_comment:
          type: string
          description: An optional comment when reviewing a push protection bypass.
          nullable: true
        push_protection_bypass_request_comment:
          type: string
          description: An optional comment when requesting a push protection bypass.
          nullable: true
        push_protection_bypass_request_html_url:
          type: string
          format: uri
          description: The URL to a push protection bypass request.
          nullable: true
        validity:
          type: string
          description: The token status as of the latest validity check.
          enum:
          - active
          - inactive
          - unknown
        publicly_leaked:
          type: boolean
          description: Whether the detected secret was publicly leaked.
          nullable: true
        multi_repo:
          type: boolean
          description: Whether the detected secret was found in multiple repositories under the same organization or enterprise.
          nullable: true
        is_base64_encoded:
          type: boolean
          description: A boolean value representing whether or not alert is base64 encoded
          nullable: true
        first_location_detected:
          $ref: '#/components/schemas/nullable-secret-scanning-first-detected-location'
        has_more_locations:
          type: boolean
          description: A boolean value representing whether or not the token in the alert was detected in more than one location.
    secret-scanning-alert-resolution-comment:
      description: An optional comment when closing or reopening an alert. Cannot be updated or deleted.
      type: string
      nullable: true
    secret-scanning-location:
      type: object
      properties:
        type:
          type: string
          enum:
          - commit
          - wiki_commit
          - issue_title
          - issue_body
          - issue_comment
          - discussion_title
          - discussion_body
          - discussion_comment
          - pull_request_title
          - pull_request_body
          - pull_request_comment
          - pull_request_review
          - pull_request_review_comment
          description: The location type. Because secrets may be found in different types of resources (ie. code, comments, issues, pull requests, discussions), this field identifies the type of resource where the secret was found.
          example: commit
        details:
          oneOf:
          - $ref: '#/components/schemas/secret-scanning-location-commit'
          - $ref: '#/components/schemas/secret-scanning-location-wiki-commit'
          - $ref: '#/components/schemas/secret-scanning-location-issue-title'
          - $ref: '#/components/schemas/secret-scanning-location-issue-body'
          - $ref: '#/components/schemas/secret-scanning-location-issue-comment'
          - $ref: '#/components/schemas/secret-scanning-location-discussion-title'
          - $ref: '#/components/schemas/secret-scanning-location-discussion-body'
          - $ref: '#/components/schemas/secret-scanning-location-discussion-comment'
          - $ref: '#/components/schemas/secret-scanning-location-pull-request-title'
          - $ref: '#/components/schemas/secret-scanning-location-pull-request-body'
          - $ref: '#/components/schemas/secret-scanning-location-pull-request-comment'
          - $ref: '#/components/schemas/secret-scanning-location-pull-request-review'
          - $ref: '#/components/schemas/secret-scanning-location-pull-request-review-comment'
    secret-scanning-push-protection-bypass-reason:
      description: The reason for bypassing push protection.
      type: string
      enum:
      - false_positive
      - used_in_tests
      - will_fix_later
    secret-scanning-push-protection-bypass:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/secret-scanning-push-protection-bypass-reason'
        expire_at:
          type: string
          format: date-time
          description: 'The time that the bypass will expire in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.'
          nullable: true
        token_type:
          type: string
          description: The token type this bypass is for.
    secret-scanning-scan:
      description: Information on a single scan performed by secret scanning on the repository
      type: object
      properties:
        type:
          type: string
          description: The type of scan
        status:
          type: string
          description: The state of the scan. Either "completed", "running", or "pending"
        completed_at:
          type: string
          format: date-time
          description: The time that the scan was completed. Empty if the scan is running
          nullable: true
        started_at:
          type: string
          format: date-time
          description: The time that the scan was started. Empty if the scan is pending
          nullable: true
    secret-scanning-scan-history:
      type: object
      properties:
        incremental_scans:
          type: array
          items:
            $ref: '#/components/schemas/secret-scanning-scan'
        pattern_update_scans:
          type: array
          items:
            $ref: '#/components/schemas/secret-scanning-scan'
        backfill_scans:
          type: array
          items:
            $ref: '#/components/schemas/secret-scanning-scan'
        custom_pattern_backfill_scans:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/secret-scanning-scan'
            - type: object
              properties:
                pattern_name:
                  type: string
                  description: Name of the custom pattern for custom pattern scans
                pattern_scope:
                  type: string
                  description: Level at which the custom pattern is defined, one of "repository", "organization", or "enterprise"
  examples:
    organization-secret-scanning-alert-list:
      value:
      - number: 2
        created_at: '2020-11-06T18:48:51Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2
        html_url: https://github.com/owner/private-repo/security/secret-scanning/2
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations
        state: resolved
        resolution: false_positive
        resolved_at: '2020-11-07T02:47:13Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: adafruit_io_key
        secret_type_display_name: Adafruit IO Key
        secret: aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        push_protection_bypassed_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        push_protection_bypassed: true
        push_protection_bypassed_at: '2020-11-06T21:48:51Z'
        push_protection_bypass_request_reviewer:
          login: octocat
          id: 3
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/3?
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        push_protection_bypass_request_reviewer_comment: Example response
        push_protection_bypass_request_comment: Example comment
        push_protection_bypass_request_html_url: https://github.com/owner/repo/secret_scanning_exemptions/1
        resolution_comment: Example comment
        validity: active
        publicly_leaked: false
        multi_repo: false
        is_base64_encoded: false
        first_location_detected:
          path: /example/secrets.txt
          start_line: 1
          end_line: 1
          start_column: 1
          end_column: 64
          blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
          blob_url: https://api.github.com/repos/octocat/hello-world/git/blobs/af5626b4a114abcb82d63db7c8082c3c4756e51b
          commit_sha: f14d7debf9775f957cf4f1e8176da0786431f72b
          commit_url: https://api.github.com/repos/octocat/hello-world/git/commits/f14d7debf9775f957cf4f1e8176da0786431f72b
        has_more_locations: true
      - number: 1
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/repo/secret-scanning/alerts/1
        html_url: https://github.com/owner/repo/security/secret-scanning/1
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations
        state: open
        resolution: null
        resolved_at: null
        resolved_by: null
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        repository:
          id: 1296269
          node_id: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
          name: Hello-World
          full_name: octocat/Hello-World
          owner:
            login: octocat
            id: 1
            node_id: MDQ6VXNlcjE=
            avatar_url: https://github.com/images/error/octocat_happy.gif
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          private: false
          html_url: https://github.com/octocat/Hello-World
          description: This your first repo!
          fork: false
          url: https://api.github.com/repos/octocat/Hello-World
          archive_url: https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/octocat/Hello-World/assignees{/user}
          blobs_url: https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
          branches_url: https://api.github.com/repos/octocat/Hello-World/branches{/branch}
          collaborators_url: https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/octocat/Hello-World/comments{/number}
          commits_url: https://api.github.com/repos/octocat/Hello-World/commits{/sha}
          compare_url: https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
          contents_url: https://api.github.com/repos/octocat/Hello-World/contents/{+path}
          contributors_url: https://api.github.com/repos/octocat/Hello-World/contributors
          deployments_url: https://api.github.com/repos/octocat/Hello-World/deployments
          downloads_url: https://api.github.com/repos/octocat/Hello-World/downloads
          events_url: https://api.github.com/repos/octocat/Hello-World/events
          forks_url: https://api.github.com/repos/octocat/Hello-World/forks
          git_commits_url: https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/octocat/Hello-World/issues/events{/number}
          issues_url: https://api.github.com/repos/octocat/Hello-World/issues{/number}
          keys_url: https://api.github.com/repos/octocat/Hello-World/keys{/key_id}
          labels_url: https://api.github.com/repos/octocat/Hello-World/labels{/name}
          languages_url: https://api.github.com/repos/octocat/Hello-World/languages
          merges_url: https://api.github.com/repos/octocat/Hello-World/merges
          milestones_url: https://api.github.com/repos/octocat/Hello-World/milestones{/number}
          notifications_url: https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/octocat/Hello-World/pulls{/number}
          releases_url: https://api.github.com/repos/octocat/Hello-World/releases{/id}
          stargazers_url: https://api.github.com/repos/octocat/Hello-World/stargazers
          statuses_url: https://api.github.com/repos/octocat/Hello-World/statuses/{sha}
          subscribers_url: https://api.github.com/repos/octocat/Hello-World/subscribers
          subscription_url: https://api.github.com/repos/octocat/Hello-World/subscription
          tags_url: https://api.github.com/repos/octocat/Hello-World/tags
          teams_url: https://api.github.com/repos/octocat/Hello-World/teams
          trees_url: https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
          hooks_url: https://api.github.com/repos/octocat/Hello-World/hooks
        push_protection_bypassed_by: null
        push_protection_bypassed: false
        push_protection_bypassed_at: null
        push_protection_bypass_request_reviewer: null
        push_protection_bypass_request_reviewer_comment: null
        push_protection_bypass_request_comment: null
        push_protection_bypass_request_html_url: null
        resolution_comment: null
        validity: unknown
        publicly_leaked: false
        multi_repo: false
        is_base64_encoded: false
        first_location_detected:
          issue_title_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        has_more_locations: false
    secret-scanning-pattern-configuration:
      value:
        pattern_config_version: 0ujsswThIGTUYm2K8FjOOfXtY1K
        provider_pattern_overrides:
        - token_type: GITHUB_PERSONAL_ACCESS_TOKEN
          slug: github_personal_access_token_legacy_v2
          display_name: GitHub Personal Access Token (Legacy v2)
          alert_total: 15
          alert_total_percentage: 36
          false_positives: 2
          false_positive_rate: 13
          bypass_rate: 13
          default_setting: enabled
          setting: enabled
          enterprise_setting: enabled
        custom_pattern_overrides:
        - token_type: cp_2
          custom_pattern_version: 0ujsswThIGTUYm2K8FjOOfXtY1K
          slug: custom-api-key
          display_name: Custom API Key
          alert_total: 15
          alert_total_percentage: 36
          false_positives: 3
          false_positive_rate: 20
          bypass_rate: 20
          default_setting: disabled
          setting: enabled
    secret-scanning-alert-list:
      value:
      - number: 2
        created_at: '2020-11-06T18:48:51Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2
        html_url: https://github.com/owner/private-repo/security/secret-scanning/2
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/2/locations
        state: resolved
        resolution: false_positive
        resolved_at: '2020-11-07T02:47:13Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: adafruit_io_key
        secret_type_display_name: Adafruit IO Key
        secret: aio_XXXXXXXXXXXXXXXXXXXXXXXXXXXX
        push_protection_bypassed_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        push_protection_bypassed: true
        push_protection_bypassed_at: '2020-11-06T21:48:51Z'
        push_protection_bypass_request_reviewer:
          login: octocat
          id: 3
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/3?
          gravatar_id: ''
          url: https://api.github.com/users/octocat
          html_url: https://github.com/octocat
          followers_url: https://api.github.com/users/octocat/followers
          following_url: https://api.github.com/users/octocat/following{/other_user}
          gists_url: https://api.github.com/users/octocat/gists{/gist_id}
          starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/octocat/subscriptions
          organizations_url: https://api.github.com/users/octocat/orgs
          repos_url: https://api.github.com/users/octocat/repos
          events_url: https://api.github.com/users/octocat/events{/privacy}
          received_events_url: https://api.github.com/users/octocat/received_events
          type: User
          site_admin: true
        push_protection_bypass_request_reviewer_comment: Example response
        push_protection_bypass_request_comment: Example comment
        push_protection_bypass_request_html_url: https://github.com/owner/repo/secret_scanning_exemptions/1
        resolution_comment: Example comment
        validity: inactive
        publicly_leaked: false
        multi_repo: false
        is_base64_encoded: false
        first_location_detected:
          path: /example/secrets.txt
          start_line: 1
          end_line: 1
          start_column: 1
          end_column: 64
          blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
          blob_url: https://api.github.com/repos/octocat/hello-world/git/blobs/af5626b4a114abcb82d63db7c8082c3c4756e51b
          commit_sha: f14d7debf9775f957cf4f1e8176da0786431f72b
          commit_url: https://api.github.com/repos/octocat/hello-world/git/commits/f14d7debf9775f957cf4f1e8176da0786431f72b
        has_more_locations: true
      - number: 1
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/repo/secret-scanning/alerts/1
        html_url: https://github.com/owner/repo/security/secret-scanning/1
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/1/locations
        state: open
        resolution: null
        resolved_at: null
        resolved_by: null
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed_by: null
        push_protection_bypassed: false
        push_protection_bypassed_at: null
        push_protection_bypass_request_reviewer: null
        push_protection_bypass_request_reviewer_comment: null
        push_protection_bypass_request_comment: null
        push_protection_bypass_request_html_url: null
        resolution_comment: null
        validity: unknown
        publicly_leaked: false
        multi_repo: false
        is_base64_encoded: false
        first_location_detected:
          issue_title_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
        has_more_locations: false
    secret-scanning-alert-open:
      value:
        number: 42
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42
        html_url: https://github.com/owner/private-repo/security/secret-scanning/42
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations
        state: open
        resolution: null
        resolved_at: null
        resolved_by: null
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed_by: null
        push_protection_bypassed: false
        push_protection_bypassed_at: null
        push_protection_bypass_request_reviewer: null
        push_protection_bypass_request_reviewer_comment: null
        push_protection_bypass_request_comment: null
        push_protection_bypass_request_html_url: null
        resolution_comment: null
        validity: unknown
        publicly_leaked: false
        multi_repo: false
    secret-scanning-alert-resolved:
      value:
        number: 42
        created_at: '2020-11-06T18:18:30Z'
        url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42
        html_url: https://github.com/owner/private-repo/security/secret-scanning/42
        locations_url: https://api.github.com/repos/owner/private-repo/secret-scanning/alerts/42/locations
        state: resolved
        resolution: used_in_tests
        resolved_at: '2020-11-16T22:42:07Z'
        resolved_by:
          login: monalisa
          id: 2
          node_id: MDQ6VXNlcjI=
          avatar_url: https://alambic.github.com/avatars/u/2?
          gravatar_id: ''
          url: https://api.github.com/users/monalisa
          html_url: https://github.com/monalisa
          followers_url: https://api.github.com/users/monalisa/followers
          following_url: https://api.github.com/users/monalisa/following{/other_user}
          gists_url: https://api.github.com/users/monalisa/gists{/gist_id}
          starred_url: https://api.github.com/users/monalisa/starred{/owner}{/repo}
          subscriptions_url: https://api.github.com/users/monalisa/subscriptions
          organizations_url: https://api.github.com/users/monalisa/orgs
          repos_url: https://api.github.com/users/monalisa/repos
          events_url: https://api.github.com/users/monalisa/events{/privacy}
          received_events_url: https://api.github.com/users/monalisa/received_events
          type: User
          site_admin: true
        secret_type: mailchimp_api_key
        secret_type_display_name: Mailchimp API Key
        secret: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-us2
        push_protection_bypassed: false
        push_protection_bypassed_by: null
        push_protection_bypassed_at: null
        push_protection_bypass_request_reviewer: null
        push_protection_bypass_request_reviewer_comment: null
        push_protection_bypass_request_comment: null
        push_protection_bypass_request_html_url: null
        resolution_comment: Example comment
        validity: unknown
        publicly_leaked: false
        multi_repo: false
    secret-scanning-location-list:
      value:
      - type: commit
        details:
          path: /example/secrets.txt
          start_line: 1
          end_line: 1
          start_column: 1
          end_column: 64
          blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
          blob_url: https://api.github.com/repos/octocat/hello-world/git/blobs/af5626b4a114abcb82d63db7c8082c3c4756e51b
          commit_sha: f14d7debf9775f957cf4f1e8176da0786431f72b
          commit_url: https://api.github.com/repos/octocat/hello-world/git/commits/f14d7debf9775f957cf4f1e8176da0786431f72b
      - type: wiki_commit
        details:
          path: /example/Home.md
          start_line: 1
          end_line: 1
          start_column: 1
          end_column: 64
          blob_sha: af5626b4a114abcb82d63db7c8082c3c4756e51b
          page_url: https://github.com/octocat/Hello-World/wiki/Home/302c0b7e200761c9dd9b57e57db540ee0b4293a5
          commit_sha: 302c0b7e200761c9dd9b57e57db540ee0b4293a5
          commit_url: https://github.com/octocat/Hello-World/wiki/_compare/302c0b7e200761c9dd9b57e57db540ee0b4293a5
      - type: issue_title
        details:
          issue_title_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
      - type: issue_body
        details:
          issue_body_url: https://api.github.com/repos/octocat/Hello-World/issues/1347
      - type: issue_comment
        details:
          issue_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1081119451
      - type: discussion_title
        details:
          discussion_title_url: https://github.com/community/community/discussions/39082
      - type: discussion_body
        details:
          discussion_body_url: https://github.com/community/community/discussions/39082#discussion-4566270
      - type: discussion_comment
        details:
          discussion_comment_url: https://github.com/community/community/discussions/39082#discussioncomment-4158232
      - type: pull_request_title
        details:
          pull_request_title_url: https://api.github.com/repos/octocat/Hello-World/pulls/2846
      - type: pull_request_body
        details:
          pull_request_body_url: https://api.github.com/repos/octocat/Hello-World/pulls/2846
      - type: pull_request_comment
        details:
          pull_request_comment_url: https://api.github.com/repos/octocat/Hello-World/issues/comments/1825855898
      - type: pull_request_review
        details:
          pull_request_review_url: https://api.github.com/repos/octocat/Hello-World/pulls/2846/reviews/80
      - type: pull_request_review_comment
        details:
          pull_request_review_comment_url: https://api.github.com/repos/octocat/Hello-World/pulls/comments/12
    secret-scanning-push-protection-bypass:
      value:
        reason: will_fix_later
        expire_at: '2020-11-06T18:18:30Z'
        token_type: mailchimp_api_key
    secret-scanning-scan-history:
      value:
        incremental_scans:
        - type: git
          status: completed
          completed_at: '2024-10-07T02:47:00Z'
        backfill_scans:
        - type: git
          status: completed
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:50:00Z'
        - type: issue
          status: completed
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:49:00Z'
        - type: discussion
          status: completed
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:48:00Z'
        pattern_update_scans:
        - type: discussion
          status: in_progress
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:51:00Z'
        custom_pattern_backfill_scans:
        - type: git
          status: completed
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:55:00Z'
          pattern_slug: my-custom-pattern
          pattern_scope: enterprise
        - type: git
          status: completed
          started_at: '2024-10-07T02:47:00Z'
          completed_at: '2024-10-07T02:55:00Z'
          pattern_slug: my-custom-pattern
          pattern_scope: organization
  parameters:
    pagination-before:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results before this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    pagination-after:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for results after this cursor. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      required: false
      schema:
        type: string
    direction:
      name: direction
      description: The direction to sort the results by.
      in: query
      required: false
      schema:
        type: string
        enum:
        - asc
        - desc
        default: desc
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    enterprise:
      name: enterprise
      description: The slug version of the enterprise name.
      in: path
      required: true
      schema:
        type: string
    secret-scanning-alert-state:
      name: state
      in: query
      description: Set to `open` or `resolved` to only list secret scanning alerts in a specific state.
      required: false
      schema:
        type: string
        enum:
        - open
        - resolved
    secret-scanning-alert-secret-type:
      name: secret_type
      in: query
      description: A comma-separated list of secret types to return. All default secret patterns are returned. To return generic patterns, pass the token name(s) in the parameter. See "[Supported secret scanning patterns](https://docs.github.com/code-security/secret-scanning/introduction/supported-secret-scanning-patterns#supported-secrets)" for a complete list of secret types.
      required: false
      schema:
        type: string
    secret-scanning-alert-resolution:
      name: resolution
      in: query
      description: A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are `false_positive`, `wont_fix`, `revoked`, `pattern_edited`, `pattern_deleted` or `used_in_tests`.
      required: false
      schema:
        type: string
    secret-scanning-alert-sort:
      name: sort
      description: The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was updated or resolved.
      in: query
      required: false
      schema:
        type: string
        enum:
        - created
        - updated
        default: created
    secret-scanning-alert-validity:
      name: validity
      in: query
      description: A comma-separated list of validities that, when present, will return alerts that match the validities in this list. Valid options are `active`, `inactive`, and `unknown`.
      required: false
      schema:
        type: string
    secret-scanning-alert-publicly-leaked:
      name: is_publicly_leaked
      in: query
      description: A boolean value representing whether or not to filter alerts by the publicly-leaked tag being present.
      required: false
      schema:
        type: boolean
        default: false
    secret-scanning-alert-multi-repo:
      name: is_multi_repo
      in: query
      description: A boolean value representing whether or not to filter alerts by the multi-repo tag being present.
      required: false
      schema:
        type: boolean
        default: false
    secret-scanning-alert-hide-secret:
      name: hide_secret
      in: query
      description: A boolean value representing whether or not to hide literal secrets in the results.
      required: false
      schema:
        type: boolean
        default: false
    owner:
      name: owner
      description: The account owner of the repository. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    repo:
      name: repo
      description: The name of the repository without the `.git` extension. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    org:
      name: org
      description: The organization name. The name is not case sensitive.
      in: path
      required: true
      schema:
        type: string
    secret-scanning-pagination-before-org-repo:
      name: before
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events before this cursor. To receive an initial cursor on your first request, include an empty "before" query string.
      in: query
      required: false
      schema:
        type: string
    secret-scanning-pagination-after-org-repo:
      name: after
      description: A cursor, as given in the [Link header](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api#using-link-headers). If specified, the query only searches for events after this cursor.  To receive an initial cursor on your first request, include an empty "after" query string.
      in: query
      required: false
      schema:
        type: string
    alert-number:
      name: alert_number
      in: path
      description: The number that identifies an alert. You can find this at the end of the URL for a code scanning alert within GitHub, and in the `number` field in the response from the `GET /repos/{owner}/{repo}/code-scanning/alerts` operation.
      required: true
      schema:
        $ref: '#/components/schemas/alert-number'
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    bad_request:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
        application/scim+json:
          schema:
            $ref: '#/components/schemas/scim-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    not_modified:
      description: Not modified
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
  headers:
    link:
      example: <https://api.github.com/resource?page=2>; rel="next", <https://api.github.com/resource?page=5>; rel="last"
      schema:
        type: string
security: []
tags:
- name: secret-scanning
  description: Retrieve secret scanning alerts from a repository.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /enterprises/{enterprise}/secret-scanning/alerts:
    get:
      summary: List secret scanning alerts for an enterprise
      description: 'Lists secret scanning alerts for eligible repositories in an enterprise, from newest to oldest.


        Alerts are only returned for organizations in the enterprise for which the authenticated user is an organization owner or a [security manager](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).


        The authenticated user must be a member of the enterprise in order to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope or `security_events` scope to use this endpoint.'
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-enterprise
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-an-enterprise
      parameters:
      - $ref: '#/components/parameters/enterprise'
      - $ref: '#/components/parameters/secret-scanning-alert-state'
      - $ref: '#/components/parameters/secret-scanning-alert-secret-type'
      - $ref: '#/components/parameters/secret-scanning-alert-resolution'
      - $ref: '#/components/parameters/secret-scanning-alert-sort'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/pagination-before'
      - $ref: '#/components/parameters/pagination-after'
      - $ref: '#/components/parameters/secret-scanning-alert-validity'
      - $ref: '#/components/parameters/secret-scanning-alert-publicly-leaked'
      - $ref: '#/components/parameters/secret-scanning-alert-multi-repo'
      - $ref: '#/components/parameters/secret-scanning-alert-hide-secret'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-secret-scanning-alert'
              examples:
                default:
                  $ref: '#/components/examples/organization-secret-scanning-alert-list'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: false
        category: secret-scanning
        subcategory: secret-scanning
  /orgs/{org}/secret-scanning/alerts:
    get:
      summary: List secret scanning alerts for an organization
      description: 'Lists secret scanning alerts for eligible repositories in an organization, from newest to oldest.


        The authenticated user must be an administrator or security manager for the organization to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-org
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-an-organization
      parameters:
      - $ref: '#/components/parameters/org'
      - $ref: '#/components/parameters/secret-scanning-alert-state'
      - $ref: '#/components/parameters/secret-scanning-alert-secret-type'
      - $ref: '#/components/parameters/secret-scanning-alert-resolution'
      - $ref: '#/components/parameters/secret-scanning-alert-sort'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/secret-scanning-pagination-before-org-repo'
      - $ref: '#/components/parameters/secret-scanning-pagination-after-org-repo'
      - $ref: '#/components/parameters/secret-scanning-alert-validity'
      - $ref: '#/components/parameters/secret-scanning-alert-publicly-leaked'
      - $ref: '#/components/parameters/secret-scanning-alert-multi-repo'
      - $ref: '#/components/parameters/secret-scanning-alert-hide-secret'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/organization-secret-scanning-alert'
              examples:
                default:
                  $ref: '#/components/examples/organization-secret-scanning-alert-list'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          $ref: '#/components/responses/not_found'
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  /orgs/{org}/secret-scanning/pattern-configurations:
    get:
      summary: List organization pattern configurations
      description: 'Lists the secret scanning pattern configurations for an organization.


        Personal access tokens (classic) need the `write:org` scope to use this endpoint.'
      tags:
      - secret-scanning
      operationId: secret-scanning/list-org-pattern-configs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/push-protection#list-organization-pattern-configurations
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: push-protection
      parameters:
      - $ref: '#/components/parameters/org'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret-scanning-pattern-configuration'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-pattern-configuration'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
    patch:
      summary: Update organization pattern configurations
      description: 'Updates the secret scanning pattern configurations for an organization.


        Personal access tokens (classic) need the `write:org` scope to use this endpoint.'
      tags:
      - secret-scanning
      operationId: secret-scanning/update-org-pattern-configs
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/push-protection#update-organization-pattern-configurations
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: push-protection
      parameters:
      - $ref: '#/components/parameters/org'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pattern_config_version:
                  $ref: '#/components/schemas/secret-scanning-row-version'
                provider_pattern_settings:
                  type: array
                  description: Pattern settings for provider patterns.
                  items:
                    type: object
                    properties:
                      token_type:
                        type: string
                        description: The ID of the pattern to configure.
                      push_protection_setting:
                        type: string
                        description: Push protection setting to set for the pattern.
                        enum:
                        - not-set
                        - disabled
                        - enabled
                custom_pattern_settings:
                  type: array
                  description: Pattern settings for custom patterns.
                  items:
                    type: object
                    properties:
                      token_type:
                        type: string
                        description: The ID of the pattern to configure.
                      custom_pattern_version:
                        $ref: '#/components/schemas/secret-scanning-row-version'
                      push_protection_setting:
                        type: string
                        description: Push protection setting to set for the pattern.
                        enum:
                        - disabled
                        - enabled
            examples:
              default:
                value:
                  pattern_config_version: 0ujsswThIGTUYm2K8FjOOfXtY1K
                  provider_pattern_settings:
                  - token_type: GITHUB_PERSONAL_ACCESS_TOKEN
                    push_protection_setting: enabled
                  custom_pattern_settings:
                  - token_type: cp_2
                    custom_pattern_version: 0ujsswThIGTUYm2K8FjOOfXtY1K
                    push_protection_setting: enabled
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  pattern_config_version:
                    type: string
                    description: The updated pattern configuration version.
              examples:
                default:
                  value:
                    pattern_config_version: 0ujsswThIGTUYm2K8FjOOfXtY1K
        '400':
          $ref: '#/components/responses/bad_request'
        '403':
          $ref: '#/components/responses/forbidden'
        '404':
          $ref: '#/components/responses/not_found'
        '409':
          $ref: '#/components/responses/conflict'
        '422':
          $ref: '#/components/responses/validation_failed'
  /repos/{owner}/{repo}/secret-scanning/alerts:
    get:
      summary: List secret scanning alerts for a repository
      description: 'Lists secret scanning alerts for an eligible repository, from newest to oldest.


        The authenticated user must be an administrator for the repository or for the organization that owns the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      tags:
      - secret-scanning
      operationId: secret-scanning/list-alerts-for-repo
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-secret-scanning-alerts-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/secret-scanning-alert-state'
      - $ref: '#/components/parameters/secret-scanning-alert-secret-type'
      - $ref: '#/components/parameters/secret-scanning-alert-resolution'
      - $ref: '#/components/parameters/secret-scanning-alert-sort'
      - $ref: '#/components/parameters/direction'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/secret-scanning-pagination-before-org-repo'
      - $ref: '#/components/parameters/secret-scanning-pagination-after-org-repo'
      - $ref: '#/components/parameters/secret-scanning-alert-validity'
      - $ref: '#/components/parameters/secret-scanning-alert-publicly-leaked'
      - $ref: '#/components/parameters/secret-scanning-alert-multi-repo'
      - $ref: '#/components/parameters/secret-scanning-alert-hide-secret'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/secret-scanning-alert'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-alert-list'
        '404':
          description: Repository is public or secret scanning is disabled for the repository
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}:
    get:
      summary: Get a secret scanning alert
      description: 'Gets a single secret scanning alert detected in an eligible repository.


        The authenticated user must be an administrator for the repository or for the organization that owns the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      tags:
      - secret-scanning
      operationId: secret-scanning/get-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#get-a-secret-scanning-alert
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/alert-number'
      - $ref: '#/components/parameters/secret-scanning-alert-hide-secret'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret-scanning-alert'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-alert-open'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          description: Repository is public, or secret scanning is disabled for the repository, or the resource is not found
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
    patch:
      summary: Update a secret scanning alert
      description: 'Updates the status of a secret scanning alert in an eligible repository.


        The authenticated user must be an administrator for the repository or for the organization that owns the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      operationId: secret-scanning/update-alert
      tags:
      - secret-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#update-a-secret-scanning-alert
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/alert-number'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  $ref: '#/components/schemas/secret-scanning-alert-state'
                resolution:
                  $ref: '#/components/schemas/secret-scanning-alert-resolution'
                resolution_comment:
                  $ref: '#/components/schemas/secret-scanning-alert-resolution-comment'
              required:
              - state
            examples:
              default:
                value:
                  state: resolved
                  resolution: false_positive
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret-scanning-alert'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-alert-resolved'
        '400':
          description: Bad request, resolution comment is invalid or the resolution was not changed.
        '404':
          description: Repository is public, or secret scanning is disabled for the repository, or the resource is not found
        '422':
          description: State does not match the resolution or resolution comment
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: secret-scanning
        subcategory: secret-scanning
  /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations:
    get:
      summary: List locations for a secret scanning alert
      description: 'Lists all locations for a given secret scanning alert for an eligible repository.


        The authenticated user must be an administrator for the repository or for the organization that owns the repository to use this endpoint.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      tags:
      - secret-scanning
      operationId: secret-scanning/list-locations-for-alert
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#list-locations-for-a-secret-scanning-alert
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      - $ref: '#/components/parameters/alert-number'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/per-page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                description: List of locations where the secret was detected
                items:
                  $ref: '#/components/schemas/secret-scanning-location'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-location-list'
          headers:
            Link:
              $ref: '#/components/headers/link'
        '404':
          description: Repository is public, or secret scanning is disabled for the repository, or the resource is not found
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
  /repos/{owner}/{repo}/secret-scanning/push-protection-bypasses:
    post:
      summary: Create a push protection bypass
      description: 'Creates a bypass for a previously push protected secret.


        The authenticated user must be the original author of the committed secret.


        OAuth app tokens and personal access tokens (classic) need the `repo` scope to use this endpoint.'
      operationId: secret-scanning/create-push-protection-bypass
      tags:
      - secret-scanning
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#create-a-push-protection-bypass
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  $ref: '#/components/schemas/secret-scanning-push-protection-bypass-reason'
                placeholder_id:
                  $ref: '#/components/schemas/secret-scanning-push-protection-bypass-placeholder-id'
              required:
              - reason
              - placeholder_id
            examples:
              default:
                value:
                  reason: will_fix_later
                  placeholder_id: 2k4dM4tseyC5lPIsjl5emX9sPNk
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret-scanning-push-protection-bypass'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-push-protection-bypass'
        '403':
          description: User does not have enough permissions to perform this action.
        '404':
          description: Placeholder ID not found, or push protection is disabled on this repository.
        '422':
          description: Bad request, input data missing or incorrect.
        '503':
          $ref: '#/components/responses/service_unavailable'
      x-github:
        enabledForGitHubApps: true
        githubCloudOnly: false
        category: secret-scanning
        subcategory: secret-scanning
  /repos/{owner}/{repo}/secret-scanning/scan-history:
    get:
      summary: Get secret scanning scan history for a repository
      description: 'Lists the latest default incremental and backfill scans by type for a repository. Scans from Copilot Secret Scanning are not included.


        OAuth app tokens and personal access tokens (classic) need the `repo` or `security_events` scope to use this endpoint. If this endpoint is only used with public repositories, the token can use the `public_repo` scope instead.'
      tags:
      - secret-scanning
      operationId: secret-scanning/get-scan-history
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/secret-scanning/secret-scanning#get-secret-scanning-scan-history-for-a-repository
      parameters:
      - $ref: '#/components/parameters/owner'
      - $ref: '#/components/parameters/repo'
      responses:
        '404':
          description: Repository does not have GitHub Advanced Security or secret scanning enabled
        '503':
          $ref: '#/components/responses/service_unavailable'
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/secret-scanning-scan-history'
              examples:
                default:
                  $ref: '#/components/examples/secret-scanning-scan-history'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: secret-scanning
        subcategory: secret-scanning
