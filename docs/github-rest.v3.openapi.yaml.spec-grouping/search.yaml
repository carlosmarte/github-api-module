openapi: 3.0.3
info:
  version: 1.1.4
  title: GitHub v3 REST API
  description: GitHub's v3 REST API.
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  termsOfService: https://docs.github.com/articles/github-terms-of-service
  contact:
    name: Support
    url: https://support.github.com/contact?tags=dotcom-rest-api
  x-github-plan: api.github.com
servers:
- url: https://api.github.com
components:
  schemas:
    simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
    basic-error:
      title: Basic Error
      description: Basic Error
      type: object
      properties:
        message:
          type: string
        documentation_url:
          type: string
        url:
          type: string
        status:
          type: string
    enterprise:
      title: Enterprise
      description: An enterprise on GitHub.
      type: object
      properties:
        description:
          description: A short description of the enterprise.
          type: string
          nullable: true
        html_url:
          type: string
          format: uri
          example: https://github.com/enterprises/octo-business
        website_url:
          description: The enterprise's website URL.
          type: string
          nullable: true
          format: uri
        id:
          description: Unique identifier of the enterprise
          example: 42
          type: integer
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the enterprise.
          type: string
          example: Octo Business
        slug:
          description: The slug url identifier for the enterprise.
          type: string
          example: octo-business
        created_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:01:12Z'
        updated_at:
          type: string
          nullable: true
          format: date-time
          example: '2019-01-26T19:14:43Z'
        avatar_url:
          type: string
          format: uri
      required:
      - id
      - node_id
      - name
      - slug
      - html_url
      - created_at
      - updated_at
      - avatar_url
    validation-error:
      title: Validation Error
      description: Validation Error
      type: object
      required:
      - message
      - documentation_url
      properties:
        message:
          type: string
        documentation_url:
          type: string
        errors:
          type: array
          items:
            type: object
            required:
            - code
            properties:
              resource:
                type: string
              field:
                type: string
              message:
                type: string
              code:
                type: string
              index:
                type: integer
              value:
                oneOf:
                - type: string
                  nullable: true
                - type: integer
                  nullable: true
                - type: array
                  nullable: true
                  items:
                    type: string
    nullable-simple-user:
      title: Simple User
      description: A GitHub user.
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        login:
          type: string
          example: octocat
        id:
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: MDQ6VXNlcjE=
        avatar_url:
          type: string
          format: uri
          example: https://github.com/images/error/octocat_happy.gif
        gravatar_id:
          type: string
          example: 41d064eb2195891e12d0413f63227ea7
          nullable: true
        url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat
        followers_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/followers
        following_url:
          type: string
          example: https://api.github.com/users/octocat/following{/other_user}
        gists_url:
          type: string
          example: https://api.github.com/users/octocat/gists{/gist_id}
        starred_url:
          type: string
          example: https://api.github.com/users/octocat/starred{/owner}{/repo}
        subscriptions_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/subscriptions
        organizations_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/orgs
        repos_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/repos
        events_url:
          type: string
          example: https://api.github.com/users/octocat/events{/privacy}
        received_events_url:
          type: string
          format: uri
          example: https://api.github.com/users/octocat/received_events
        type:
          type: string
          example: User
        site_admin:
          type: boolean
        starred_at:
          type: string
          example: '"2020-07-09T00:17:55Z"'
        user_view_type:
          type: string
          example: public
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      nullable: true
    nullable-license-simple:
      title: License Simple
      description: License Simple
      type: object
      properties:
        key:
          type: string
          example: mit
        name:
          type: string
          example: MIT License
        url:
          type: string
          nullable: true
          format: uri
          example: https://api.github.com/licenses/mit
        spdx_id:
          type: string
          nullable: true
          example: MIT
        node_id:
          type: string
          example: MDc6TGljZW5zZW1pdA==
        html_url:
          type: string
          format: uri
      required:
      - key
      - name
      - url
      - spdx_id
      - node_id
      nullable: true
    repository:
      title: Repository
      description: A repository on GitHub.
      type: object
      properties:
        id:
          description: Unique identifier of the repository
          example: 42
          type: integer
          format: int64
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          description: The name of the repository.
          type: string
          example: Team Environment
        full_name:
          type: string
          example: octocat/Hello-World
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        forks:
          type: integer
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            pull:
              type: boolean
            triage:
              type: boolean
            push:
              type: boolean
            maintain:
              type: boolean
          required:
          - admin
          - pull
          - push
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          description: Whether the repository is private or public.
          default: false
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
          example: git:github.com/octocat/Hello-World.git
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
          example: git@github.com:octocat/Hello-World.git
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
          example: https://github.com/octocat/Hello-World.git
        mirror_url:
          type: string
          format: uri
          example: git:git.example.com/octocat/Hello-World
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
          format: uri
          example: https://svn.github.com/octocat/Hello-World
        homepage:
          type: string
          format: uri
          example: https://github.com
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
          example: 9
        stargazers_count:
          type: integer
          example: 80
        watchers_count:
          type: integer
          example: 80
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
          example: 108
        default_branch:
          description: The default branch of the repository.
          type: string
          example: master
        open_issues_count:
          type: integer
          example: 0
        is_template:
          description: Whether this repository acts as a template that can be used to generate new repositories.
          default: false
          type: boolean
          example: true
        topics:
          type: array
          items:
            type: string
        has_issues:
          description: Whether issues are enabled.
          default: true
          type: boolean
          example: true
        has_projects:
          description: Whether projects are enabled.
          default: true
          type: boolean
          example: true
        has_wiki:
          description: Whether the wiki is enabled.
          default: true
          type: boolean
          example: true
        has_pages:
          type: boolean
        has_downloads:
          description: Whether downloads are enabled.
          default: true
          type: boolean
          example: true
          deprecated: true
        has_discussions:
          description: Whether discussions are enabled.
          default: false
          type: boolean
          example: true
        archived:
          description: Whether the repository is archived.
          default: false
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          default: public
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        allow_rebase_merge:
          description: Whether to allow rebase merges for pull requests.
          default: true
          type: boolean
          example: true
        temp_clone_token:
          type: string
        allow_squash_merge:
          description: Whether to allow squash merges for pull requests.
          default: true
          type: boolean
          example: true
        allow_auto_merge:
          description: Whether to allow Auto-merge to be used on pull requests.
          default: false
          type: boolean
          example: false
        delete_branch_on_merge:
          description: Whether to delete head branches when pull requests are merged
          default: false
          type: boolean
          example: false
        allow_update_branch:
          description: Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.
          default: false
          type: boolean
          example: false
        use_squash_pr_title_as_default:
          type: boolean
          description: Whether a squash merge commit can use the pull request title as default. **This property is closing down. Please use `squash_merge_commit_title` instead.
          default: false
          deprecated: true
        squash_merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - COMMIT_OR_PR_TITLE
          description: 'The default value for a squash merge commit title:


            - `PR_TITLE` - default to the pull request''s title.

            - `COMMIT_OR_PR_TITLE` - default to the commit''s title (if only one commit) or the pull request''s title (when more than one commit).'
        squash_merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - COMMIT_MESSAGES
          - BLANK
          description: 'The default value for a squash merge commit message:


            - `PR_BODY` - default to the pull request''s body.

            - `COMMIT_MESSAGES` - default to the branch''s commit messages.

            - `BLANK` - default to a blank commit message.'
        merge_commit_title:
          type: string
          enum:
          - PR_TITLE
          - MERGE_MESSAGE
          description: 'The default value for a merge commit title.


            - `PR_TITLE` - default to the pull request''s title.

            - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).'
        merge_commit_message:
          type: string
          enum:
          - PR_BODY
          - PR_TITLE
          - BLANK
          description: 'The default value for a merge commit message.


            - `PR_TITLE` - default to the pull request''s title.

            - `PR_BODY` - default to the pull request''s body.

            - `BLANK` - default to a blank commit message.'
        allow_merge_commit:
          description: Whether to allow merge commits for pull requests.
          default: true
          type: boolean
          example: true
        allow_forking:
          description: Whether to allow forking this repo
          type: boolean
        web_commit_signoff_required:
          description: Whether to require contributors to sign off on web-based commits
          default: false
          type: boolean
        open_issues:
          type: integer
        watchers:
          type: integer
        master_branch:
          type: string
        starred_at:
          type: string
          example: '"2020-07-09T00:17:42Z"'
        anonymous_access_enabled:
          type: boolean
          description: Whether anonymous git access is enabled for this repository
        code_search_index_status:
          type: object
          description: The status of the code search index for this repository
          properties:
            lexical_search_ok:
              type: boolean
            lexical_commit_sha:
              type: string
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
    code-of-conduct:
      title: Code Of Conduct
      description: Code Of Conduct
      type: object
      properties:
        key:
          type: string
          example: contributor_covenant
        name:
          type: string
          example: Contributor Covenant
        url:
          type: string
          format: uri
          example: https://api.github.com/codes_of_conduct/contributor_covenant
        body:
          type: string
          example: "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory\
            \ comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\n                  to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual\
            \ is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members\
            \ of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](http://contributor-covenant.org), version 1.4, available at [http://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4/).\n"
        html_url:
          type: string
          format: uri
          nullable: true
      required:
      - url
      - html_url
      - key
      - name
    nullable-milestone:
      title: Milestone
      description: A collection of related issues and pull requests.
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World/milestones/v1.0
        labels_url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
        id:
          type: integer
          example: 1002604
        node_id:
          type: string
          example: MDk6TWlsZXN0b25lMTAwMjYwNA==
        number:
          description: The number of the milestone.
          type: integer
          example: 42
        state:
          description: The state of the milestone.
          example: open
          type: string
          enum:
          - open
          - closed
          default: open
        title:
          description: The title of the milestone.
          example: v1.0
          type: string
        description:
          type: string
          example: Tracking milestone for version 1.0
          nullable: true
        creator:
          $ref: '#/components/schemas/nullable-simple-user'
        open_issues:
          type: integer
          example: 4
        closed_issues:
          type: integer
          example: 8
        created_at:
          type: string
          format: date-time
          example: '2011-04-10T20:09:31Z'
        updated_at:
          type: string
          format: date-time
          example: '2014-03-03T18:58:10Z'
        closed_at:
          type: string
          format: date-time
          example: '2013-02-12T13:22:01Z'
          nullable: true
        due_on:
          type: string
          format: date-time
          example: '2012-10-09T23:39:01Z'
          nullable: true
      required:
      - closed_issues
      - creator
      - description
      - due_on
      - closed_at
      - id
      - node_id
      - labels_url
      - html_url
      - number
      - open_issues
      - state
      - title
      - url
      - created_at
      - updated_at
      nullable: true
    issue-type:
      title: Issue Type
      description: The type of issue.
      type: object
      nullable: true
      properties:
        id:
          type: integer
          description: The unique identifier of the issue type.
        node_id:
          type: string
          description: The node identifier of the issue type.
        name:
          type: string
          description: The name of the issue type.
        description:
          type: string
          description: The description of the issue type.
          nullable: true
        color:
          type: string
          description: The color of the issue type.
          enum:
          - gray
          - blue
          - green
          - yellow
          - orange
          - red
          - pink
          - purple
          nullable: true
        created_at:
          type: string
          description: The time the issue type created.
          format: date-time
        updated_at:
          type: string
          description: The time the issue type last updated.
          format: date-time
        is_enabled:
          type: boolean
          description: The enabled state of the issue type.
      required:
      - id
      - node_id
      - name
      - description
    nullable-integration:
      title: GitHub app
      description: GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
      type: object
      nullable: true
      properties:
        id:
          description: Unique identifier of the GitHub app
          example: 37
          type: integer
        slug:
          description: The slug name of the GitHub app
          example: probot-owners
          type: string
        node_id:
          type: string
          example: MDExOkludGVncmF0aW9uMQ==
        client_id:
          type: string
          example: '"Iv1.25b5d1e65ffc4022"'
        owner:
          oneOf:
          - $ref: '#/components/schemas/simple-user'
          - $ref: '#/components/schemas/enterprise'
        name:
          description: The name of the GitHub app
          example: Probot Owners
          type: string
        description:
          type: string
          example: The description of the app.
          nullable: true
        external_url:
          type: string
          format: uri
          example: https://example.com
        html_url:
          type: string
          format: uri
          example: https://github.com/apps/super-ci
        created_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        updated_at:
          type: string
          format: date-time
          example: '2017-07-08T16:18:44-04:00'
        permissions:
          description: The set of permissions for the GitHub app
          type: object
          properties:
            issues:
              type: string
            checks:
              type: string
            metadata:
              type: string
            contents:
              type: string
            deployments:
              type: string
          additionalProperties:
            type: string
          example:
            issues: read
            deployments: write
        events:
          description: The list of events for the GitHub app. Note that the `installation_target`, `security_advisory`, and `meta` events are not included because they are global events and not specific to an installation.
          example:
          - label
          - deployment
          type: array
          items:
            type: string
        installations_count:
          description: The number of installations associated with the GitHub app. Only returned when the integration is requesting details about itself.
          example: 5
          type: integer
      required:
      - id
      - node_id
      - owner
      - name
      - description
      - external_url
      - html_url
      - created_at
      - updated_at
      - permissions
      - events
    author-association:
      title: author_association
      type: string
      example: OWNER
      description: How the author is associated with the repository.
      enum:
      - COLLABORATOR
      - CONTRIBUTOR
      - FIRST_TIMER
      - FIRST_TIME_CONTRIBUTOR
      - MANNEQUIN
      - MEMBER
      - NONE
      - OWNER
    reaction-rollup:
      title: Reaction Rollup
      type: object
      properties:
        url:
          type: string
          format: uri
        total_count:
          type: integer
        '+1':
          type: integer
        '-1':
          type: integer
        laugh:
          type: integer
        confused:
          type: integer
        heart:
          type: integer
        hooray:
          type: integer
        eyes:
          type: integer
        rocket:
          type: integer
      required:
      - url
      - total_count
      - '+1'
      - '-1'
      - laugh
      - confused
      - heart
      - hooray
      - eyes
      - rocket
    sub-issues-summary:
      title: Sub-issues Summary
      type: object
      properties:
        total:
          type: integer
        completed:
          type: integer
        percent_completed:
          type: integer
      required:
      - total
      - completed
      - percent_completed
    issue-dependencies-summary:
      title: Issue Dependencies Summary
      type: object
      properties:
        blocked_by:
          type: integer
        blocking:
          type: integer
        total_blocked_by:
          type: integer
        total_blocking:
          type: integer
      required:
      - blocked_by
      - blocking
      - total_blocked_by
      - total_blocking
    issue-field-value:
      title: Issue Field Value
      description: A value assigned to an issue field
      type: object
      properties:
        issue_field_id:
          description: Unique identifier for the issue field.
          type: integer
          format: int64
          example: 1
        node_id:
          type: string
          example: IFT_GDKND
        data_type:
          description: The data type of the issue field
          type: string
          enum:
          - text
          - single_select
          - number
          - date
          example: text
        value:
          description: The value of the issue field
          anyOf:
          - type: string
            example: Sample text
          - type: number
            example: 42.5
          - type: integer
            example: 1
          nullable: true
        single_select_option:
          description: Details about the selected option (only present for single_select fields)
          type: object
          properties:
            id:
              description: Unique identifier for the option.
              type: integer
              format: int64
              example: 1
            name:
              description: The name of the option
              type: string
              example: High
            color:
              description: The color of the option
              type: string
              example: red
          required:
          - id
          - name
          - color
          nullable: true
      required:
      - issue_field_id
      - node_id
      - data_type
      - value
    security-and-analysis:
      nullable: true
      type: object
      properties:
        advanced_security:
          description: 'Enable or disable GitHub Advanced Security for the repository.


            For standalone Code Scanning or Secret Protection products, this parameter cannot be used.

            '
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        code_security:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        dependabot_security_updates:
          description: Enable or disable Dependabot security updates for the repository.
          type: object
          properties:
            status:
              description: The enablement status of Dependabot security updates for the repository.
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_push_protection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_non_provider_patterns:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
        secret_scanning_ai_detection:
          type: object
          properties:
            status:
              type: string
              enum:
              - enabled
              - disabled
    minimal-repository:
      title: Minimal Repository
      description: Minimal Repository
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1296269
        node_id:
          type: string
          example: MDEwOlJlcG9zaXRvcnkxMjk2MjY5
        name:
          type: string
          example: Hello-World
        full_name:
          type: string
          example: octocat/Hello-World
        owner:
          $ref: '#/components/schemas/simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
          example: https://github.com/octocat/Hello-World
        description:
          type: string
          example: This your first repo!
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
          example: https://api.github.com/repos/octocat/Hello-World
        archive_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}
        assignees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/assignees{/user}
        blobs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}
        branches_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/branches{/branch}
        collaborators_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}
        comments_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/comments{/number}
        commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/commits{/sha}
        compare_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}
        contents_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/contents/{+path}
        contributors_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/contributors
        deployments_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/deployments
        downloads_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/downloads
        events_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/events
        forks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/forks
        git_commits_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}
        git_refs_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}
        git_tags_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}
        git_url:
          type: string
        issue_comment_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}
        issue_events_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues/events{/number}
        issues_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/issues{/number}
        keys_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/keys{/key_id}
        labels_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/labels{/name}
        languages_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/languages
        merges_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/merges
        milestones_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/milestones{/number}
        notifications_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}
        pulls_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/pulls{/number}
        releases_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/releases{/id}
        ssh_url:
          type: string
        stargazers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/stargazers
        statuses_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/statuses/{sha}
        subscribers_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscribers
        subscription_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/subscription
        tags_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/tags
        teams_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/teams
        trees_url:
          type: string
          example: http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}
        clone_url:
          type: string
        mirror_url:
          type: string
          nullable: true
        hooks_url:
          type: string
          format: uri
          example: http://api.github.com/repos/octocat/Hello-World/hooks
        svn_url:
          type: string
        homepage:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        size:
          description: The size of the repository, in kilobytes. Size is calculated hourly. When a repository is initially created, the size is 0.
          type: integer
        default_branch:
          type: string
        open_issues_count:
          type: integer
        is_template:
          type: boolean
        topics:
          type: array
          items:
            type: string
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_wiki:
          type: boolean
        has_pages:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
        visibility:
          type: string
        pushed_at:
          type: string
          format: date-time
          example: '2011-01-26T19:06:43Z'
          nullable: true
        created_at:
          type: string
          format: date-time
          example: '2011-01-26T19:01:12Z'
          nullable: true
        updated_at:
          type: string
          format: date-time
          example: '2011-01-26T19:14:43Z'
          nullable: true
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
        role_name:
          type: string
          example: admin
        temp_clone_token:
          type: string
        delete_branch_on_merge:
          type: boolean
        subscribers_count:
          type: integer
        network_count:
          type: integer
        code_of_conduct:
          $ref: '#/components/schemas/code-of-conduct'
        license:
          type: object
          properties:
            key:
              type: string
            name:
              type: string
            spdx_id:
              type: string
            url:
              type: string
            node_id:
              type: string
          nullable: true
        forks:
          type: integer
          example: 0
        open_issues:
          type: integer
          example: 0
        watchers:
          type: integer
          example: 0
        allow_forking:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
        security_and_analysis:
          $ref: '#/components/schemas/security-and-analysis'
        custom_properties:
          type: object
          description: The custom properties that were defined for the repository. The keys are the custom property names, and the values are the corresponding custom property values.
          additionalProperties: true
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
    nullable-git-user:
      title: Git User
      description: Metaproperties for Git author/committer information.
      type: object
      properties:
        name:
          type: string
          example: '"Chris Wanstrath"'
        email:
          type: string
          example: '"chris@ozmm.org"'
        date:
          type: string
          example: '"2007-10-29T02:42:39.000-07:00"'
      nullable: true
    verification:
      title: Verification
      type: object
      properties:
        verified:
          type: boolean
        reason:
          type: string
        payload:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
        verified_at:
          type: string
          nullable: true
      required:
      - verified
      - reason
      - payload
      - signature
      - verified_at
    search-result-text-matches:
      title: Search Result Text Matches
      type: array
      items:
        type: object
        properties:
          object_url:
            type: string
          object_type:
            nullable: true
            type: string
          property:
            type: string
          fragment:
            type: string
          matches:
            type: array
            items:
              type: object
              properties:
                text:
                  type: string
                indices:
                  type: array
                  items:
                    type: integer
    code-search-result-item:
      title: Code Search Result Item
      description: Code Search Result Item
      type: object
      properties:
        name:
          type: string
        path:
          type: string
        sha:
          type: string
        url:
          type: string
          format: uri
        git_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        repository:
          $ref: '#/components/schemas/minimal-repository'
        score:
          type: number
        file_size:
          type: integer
        language:
          type: string
          nullable: true
        last_modified_at:
          type: string
          format: date-time
        line_numbers:
          type: array
          items:
            type: string
          example:
          - 73..77
          - 77..78
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
      required:
      - score
      - name
      - path
      - sha
      - git_url
      - html_url
      - url
      - repository
    commit-search-result-item:
      title: Commit Search Result Item
      description: Commit Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        sha:
          type: string
        html_url:
          type: string
          format: uri
        comments_url:
          type: string
          format: uri
        commit:
          type: object
          properties:
            author:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                date:
                  type: string
                  format: date-time
              required:
              - name
              - email
              - date
            committer:
              $ref: '#/components/schemas/nullable-git-user'
            comment_count:
              type: integer
            message:
              type: string
            tree:
              type: object
              properties:
                sha:
                  type: string
                url:
                  type: string
                  format: uri
              required:
              - sha
              - url
            url:
              type: string
              format: uri
            verification:
              $ref: '#/components/schemas/verification'
          required:
          - author
          - committer
          - comment_count
          - message
          - tree
          - url
        author:
          $ref: '#/components/schemas/nullable-simple-user'
        committer:
          $ref: '#/components/schemas/nullable-git-user'
        parents:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
              html_url:
                type: string
              sha:
                type: string
        repository:
          $ref: '#/components/schemas/minimal-repository'
        score:
          type: number
        node_id:
          type: string
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
      required:
      - sha
      - node_id
      - url
      - html_url
      - author
      - committer
      - parents
      - comments_url
      - commit
      - repository
      - score
    issue-search-result-item:
      title: Issue Search Result Item
      description: Issue Search Result Item
      type: object
      properties:
        url:
          type: string
          format: uri
        repository_url:
          type: string
          format: uri
        labels_url:
          type: string
        comments_url:
          type: string
          format: uri
        events_url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        id:
          type: integer
          format: int64
        node_id:
          type: string
        number:
          type: integer
        title:
          type: string
        locked:
          type: boolean
        active_lock_reason:
          type: string
          nullable: true
        assignees:
          type: array
          items:
            $ref: '#/components/schemas/simple-user'
          nullable: true
        user:
          $ref: '#/components/schemas/nullable-simple-user'
        labels:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              node_id:
                type: string
              url:
                type: string
              name:
                type: string
              color:
                type: string
              default:
                type: boolean
              description:
                type: string
                nullable: true
        sub_issues_summary:
          $ref: '#/components/schemas/sub-issues-summary'
        issue_dependencies_summary:
          $ref: '#/components/schemas/issue-dependencies-summary'
        issue_field_values:
          type: array
          items:
            $ref: '#/components/schemas/issue-field-value'
        state:
          type: string
        state_reason:
          type: string
          nullable: true
        assignee:
          $ref: '#/components/schemas/nullable-simple-user'
        milestone:
          $ref: '#/components/schemas/nullable-milestone'
        comments:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        closed_at:
          type: string
          format: date-time
          nullable: true
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
        pull_request:
          type: object
          properties:
            merged_at:
              type: string
              format: date-time
              nullable: true
            diff_url:
              type: string
              format: uri
              nullable: true
            html_url:
              type: string
              format: uri
              nullable: true
            patch_url:
              type: string
              format: uri
              nullable: true
            url:
              type: string
              format: uri
              nullable: true
          required:
          - diff_url
          - html_url
          - patch_url
          - url
        body:
          type: string
        score:
          type: number
        author_association:
          $ref: '#/components/schemas/author-association'
        draft:
          type: boolean
        repository:
          $ref: '#/components/schemas/repository'
        body_html:
          type: string
        body_text:
          type: string
        timeline_url:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/issue-type'
        performed_via_github_app:
          $ref: '#/components/schemas/nullable-integration'
        reactions:
          $ref: '#/components/schemas/reaction-rollup'
      required:
      - assignee
      - closed_at
      - comments
      - comments_url
      - events_url
      - html_url
      - id
      - node_id
      - labels
      - labels_url
      - milestone
      - number
      - repository_url
      - state
      - locked
      - title
      - url
      - user
      - author_association
      - created_at
      - updated_at
      - score
    label-search-result-item:
      title: Label Search Result Item
      description: Label Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        url:
          type: string
          format: uri
        name:
          type: string
        color:
          type: string
        default:
          type: boolean
        description:
          type: string
          nullable: true
        score:
          type: number
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
      required:
      - id
      - node_id
      - url
      - name
      - color
      - default
      - description
      - score
    repo-search-result-item:
      title: Repo Search Result Item
      description: Repo Search Result Item
      type: object
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        owner:
          $ref: '#/components/schemas/nullable-simple-user'
        private:
          type: boolean
        html_url:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        fork:
          type: boolean
        url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        pushed_at:
          type: string
          format: date-time
        homepage:
          type: string
          format: uri
          nullable: true
        size:
          type: integer
        stargazers_count:
          type: integer
        watchers_count:
          type: integer
        language:
          type: string
          nullable: true
        forks_count:
          type: integer
        open_issues_count:
          type: integer
        master_branch:
          type: string
        default_branch:
          type: string
        score:
          type: number
        forks_url:
          type: string
          format: uri
        keys_url:
          type: string
        collaborators_url:
          type: string
        teams_url:
          type: string
          format: uri
        hooks_url:
          type: string
          format: uri
        issue_events_url:
          type: string
        events_url:
          type: string
          format: uri
        assignees_url:
          type: string
        branches_url:
          type: string
        tags_url:
          type: string
          format: uri
        blobs_url:
          type: string
        git_tags_url:
          type: string
        git_refs_url:
          type: string
        trees_url:
          type: string
        statuses_url:
          type: string
        languages_url:
          type: string
          format: uri
        stargazers_url:
          type: string
          format: uri
        contributors_url:
          type: string
          format: uri
        subscribers_url:
          type: string
          format: uri
        subscription_url:
          type: string
          format: uri
        commits_url:
          type: string
        git_commits_url:
          type: string
        comments_url:
          type: string
        issue_comment_url:
          type: string
        contents_url:
          type: string
        compare_url:
          type: string
        merges_url:
          type: string
          format: uri
        archive_url:
          type: string
        downloads_url:
          type: string
          format: uri
        issues_url:
          type: string
        pulls_url:
          type: string
        milestones_url:
          type: string
        notifications_url:
          type: string
        labels_url:
          type: string
        releases_url:
          type: string
        deployments_url:
          type: string
          format: uri
        git_url:
          type: string
        ssh_url:
          type: string
        clone_url:
          type: string
        svn_url:
          type: string
          format: uri
        forks:
          type: integer
        open_issues:
          type: integer
        watchers:
          type: integer
        topics:
          type: array
          items:
            type: string
        mirror_url:
          type: string
          format: uri
          nullable: true
        has_issues:
          type: boolean
        has_projects:
          type: boolean
        has_pages:
          type: boolean
        has_wiki:
          type: boolean
        has_downloads:
          type: boolean
        has_discussions:
          type: boolean
        archived:
          type: boolean
        disabled:
          type: boolean
          description: Returns whether or not this repository disabled.
        visibility:
          description: 'The repository visibility: public, private, or internal.'
          type: string
        license:
          $ref: '#/components/schemas/nullable-license-simple'
        permissions:
          type: object
          properties:
            admin:
              type: boolean
            maintain:
              type: boolean
            push:
              type: boolean
            triage:
              type: boolean
            pull:
              type: boolean
          required:
          - admin
          - pull
          - push
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
        temp_clone_token:
          type: string
        allow_merge_commit:
          type: boolean
        allow_squash_merge:
          type: boolean
        allow_rebase_merge:
          type: boolean
        allow_auto_merge:
          type: boolean
        delete_branch_on_merge:
          type: boolean
        allow_forking:
          type: boolean
        is_template:
          type: boolean
        web_commit_signoff_required:
          type: boolean
          example: false
      required:
      - archive_url
      - assignees_url
      - blobs_url
      - branches_url
      - collaborators_url
      - comments_url
      - commits_url
      - compare_url
      - contents_url
      - contributors_url
      - deployments_url
      - description
      - downloads_url
      - events_url
      - fork
      - forks_url
      - full_name
      - git_commits_url
      - git_refs_url
      - git_tags_url
      - hooks_url
      - html_url
      - id
      - node_id
      - issue_comment_url
      - issue_events_url
      - issues_url
      - keys_url
      - labels_url
      - languages_url
      - merges_url
      - milestones_url
      - name
      - notifications_url
      - owner
      - private
      - pulls_url
      - releases_url
      - stargazers_url
      - statuses_url
      - subscribers_url
      - subscription_url
      - tags_url
      - teams_url
      - trees_url
      - url
      - clone_url
      - default_branch
      - forks
      - forks_count
      - git_url
      - has_downloads
      - has_issues
      - has_projects
      - has_wiki
      - has_pages
      - homepage
      - language
      - archived
      - disabled
      - mirror_url
      - open_issues
      - open_issues_count
      - license
      - pushed_at
      - size
      - ssh_url
      - stargazers_count
      - svn_url
      - watchers
      - watchers_count
      - created_at
      - updated_at
      - score
    topic-search-result-item:
      title: Topic Search Result Item
      description: Topic Search Result Item
      type: object
      properties:
        name:
          type: string
        display_name:
          type: string
          nullable: true
        short_description:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        created_by:
          type: string
          nullable: true
        released:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        featured:
          type: boolean
        curated:
          type: boolean
        score:
          type: number
        repository_count:
          type: integer
          nullable: true
        logo_url:
          type: string
          format: uri
          nullable: true
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
        related:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
        aliases:
          type: array
          nullable: true
          items:
            type: object
            properties:
              topic_relation:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  topic_id:
                    type: integer
                  relation_type:
                    type: string
      required:
      - name
      - display_name
      - short_description
      - description
      - created_by
      - released
      - created_at
      - updated_at
      - featured
      - curated
      - score
    user-search-result-item:
      title: User Search Result Item
      description: User Search Result Item
      type: object
      properties:
        login:
          type: string
        id:
          type: integer
          format: int64
        node_id:
          type: string
        avatar_url:
          type: string
          format: uri
        gravatar_id:
          type: string
          nullable: true
        url:
          type: string
          format: uri
        html_url:
          type: string
          format: uri
        followers_url:
          type: string
          format: uri
        subscriptions_url:
          type: string
          format: uri
        organizations_url:
          type: string
          format: uri
        repos_url:
          type: string
          format: uri
        received_events_url:
          type: string
          format: uri
        type:
          type: string
        score:
          type: number
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        events_url:
          type: string
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        location:
          type: string
          nullable: true
        site_admin:
          type: boolean
        hireable:
          type: boolean
          nullable: true
        text_matches:
          $ref: '#/components/schemas/search-result-text-matches'
        blog:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        suspended_at:
          type: string
          format: date-time
          nullable: true
        user_view_type:
          type: string
      required:
      - avatar_url
      - events_url
      - followers_url
      - following_url
      - gists_url
      - gravatar_id
      - html_url
      - id
      - node_id
      - login
      - organizations_url
      - received_events_url
      - repos_url
      - site_admin
      - starred_url
      - subscriptions_url
      - type
      - url
      - score
  examples:
    code-search-result-item-paginated:
      value:
        total_count: 7
        incomplete_results: false
        items:
        - name: classes.js
          path: src/attributes/classes.js
          sha: d7212f9dee2dcc18f084d7df8f417b80846ded5a
          url: https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4
          git_url: https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a
          html_url: https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js
          repository:
            id: 167174
            node_id: MDEwOlJlcG9zaXRvcnkxNjcxNzQ=
            name: jquery
            full_name: jquery/jquery
            owner:
              login: jquery
              id: 70142
              node_id: MDQ6VXNlcjcwMTQy
              avatar_url: https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png
              gravatar_id: ''
              url: https://api.github.com/users/jquery
              html_url: https://github.com/jquery
              followers_url: https://api.github.com/users/jquery/followers
              following_url: https://api.github.com/users/jquery/following{/other_user}
              gists_url: https://api.github.com/users/jquery/gists{/gist_id}
              starred_url: https://api.github.com/users/jquery/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/jquery/subscriptions
              organizations_url: https://api.github.com/users/jquery/orgs
              repos_url: https://api.github.com/users/jquery/repos
              events_url: https://api.github.com/users/jquery/events{/privacy}
              received_events_url: https://api.github.com/users/jquery/received_events
              type: Organization
              site_admin: false
            private: false
            html_url: https://github.com/jquery/jquery
            description: jQuery JavaScript Library
            fork: false
            url: https://api.github.com/repos/jquery/jquery
            forks_url: https://api.github.com/repos/jquery/jquery/forks
            keys_url: https://api.github.com/repos/jquery/jquery/keys{/key_id}
            collaborators_url: https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/jquery/jquery/teams
            hooks_url: https://api.github.com/repos/jquery/jquery/hooks
            issue_events_url: https://api.github.com/repos/jquery/jquery/issues/events{/number}
            events_url: https://api.github.com/repos/jquery/jquery/events
            assignees_url: https://api.github.com/repos/jquery/jquery/assignees{/user}
            branches_url: https://api.github.com/repos/jquery/jquery/branches{/branch}
            tags_url: https://api.github.com/repos/jquery/jquery/tags
            blobs_url: https://api.github.com/repos/jquery/jquery/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/jquery/jquery/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/jquery/jquery/git/refs{/sha}
            trees_url: https://api.github.com/repos/jquery/jquery/git/trees{/sha}
            statuses_url: https://api.github.com/repos/jquery/jquery/statuses/{sha}
            languages_url: https://api.github.com/repos/jquery/jquery/languages
            stargazers_url: https://api.github.com/repos/jquery/jquery/stargazers
            contributors_url: https://api.github.com/repos/jquery/jquery/contributors
            subscribers_url: https://api.github.com/repos/jquery/jquery/subscribers
            subscription_url: https://api.github.com/repos/jquery/jquery/subscription
            commits_url: https://api.github.com/repos/jquery/jquery/commits{/sha}
            git_commits_url: https://api.github.com/repos/jquery/jquery/git/commits{/sha}
            comments_url: https://api.github.com/repos/jquery/jquery/comments{/number}
            issue_comment_url: https://api.github.com/repos/jquery/jquery/issues/comments/{number}
            contents_url: https://api.github.com/repos/jquery/jquery/contents/{+path}
            compare_url: https://api.github.com/repos/jquery/jquery/compare/{base}...{head}
            merges_url: https://api.github.com/repos/jquery/jquery/merges
            archive_url: https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/jquery/jquery/downloads
            issues_url: https://api.github.com/repos/jquery/jquery/issues{/number}
            pulls_url: https://api.github.com/repos/jquery/jquery/pulls{/number}
            milestones_url: https://api.github.com/repos/jquery/jquery/milestones{/number}
            notifications_url: https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/jquery/jquery/labels{/name}
            deployments_url: http://api.github.com/repos/octocat/Hello-World/deployments
            releases_url: http://api.github.com/repos/octocat/Hello-World/releases{/id}
          score: 1
    commit-search-result-item-paginated:
      value:
        total_count: 1
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          sha: bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          html_url: https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
          comments_url: https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments
          commit:
            url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f
            author:
              date: '2014-02-04T14:38:36-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            committer:
              date: '2014-02-12T15:18:55-08:00'
              name: The Octocat
              email: octocat@nowhere.com
            message: Create styles.css and updated README
            tree:
              url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68
              sha: a639e96f9038797fba6e0469f94a4b0cc459fa68
            comment_count: 8
          author:
            login: octocat
            id: 583231
            node_id: MDQ6VXNlcjU4MzIzMQ==
            avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
            gravatar_id: ''
            url: https://api.github.com/users/octocat
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            received_events_url: https://api.github.com/users/octocat/received_events
            type: User
            site_admin: false
          committer: {}
          parents:
          - url: https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            html_url: https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4
            sha: a30c19e3f13765a3b48829788bc1cb8b4e95cee4
          repository:
            id: 1300192
            node_id: MDEwOlJlcG9zaXRvcnkxMzAwMTky
            name: Spoon-Knife
            full_name: octocat/Spoon-Knife
            owner:
              login: octocat
              id: 583231
              node_id: MDQ6VXNlcjU4MzIzMQ==
              avatar_url: https://avatars.githubusercontent.com/u/583231?v=3
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            private: false
            html_url: https://github.com/octocat/Spoon-Knife
            description: This repo is for demonstration purposes only.
            fork: false
            url: https://api.github.com/repos/octocat/Spoon-Knife
            forks_url: https://api.github.com/repos/octocat/Spoon-Knife/forks
            keys_url: https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}
            collaborators_url: https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}
            teams_url: https://api.github.com/repos/octocat/Spoon-Knife/teams
            hooks_url: https://api.github.com/repos/octocat/Spoon-Knife/hooks
            issue_events_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}
            events_url: https://api.github.com/repos/octocat/Spoon-Knife/events
            assignees_url: https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}
            branches_url: https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}
            tags_url: https://api.github.com/repos/octocat/Spoon-Knife/tags
            blobs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}
            git_tags_url: https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}
            git_refs_url: https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}
            trees_url: https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}
            statuses_url: https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}
            languages_url: https://api.github.com/repos/octocat/Spoon-Knife/languages
            stargazers_url: https://api.github.com/repos/octocat/Spoon-Knife/stargazers
            contributors_url: https://api.github.com/repos/octocat/Spoon-Knife/contributors
            subscribers_url: https://api.github.com/repos/octocat/Spoon-Knife/subscribers
            subscription_url: https://api.github.com/repos/octocat/Spoon-Knife/subscription
            commits_url: https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}
            git_commits_url: https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}
            comments_url: https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}
            issue_comment_url: https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}
            contents_url: https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}
            compare_url: https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}
            merges_url: https://api.github.com/repos/octocat/Spoon-Knife/merges
            archive_url: https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}
            downloads_url: https://api.github.com/repos/octocat/Spoon-Knife/downloads
            issues_url: https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}
            pulls_url: https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}
            milestones_url: https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}
            notifications_url: https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}
            labels_url: https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}
            releases_url: https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}
            deployments_url: https://api.github.com/repos/octocat/Spoon-Knife/deployments
          score: 1
          node_id: MDQ6VXNlcjU4MzIzMQ==
    issue-search-result-item-paginated:
      value:
        total_count: 280
        incomplete_results: false
        items:
        - url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132
          repository_url: https://api.github.com/repos/batterseapower/pinyin-toolkit
          labels_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}
          comments_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments
          events_url: https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events
          html_url: https://github.com/batterseapower/pinyin-toolkit/issues/132
          id: 35802
          node_id: MDU6SXNzdWUzNTgwMg==
          number: 132
          title: Line Number Indexes Beyond 20 Not Displayed
          user:
            login: Nick3C
            id: 90254
            node_id: MDQ6VXNlcjkwMjU0
            avatar_url: https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/Nick3C
            html_url: https://github.com/Nick3C
            followers_url: https://api.github.com/users/Nick3C/followers
            following_url: https://api.github.com/users/Nick3C/following{/other_user}
            gists_url: https://api.github.com/users/Nick3C/gists{/gist_id}
            starred_url: https://api.github.com/users/Nick3C/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/Nick3C/subscriptions
            organizations_url: https://api.github.com/users/Nick3C/orgs
            repos_url: https://api.github.com/users/Nick3C/repos
            events_url: https://api.github.com/users/Nick3C/events{/privacy}
            received_events_url: https://api.github.com/users/Nick3C/received_events
            type: User
            site_admin: true
          labels:
          - id: 4
            node_id: MDU6TGFiZWw0
            url: https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug
            name: bug
            color: ff0000
          state: open
          assignee: null
          milestone:
            url: https://api.github.com/repos/octocat/Hello-World/milestones/1
            html_url: https://github.com/octocat/Hello-World/milestones/v1.0
            labels_url: https://api.github.com/repos/octocat/Hello-World/milestones/1/labels
            id: 1002604
            node_id: MDk6TWlsZXN0b25lMTAwMjYwNA==
            number: 1
            state: open
            title: v1.0
            description: Tracking milestone for version 1.0
            creator:
              login: octocat
              id: 1
              node_id: MDQ6VXNlcjE=
              avatar_url: https://github.com/images/error/octocat_happy.gif
              gravatar_id: ''
              url: https://api.github.com/users/octocat
              html_url: https://github.com/octocat
              followers_url: https://api.github.com/users/octocat/followers
              following_url: https://api.github.com/users/octocat/following{/other_user}
              gists_url: https://api.github.com/users/octocat/gists{/gist_id}
              starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
              subscriptions_url: https://api.github.com/users/octocat/subscriptions
              organizations_url: https://api.github.com/users/octocat/orgs
              repos_url: https://api.github.com/users/octocat/repos
              events_url: https://api.github.com/users/octocat/events{/privacy}
              received_events_url: https://api.github.com/users/octocat/received_events
              type: User
              site_admin: false
            open_issues: 4
            closed_issues: 8
            created_at: '2011-04-10T20:09:31Z'
            updated_at: '2014-03-03T18:58:10Z'
            closed_at: '2013-02-12T13:22:01Z'
            due_on: '2012-10-09T23:39:01Z'
          comments: 15
          created_at: '2009-07-12T20:10:41Z'
          updated_at: '2009-07-19T09:23:43Z'
          closed_at: null
          pull_request:
            url: https://api/github.com/repos/octocat/Hello-World/pull/1347
            html_url: https://github.com/octocat/Hello-World/pull/1347
            diff_url: https://github.com/octocat/Hello-World/pull/1347.diff
            patch_url: https://api.github.com/repos/octocat/Hello-World/pulls/1347
          body: '...'
          score: 1
          locked: true
          author_association: COLLABORATOR
          state_reason: completed
    label-search-result-item-paginated:
      value:
        total_count: 2
        incomplete_results: false
        items:
        - id: 418327088
          node_id: MDU6TGFiZWw0MTgzMjcwODg=
          url: https://api.github.com/repos/octocat/linguist/labels/enhancement
          name: enhancement
          color: 84b6eb
          default: true
          description: New feature or request.
          score: 1
        - id: 418327086
          node_id: MDU6TGFiZWw0MTgzMjcwODY=
          url: https://api.github.com/repos/octocat/linguist/labels/bug
          name: bug
          color: ee0701
          default: true
          description: Something isn't working.
          score: 1
    repo-search-result-item-paginated:
      value:
        total_count: 40
        incomplete_results: false
        items:
        - id: 3081286
          node_id: MDEwOlJlcG9zaXRvcnkzMDgxMjg2
          name: Tetris
          full_name: dtrupenn/Tetris
          owner:
            login: dtrupenn
            id: 872147
            node_id: MDQ6VXNlcjg3MjE0Nw==
            avatar_url: https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
            gravatar_id: ''
            url: https://api.github.com/users/dtrupenn
            received_events_url: https://api.github.com/users/dtrupenn/received_events
            type: User
            html_url: https://github.com/octocat
            followers_url: https://api.github.com/users/octocat/followers
            following_url: https://api.github.com/users/octocat/following{/other_user}
            gists_url: https://api.github.com/users/octocat/gists{/gist_id}
            starred_url: https://api.github.com/users/octocat/starred{/owner}{/repo}
            subscriptions_url: https://api.github.com/users/octocat/subscriptions
            organizations_url: https://api.github.com/users/octocat/orgs
            repos_url: https://api.github.com/users/octocat/repos
            events_url: https://api.github.com/users/octocat/events{/privacy}
            site_admin: true
          private: false
          html_url: https://github.com/dtrupenn/Tetris
          description: A C implementation of Tetris using Pennsim through LC4
          fork: false
          url: https://api.github.com/repos/dtrupenn/Tetris
          created_at: '2012-01-01T00:31:50Z'
          updated_at: '2013-01-05T17:58:47Z'
          pushed_at: '2012-01-01T00:37:02Z'
          homepage: https://github.com
          size: 524
          stargazers_count: 1
          watchers_count: 1
          language: Assembly
          forks_count: 0
          open_issues_count: 0
          master_branch: master
          default_branch: master
          score: 1
          archive_url: https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}
          assignees_url: https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}
          blobs_url: https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}
          branches_url: https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}
          collaborators_url: https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}
          comments_url: https://api.github.com/repos/dtrupenn/Tetris/comments{/number}
          commits_url: https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}
          compare_url: https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}
          contents_url: https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}
          contributors_url: https://api.github.com/repos/dtrupenn/Tetris/contributors
          deployments_url: https://api.github.com/repos/dtrupenn/Tetris/deployments
          downloads_url: https://api.github.com/repos/dtrupenn/Tetris/downloads
          events_url: https://api.github.com/repos/dtrupenn/Tetris/events
          forks_url: https://api.github.com/repos/dtrupenn/Tetris/forks
          git_commits_url: https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}
          git_refs_url: https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}
          git_tags_url: https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}
          git_url: git:github.com/dtrupenn/Tetris.git
          issue_comment_url: https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}
          issue_events_url: https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}
          issues_url: https://api.github.com/repos/dtrupenn/Tetris/issues{/number}
          keys_url: https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}
          labels_url: https://api.github.com/repos/dtrupenn/Tetris/labels{/name}
          languages_url: https://api.github.com/repos/dtrupenn/Tetris/languages
          merges_url: https://api.github.com/repos/dtrupenn/Tetris/merges
          milestones_url: https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}
          notifications_url: https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}
          pulls_url: https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}
          releases_url: https://api.github.com/repos/dtrupenn/Tetris/releases{/id}
          ssh_url: git@github.com:dtrupenn/Tetris.git
          stargazers_url: https://api.github.com/repos/dtrupenn/Tetris/stargazers
          statuses_url: https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}
          subscribers_url: https://api.github.com/repos/dtrupenn/Tetris/subscribers
          subscription_url: https://api.github.com/repos/dtrupenn/Tetris/subscription
          tags_url: https://api.github.com/repos/dtrupenn/Tetris/tags
          teams_url: https://api.github.com/repos/dtrupenn/Tetris/teams
          trees_url: https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}
          clone_url: https://github.com/dtrupenn/Tetris.git
          mirror_url: git:git.example.com/dtrupenn/Tetris
          hooks_url: https://api.github.com/repos/dtrupenn/Tetris/hooks
          svn_url: https://svn.github.com/dtrupenn/Tetris
          forks: 1
          open_issues: 1
          watchers: 1
          has_issues: true
          has_projects: true
          has_pages: true
          has_wiki: true
          has_downloads: true
          archived: true
          disabled: true
          visibility: private
          license:
            key: mit
            name: MIT License
            url: https://api.github.com/licenses/mit
            spdx_id: MIT
            node_id: MDc6TGljZW5zZW1pdA==
            html_url: https://api.github.com/licenses/mit
    topic-search-result-item-paginated:
      value:
        total_count: 6
        incomplete_results: false
        items:
        - name: ruby
          display_name: Ruby
          short_description: Ruby is a scripting language designed for simplified object-oriented programming.
          description: Ruby was developed by Yukihiro "Matz" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.
          created_by: Yukihiro Matsumoto
          released: December 21, 1995
          created_at: '2016-11-28T22:03:59Z'
          updated_at: '2017-10-30T18:16:32Z'
          featured: true
          curated: true
          score: 1
        - name: rails
          display_name: Rails
          short_description: Ruby on Rails (Rails) is a web application framework written in Ruby.
          description: Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.
          created_by: David Heinemeier Hansson
          released: December 13 2005
          created_at: '2016-12-09T17:03:50Z'
          updated_at: '2017-10-30T16:20:19Z'
          featured: true
          curated: true
          score: 1
        - name: python
          display_name: Python
          short_description: Python is a dynamically typed programming language.
          description: Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.
          created_by: Guido van Rossum
          released: February 20, 1991
          created_at: '2016-12-07T00:07:02Z'
          updated_at: '2017-10-27T22:45:43Z'
          featured: true
          curated: true
          score: 1
        - name: jekyll
          display_name: Jekyll
          short_description: Jekyll is a simple, blog-aware static site generator.
          description: Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.
          created_by: Tom Preston-Werner
          released: '2008'
          created_at: '2016-12-16T21:53:08Z'
          updated_at: '2017-10-27T19:00:24Z'
          featured: true
          curated: true
          score: 1
        - name: sass
          display_name: Sass
          short_description: Sass is a stable extension to classic CSS.
          description: Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.
          created_by: Hampton Catlin, Natalie Weizenbaum, Chris Eppstein
          released: November 28, 2006
          created_at: '2016-12-16T21:53:45Z'
          updated_at: '2018-01-16T16:30:40Z'
          featured: true
          curated: true
          score: 1
        - name: homebrew
          display_name: Homebrew
          short_description: Homebrew is a package manager for macOS.
          description: Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.
          created_by: Max Howell
          released: '2009'
          created_at: '2016-12-17T20:30:44Z'
          updated_at: '2018-02-06T16:14:56Z'
          featured: true
          curated: true
          score: 1
    user-search-result-item-paginated:
      value:
        total_count: 12
        incomplete_results: false
        items:
        - login: mojombo
          id: 1
          node_id: MDQ6VXNlcjE=
          avatar_url: https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png
          gravatar_id: ''
          url: https://api.github.com/users/mojombo
          html_url: https://github.com/mojombo
          followers_url: https://api.github.com/users/mojombo/followers
          subscriptions_url: https://api.github.com/users/mojombo/subscriptions
          organizations_url: https://api.github.com/users/mojombo/orgs
          repos_url: https://api.github.com/users/mojombo/repos
          received_events_url: https://api.github.com/users/mojombo/received_events
          type: User
          score: 1
          following_url: https://api.github.com/users/mojombo/following{/other_user}
          gists_url: https://api.github.com/users/mojombo/gists{/gist_id}
          starred_url: https://api.github.com/users/mojombo/starred{/owner}{/repo}
          events_url: https://api.github.com/users/mojombo/events{/privacy}
          site_admin: true
  parameters:
    per-page:
      name: per_page
      description: The number of results per page (max 100). For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 30
    page:
      name: page
      description: The page number of the results to fetch. For more information, see "[Using pagination in the REST API](https://docs.github.com/rest/using-the-rest-api/using-pagination-in-the-rest-api)."
      in: query
      schema:
        type: integer
        default: 1
    order:
      name: order
      description: Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.
      in: query
      required: false
      schema:
        type: string
        enum:
        - desc
        - asc
        default: desc
    issues-advanced-search:
      name: advanced_search
      description: 'Set to `true` to use advanced search.

        Example: `http://api.github.com/search/issues?q={query}&advanced_search=true`'
      in: query
      required: false
      schema:
        type: string
  responses:
    not_found:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    validation_failed:
      description: Validation failed, or the endpoint has been spammed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/validation-error'
    not_modified:
      description: Not modified
    forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/basic-error'
    service_unavailable:
      description: Service unavailable
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
              message:
                type: string
              documentation_url:
                type: string
security: []
tags:
- name: search
  description: Look for stuff on GitHub.
externalDocs:
  description: GitHub v3 REST API
  url: https://docs.github.com/rest/
paths:
  /search/code:
    get:
      summary: Search code
      description: 'Searches for query terms inside of a file. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:


        `q=addClass+in:file+language:js+repo:jquery/jquery`


        This query searches for the keyword `addClass` within a file''s contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.


        Considerations for code search:


        Due to the complexity of searching code, there are a few restrictions on how searches are performed:


        *   Only the _default branch_ is considered. In most cases, this will be the `master` branch.

        *   Only files smaller than 384 KB are searchable.

        *   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing

        language:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is.


        This endpoint requires you to authenticate and limits you to 10 requests per minute.'
      tags:
      - search
      operationId: search/code
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-code
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching code](https://docs.github.com/search-github/searching-on-github/searching-code)" for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        deprecated: true
        description: '**This field is closing down.** Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - indexed
      - name: order
        description: '**This field is closing down.** Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`. '
        in: query
        deprecated: true
        required: false
        schema:
          type: string
          enum:
          - desc
          - asc
          default: desc
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/code-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/code-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
        '503':
          $ref: '#/components/responses/service_unavailable'
        '422':
          $ref: '#/components/responses/validation_failed'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /search/commits:
    get:
      summary: Search commits
      description: 'Find commits via various criteria on the default branch (usually `main`). This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match

        metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:


        `q=repo:octocat/Spoon-Knife+css`'
      tags:
      - search
      operationId: search/commits
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-commits
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching commits](https://docs.github.com/search-github/searching-on-github/searching-commits)" for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - author-date
          - committer-date
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/commit-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/commit-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /search/issues:
    get:
      summary: Search issues and pull requests
      description: '> [!WARNING]

        > **Notice:** Search for issues and pull requests will be overridden by advanced search on September 4, 2025.

        > You can read more about this change on [the GitHub blog](https://github.blog/changelog/2025-03-06-github-issues-projects-api-support-for-issues-advanced-search-and-more/).'
      tags:
      - search
      operationId: search/issues-and-pull-requests
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-issues-and-pull-requests
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching issues and pull requests](https://docs.github.com/search-github/searching-on-github/searching-issues-and-pull-requests)" for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - comments
          - reactions
          - reactions-+1
          - reactions--1
          - reactions-smile
          - reactions-thinking_face
          - reactions-heart
          - reactions-tada
          - interactions
          - created
          - updated
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      - $ref: '#/components/parameters/issues-advanced-search'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/issue-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/issue-search-result-item-paginated'
        '503':
          $ref: '#/components/responses/service_unavailable'
        '422':
          $ref: '#/components/responses/validation_failed'
        '304':
          $ref: '#/components/responses/not_modified'
        '403':
          $ref: '#/components/responses/forbidden'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
        deprecationDate: '2025-03-04'
        removalDate: '2025-09-04'
      deprecated: true
  /search/labels:
    get:
      summary: Search labels
      description: 'Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:


        `q=bug+defect+enhancement&repository_id=64778136`


        The labels that best match the query appear first in the search results.'
      tags:
      - search
      operationId: search/labels
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-labels
      parameters:
      - name: repository_id
        description: The id of the repository.
        in: query
        required: true
        schema:
          type: integer
      - name: q
        description: The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - created
          - updated
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/label-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/label-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
        '404':
          $ref: '#/components/responses/not_found'
        '403':
          $ref: '#/components/responses/forbidden'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /search/repositories:
    get:
      summary: Search repositories
      description: 'Find repositories via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:


        `q=tetris+language:assembly&sort=stars&order=desc`


        This query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.'
      tags:
      - search
      operationId: search/repos
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-repositories
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching for repositories](https://docs.github.com/articles/searching-for-repositories/)" for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - stars
          - forks
          - help-wanted-issues
          - updated
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/repo-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/repo-search-result-item-paginated'
        '503':
          $ref: '#/components/responses/service_unavailable'
        '422':
          $ref: '#/components/responses/validation_failed'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /search/topics:
    get:
      summary: Search topics
      description: 'Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api). See "[Searching topics](https://docs.github.com/articles/searching-topics/)" for a detailed list of qualifiers.


        When searching for topics, you can get text match metadata for the topic''s **short\_description**, **description**, **name**, or **display\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:


        `q=ruby+is:featured`


        This query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results.'
      tags:
      - search
      operationId: search/topics
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-topics
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query).
        in: query
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/topic-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/topic-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
  /search/users:
    get:
      summary: Search users
      description: 'Find users via various criteria. This method returns up to 100 results [per page](https://docs.github.com/rest/guides/using-pagination-in-the-rest-api).


        When searching for users, you can get text match metadata for the issue **login**, public **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://docs.github.com/rest/search/search#text-match-metadata).


        For example, if you''re looking for a list of popular users, you might try this query:


        `q=tom+repos:%3E42+followers:%3E1000`


        This query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers.


        This endpoint does not accept authentication and will only include publicly visible users. As an alternative, you can use the GraphQL API. The GraphQL API requires authentication and will return private users, including Enterprise Managed Users (EMUs), that you are authorized to view. For more information, see "[GraphQL Queries](https://docs.github.com/graphql/reference/queries#search)."'
      tags:
      - search
      operationId: search/users
      externalDocs:
        description: API method documentation
        url: https://docs.github.com/rest/search/search#search-users
      parameters:
      - name: q
        description: The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as the web interface for GitHub. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/rest/search/search#constructing-a-search-query). See "[Searching users](https://docs.github.com/search-github/searching-on-github/searching-users)" for a detailed list of qualifiers.
        in: query
        required: true
        schema:
          type: string
      - name: sort
        description: 'Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub. Default: [best match](https://docs.github.com/rest/search/search#ranking-search-results)'
        in: query
        required: false
        schema:
          type: string
          enum:
          - followers
          - repositories
          - joined
      - $ref: '#/components/parameters/order'
      - $ref: '#/components/parameters/per-page'
      - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: object
                required:
                - total_count
                - incomplete_results
                - items
                properties:
                  total_count:
                    type: integer
                  incomplete_results:
                    type: boolean
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/user-search-result-item'
              examples:
                default:
                  $ref: '#/components/examples/user-search-result-item-paginated'
        '304':
          $ref: '#/components/responses/not_modified'
        '503':
          $ref: '#/components/responses/service_unavailable'
        '422':
          $ref: '#/components/responses/validation_failed'
      x-github:
        githubCloudOnly: false
        enabledForGitHubApps: true
        category: search
        subcategory: search
